[{"D:\\Kamel\\mapviewer-react-jsapi\\src\\index.js":"1","D:\\Kamel\\mapviewer-react-jsapi\\src\\reportWebVitals.js":"2","D:\\Kamel\\mapviewer-react-jsapi\\src\\contexts\\AppContext.js":"3","D:\\Kamel\\mapviewer-react-jsapi\\src\\components\\WebMapView.js":"4","D:\\Kamel\\mapviewer-react-jsapi\\src\\data\\map.js":"5","D:\\Kamel\\mapviewer-react-jsapi\\src\\data\\featureLayers.js":"6","D:\\Kamel\\mapviewer-react-jsapi\\src\\components\\widgets\\Drawing.js":"7","D:\\Kamel\\mapviewer-react-jsapi\\src\\data\\baseMaps.js":"8"},{"size":932,"mtime":1606422151226,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1606411648488,"results":"11","hashOfConfig":"10"},{"size":718,"mtime":1606411648473,"results":"12","hashOfConfig":"10"},{"size":496,"mtime":1606411648467,"results":"13","hashOfConfig":"10"},{"size":747,"mtime":1606427436861,"results":"14","hashOfConfig":"10"},{"size":593,"mtime":1606411648478,"results":"15","hashOfConfig":"10"},{"size":2111,"mtime":1606429198900,"results":"16","hashOfConfig":"10"},{"size":1621,"mtime":1606428354221,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bsp9s6",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Kamel\\mapviewer-react-jsapi\\src\\index.js",[],"D:\\Kamel\\mapviewer-react-jsapi\\src\\reportWebVitals.js",[],["37","38"],"D:\\Kamel\\mapviewer-react-jsapi\\src\\contexts\\AppContext.js",["39"],"import React, { createContext, useEffect, useState } from \"react\";\r\n\r\n\r\nexport const AppContext = createContext({ container: null, setContainer: (a) => {} });\r\nexport const AppProviderProps = { children: null };\r\n\r\n\r\n\r\n// main application provider\r\nexport const AppProvider = ({ children }) => {\r\n  const [container, setContainer] = useState(null);\r\n\r\n  const loadMap = async () => {\r\n    if (container) {\r\n      const mapping = await import(\"../data/map\");\r\n      mapping.initialize(container);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadMap();\r\n  }, [container]);\r\n  \r\n  const value = {\r\n    container,\r\n    setContainer,\r\n  };\r\n\r\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\r\n};\r\n","D:\\Kamel\\mapviewer-react-jsapi\\src\\components\\WebMapView.js",["40"],"import React, { useContext, useEffect, useRef } from 'react';\r\n\r\nimport { AppContext } from '../contexts/AppContext';\r\n\r\nconst WebMapView = () => {\r\n    const mapRef = useRef(null);\r\n    const { setContainer } = useContext(AppContext);\r\n\r\n    // we can let the application context\r\n    // know that the component is ready\r\n    useEffect(() => {\r\n        setContainer(mapRef.current);\r\n    }, [mapRef.current]);\r\n\r\n    return <div className=\"webmap\" ref={mapRef}/>;\r\n};\r\n\r\nexport { WebMapView };\r\n","D:\\Kamel\\mapviewer-react-jsapi\\src\\data\\map.js",[],"D:\\Kamel\\mapviewer-react-jsapi\\src\\data\\featureLayers.js",[],"D:\\Kamel\\mapviewer-react-jsapi\\src\\components\\widgets\\Drawing.js",["41","42"],"D:\\Kamel\\mapviewer-react-jsapi\\src\\data\\baseMaps.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":22,"column":6,"nodeType":"49","endLine":22,"endColumn":17,"suggestions":"50"},{"ruleId":"47","severity":1,"message":"51","line":13,"column":8,"nodeType":"49","endLine":13,"endColumn":24,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":65,"column":11,"nodeType":"55","messageId":"56","endLine":65,"endColumn":25},{"ruleId":"47","severity":1,"message":"57","line":72,"column":6,"nodeType":"49","endLine":72,"endColumn":8,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadMap'. Either include it or remove the dependency array.","ArrayExpression",["61"],"React Hook useEffect has a missing dependency: 'setContainer'. Either include it or remove the dependency array. Mutable values like 'mapRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["62"],"no-unused-vars","'basemapGallery' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'draw'. Either include it or remove the dependency array.",["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [container, loadMap]",{"range":"70","text":"71"},"Update the dependencies array to be: [setContainer]",{"range":"72","text":"73"},"Update the dependencies array to be: [draw]",{"range":"74","text":"75"},[554,565],"[container, loadMap]",[392,408],"[setContainer]",[1828,1830],"[draw]"]