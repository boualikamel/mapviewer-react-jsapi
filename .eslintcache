[{"D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\index.js":"1","D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\reportWebVitals.js":"2","D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\App.js":"3","D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\components\\WebMapView.js":"4","D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\contexts\\AppContext.js":"5","D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\config\\widgetList.js":"6","D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\layouts\\header\\Header.js":"7","D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\config\\map.js":"8","D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\components\\widgets\\Affaire.js":"9","D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\components\\widgets\\Statistique.js":"10","D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\components\\widgets\\Drawing.js":"11","D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\layouts\\widgetLayout\\Widget.js":"12","D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\layouts\\header\\TabPanels.js":"13","D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\config\\featureLayers.js":"14"},{"size":448,"mtime":1606930878916,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1606930878945,"results":"17","hashOfConfig":"16"},{"size":802,"mtime":1607016914764,"results":"18","hashOfConfig":"16"},{"size":412,"mtime":1606930878867,"results":"19","hashOfConfig":"16"},{"size":720,"mtime":1606930878915,"results":"20","hashOfConfig":"16"},{"size":1879,"mtime":1607016886829,"results":"21","hashOfConfig":"16"},{"size":3588,"mtime":1607167022759,"results":"22","hashOfConfig":"16"},{"size":824,"mtime":1606930878905,"results":"23","hashOfConfig":"16"},{"size":156,"mtime":1606930878880,"results":"24","hashOfConfig":"16"},{"size":128,"mtime":1606930878896,"results":"25","hashOfConfig":"16"},{"size":1465,"mtime":1606930878890,"results":"26","hashOfConfig":"16"},{"size":4209,"mtime":1607025971765,"results":"27","hashOfConfig":"16"},{"size":399,"mtime":1607164891666,"results":"28","hashOfConfig":"16"},{"size":593,"mtime":1606930878903,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"frod61",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\index.js",[],"D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\reportWebVitals.js",[],["61","62"],"D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\App.js",[],"D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\components\\WebMapView.js",["63"],"D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\contexts\\AppContext.js",["64"],"import React, { createContext, useEffect, useState } from \"react\";\r\n\r\n\r\nexport const AppContext = createContext({ container: null, setContainer: (a) => {} });\r\nexport const AppProviderProps = { children: null };\r\n\r\n\r\n\r\n// main application provider\r\nexport const AppProvider = ({ children }) => {\r\n  const [container, setContainer] = useState(null);\r\n\r\n  const loadMap = async () => {\r\n    if (container) {\r\n      const mapping = await import(\"../config/map\");\r\n      mapping.initialize(container);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadMap();\r\n  }, [container]);\r\n  \r\n  const value = {\r\n    container,\r\n    setContainer,\r\n  };\r\n\r\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\r\n};\r\n","D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\config\\widgetList.js",["65"],"D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\layouts\\header\\Header.js",["66"],"D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\config\\map.js",[],"D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\components\\widgets\\Affaire.js",[],"D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\components\\widgets\\Statistique.js",[],"D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\components\\widgets\\Drawing.js",["67"],"D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\layouts\\widgetLayout\\Widget.js",["68"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport { Paper, Box, Typography, Fab } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CropFreeIcon from \"@material-ui/icons/CropFree\";\r\n\r\nconst Widget = (props) => {\r\n  const widgetContainerRef = useRef(null);\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const [deltaPosition, setDeltaPosition] = useState({ x: 0, y: 0 });\r\n  const [activeDrags, setActiveDrags] = useState(0);\r\n  const [fixe, setFixe] = useState(true);\r\n  const [dimension, setDimension] = useState({\r\n    height: \"600px\",\r\n    width: \"600px\",\r\n  });\r\n  const [initialDimension, setInitialDimension] = useState({});\r\n  const [initialPosition, setInitialPosition] = useState({ x: 0, y: 0 });\r\n  const [display, setDisplay] = useState(\"flex\");\r\n  const [maximize, setMaximize] = useState(true);\r\n  \r\n  const handleDrag = (e, ui) => {\r\n    const { x, y } = deltaPosition;\r\n    setDeltaPosition({\r\n      x: x + ui.deltaX,\r\n      y: y + ui.deltaY,\r\n    });\r\n    setPosition({ x: y + ui.deltaY, y: y + ui.deltaY });\r\n  };\r\n  const fixWidget = () => {\r\n    setInitialPosition({ ...position });\r\n    setInitialDimension({\r\n      height: widgetContainerRef.current.offsetHeight,\r\n      width: widgetContainerRef.current.offsetWidth,\r\n    });\r\n    setPosition({ x: 0, y: 0 });\r\n    setDeltaPosition({ x: 0, y: 0 });\r\n    setFixe(false);\r\n    setDimension({ height: \"100%\", width: \"600px\" });\r\n  };\r\n  const defixWidget = () => {\r\n    setFixe(true);\r\n    setPosition({ ...initialPosition });\r\n    setDeltaPosition({ ...initialPosition });\r\n    setDimension({\r\n      height: initialDimension.height,\r\n      width: initialDimension.width,\r\n    });\r\n  };\r\n  const onStart = () => {\r\n    let ad = activeDrags + 1;\r\n    setActiveDrags(ad);\r\n    return fixe;\r\n  };\r\n  const onStop = () => {\r\n    let ad = activeDrags - 1;\r\n    setActiveDrags(ad);\r\n    setPosition({ x: deltaPosition.x, y: deltaPosition.y });\r\n  };\r\n  const closeWidget = () => {\r\n    setDisplay(\"none\");\r\n  };\r\n  const maximizeWidget = () => {\r\n    if (maximize) {\r\n      setInitialDimension({\r\n        height: widgetContainerRef.current.offsetHeight,\r\n        width: widgetContainerRef.current.offsetWidth,\r\n      });\r\n      setInitialPosition({ ...position });\r\n      setDimension({ height: \"100%\", width: \"100%\" });\r\n      setPosition({ x: 0, y: 0 });\r\n      setMaximize(!maximize);\r\n    } else {\r\n      setDimension({ ...initialDimension });\r\n      setPosition({ ...initialPosition });\r\n      setMaximize(!maximize);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.fix ? fixWidget() : defixWidget();\r\n  }, [props.fix]);\r\n\r\n  return (\r\n    <Draggable\r\n      handle=\"strong\"\r\n      bounds=\"parent\"\r\n      onDrag={handleDrag}\r\n      onStart={onStart} \r\n      onStop={onStop} \r\n      position={position}\r\n    >\r\n      <Paper\r\n        elevation={3}\r\n        className=\"box no-cursor widgetContainer\"\r\n        style={{\r\n          zIndex: props.zIndex,\r\n          height: dimension.height,\r\n          width: dimension.width,\r\n          display: display,\r\n        }}\r\n        ref={widgetContainerRef}\r\n        onMouseDownCapture={(e) => props.upWidget(props.id)}\r\n      >\r\n        <strong>\r\n          <Box\r\n            className=\"cursor widgetHeader \"\r\n            bgcolor=\"primary.main\"\r\n            color=\"primary.contrastText\"\r\n          >\r\n            <Typography className=\"widgetTitle\">{props.title}</Typography>\r\n\r\n            <div className=\"widgetCustomize\">\r\n              <Fab\r\n                size=\"small\"\r\n                className=\"maximizeWidget\"\r\n                onClick={maximizeWidget}\r\n                aria-label=\"add\"\r\n              >\r\n                <CropFreeIcon />\r\n              </Fab>\r\n              <Fab\r\n                size=\"small\"\r\n                className=\"closeWidget\"\r\n                onClick={closeWidget}\r\n                aria-label=\"add\"\r\n              >\r\n                <CloseIcon />\r\n              </Fab>\r\n            </div>\r\n          </Box>\r\n        </strong>\r\n        <Paper className=\"widgetBody\">{props.children}</Paper>\r\n      </Paper>\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\layouts\\header\\TabPanels.js",["69","70"],"D:\\Kamel\\Kamel Projects\\mapviewer-react-jsapi\\src\\config\\featureLayers.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":11,"column":8,"nodeType":"77","endLine":11,"endColumn":24,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"79","line":22,"column":6,"nodeType":"77","endLine":22,"endColumn":17,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":48,"column":29,"nodeType":"83","messageId":"84","endLine":48,"endColumn":31},{"ruleId":"85","severity":1,"message":"86","line":23,"column":8,"nodeType":"87","messageId":"88","endLine":23,"endColumn":24},{"ruleId":"75","severity":1,"message":"89","line":58,"column":6,"nodeType":"77","endLine":58,"endColumn":8,"suggestions":"90"},{"ruleId":"75","severity":1,"message":"91","line":82,"column":6,"nodeType":"77","endLine":82,"endColumn":17,"suggestions":"92"},{"ruleId":"85","severity":1,"message":"93","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":15},{"ruleId":"85","severity":1,"message":"94","line":2,"column":23,"nodeType":"87","messageId":"88","endLine":2,"endColumn":26},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setContainer'. Either include it or remove the dependency array. Mutable values like 'mapRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["97"],"React Hook useEffect has a missing dependency: 'loadMap'. Either include it or remove the dependency array.",["98"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'ChevronRightIcon' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'draw'. Either include it or remove the dependency array.",["99"],"React Hook useEffect has missing dependencies: 'defixWidget' and 'fixWidget'. Either include them or remove the dependency array.",["100"],"'Paper' is defined but never used.","'Tab' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [setContainer]",{"range":"109","text":"110"},"Update the dependencies array to be: [container, loadMap]",{"range":"111","text":"112"},"Update the dependencies array to be: [draw]",{"range":"113","text":"114"},"Update the dependencies array to be: [defixWidget, fixWidget, props.fix]",{"range":"115","text":"116"},[308,324],"[setContainer]",[556,567],"[container, loadMap]",[1292,1294],"[draw]",[2686,2697],"[defixWidget, fixWidget, props.fix]"]