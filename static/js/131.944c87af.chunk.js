(this["webpackJsonpjsapi-create-react-app"]=this["webpackJsonpjsapi-create-react-app"]||[]).push([[131],{732:function(e,t,a){"use strict";a.r(t);var i=a(0),r=(a(7),a(2)),s=a(6),o=(a(10),a(60)),n=a(1),l=a(21),p=a(3),d=a(13),c=a(5),y=(a(11),a(12),a(9)),u=a(56),b=a(198),h=a(47),f=a(148),O=a(165),j=a(19),g=a(106),m=a(196),v=(a(125),a(329),a(291),a(365),a(368),a(366),a(295),a(244)),I=(a(268),a(356)),w=a(243),L=a(195),F=a(241),S=a(304),_=a(245),T=a(341),E=a(469),x=a(435),P=a(462),D=a(364),A=a(149),U=a(793),R=a(706),q=a(676),N=a(794),Q=a(17);let k=class extends Q.a{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};Object(i.a)([Object(n.b)({type:String,json:{read:!0,write:!0}})],k.prototype,"name",void 0),Object(i.a)([Object(n.b)({type:String,json:{read:!0,write:!0}})],k.prototype,"field",void 0),Object(i.a)([Object(n.b)({type:[Number],json:{read:!0,write:!0}})],k.prototype,"currentRangeExtent",void 0),Object(i.a)([Object(n.b)({type:[Number],json:{read:!0,write:!0}})],k.prototype,"fullRangeExtent",void 0),Object(i.a)([Object(n.b)({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],k.prototype,"type",void 0),k=Object(i.a)([Object(p.a)("esri.layers.support.RangeInfo")],k);var C=k;const G=["3DObject","Point"],V=s.a.getLogger("esri.layers.SceneLayer"),M=Object(E.a)();let K=class extends(Object(q.a)(Object(w.a)(Object(m.a)(Object(L.a)(Object(F.a)(Object(O.a)(f.a))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.definitionExpression=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.cachedDrawingInfo={color:!1},this.editingEnabled=!0,this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e){const t=this.getField(e);return t&&t.domain?t.domain:null}get fieldsIndex(){return new I.a(this.fields)}readNodePages(e,t,a){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:R.c.fromJSON(e,a)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return W[this.profile]||"mesh"}set renderer(e){Object(u.j)(e,this.fields),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){const e=Object(r.i)(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:U.a,{query:t,editing:{supportsGlobalId:a,supportsRollbackOnFailure:i,supportsUploadWithItemId:s},data:{supportsZ:o,supportsM:n,isVersioned:l},operations:{supportsEditing:p,supportsUpdate:d}}=e,c=e.operations.supportsChangeTracking;return{query:t,editing:{supportsGlobalId:a,supportsRollbackOnFailure:i,supportsGeometryUpdate:!1,supportsUploadWithItemId:s},data:{supportsZ:o,supportsM:n,isVersioned:l},operations:{supportsEditing:p&&c,supportsAdd:!1,supportsDelete:!1,supportsUpdate:d&&c}}}get defaultPopupTemplate(){return Object(r.i)(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return Object(r.i)(this.associatedLayer)?this.associatedLayer.displayField:null}readProfile(e,t){const a=t.store.profile;return null!=a&&$[a]?$[a]:(V.error("Unknown or missing profile",{profile:a,layer:this}),"mesh-pyramids")}load(e){const t=Object(r.i)(e)?e.signal:null,a=this.loadFromPortal({supportedTypes:["Scene Service"]},e).then((()=>this._fetchService(t)),(()=>this._fetchService(t))).then((()=>Object(y.b)([this._verifyRootNodeAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t)]))).then((()=>this._validateElevationInfo())).then((()=>this._applyAssociatedLayerOverrides())).then((()=>this._populateFieldUsageInfo())).then((()=>Object(P.a)(this,{origin:"service"},t))).then((()=>Object(u.j)(this.renderer,this.fields)));return this.addResolvingPromise(a),Object(y.u)(this)}createQuery(){const e=new A.a;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((a=>a.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((a=>a.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((a=>a.queryFeatures(e||this.createQuery(),t))).then((e=>{if(e&&e.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((a=>a.queryObjectIds(e||this.createQuery(),t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(V.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return Object(D.a)(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return Object(r.i)(e)&&e.loaded?Object(y.u)(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),Object(r.h)(this.associatedLayer))throw new d.a("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new d.a("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new d.a("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const a=this.fieldsIndex.get(e);if(!a)throw new d.a("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const i of this.statisticsInfo)if(i.name===a.name){const e=Object(c.x)(this.parsedUrl.path,i.href);return Object(h.default)(e,{query:{f:"json"},responseType:"json",signal:t?t.signal:null}).then((e=>e.data))}throw new d.a("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(0,e)}async applyEdits(e,t){const i=await a.e(27).then(a.bind(null,856));if(await this.load(),Object(r.h)(this.associatedLayer))throw new d.a(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),i.applyEdits(this,this.associatedLayer.source,e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&-1===G.indexOf(e.layerType))throw new d.a("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d.a("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new d.a("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});!function(e,t){let a=!1,i=!1;if(null==e)a=!0,i=!0;else{const r=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":a=!0,i=r;break;case"vertex-reference-frame":a=!0,i=!r;break;default:a=!1}}if(!a)throw new d.a("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!i)throw new d.a("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new d.a("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some((t=>t.name===e.name))),a=!!(Object(r.i)(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some((t=>t&&e.name===t.name))),i={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||a,supportsLayerQuery:a};this._fieldUsageInfo[e.name]=i}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides()}_applyAssociatedLayerFieldsOverrides(){if(Object(r.h)(this.associatedLayer)||!this.associatedLayer.fields)return;let e=null;for(const t of this.associatedLayer.fields){const a=this.getField(t.name);a?(!a.domain&&t.domain&&(a.domain=t.domain.clone()),a.editable=t.editable,a.nullable=t.nullable):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(Object(r.h)(this.associatedLayer))return;const e=["popupTemplate","popupEnabled"],t=Object(o.a)(this);for(let a=0;a<e.length;a++){const i=e[a];this._buddyIsMoreImportant(i)&&(t.setDefaultOrigin(this.associatedLayer.originOf(i)),t.set(i,this.associatedLayer[i]),t.setDefaultOrigin("user"))}}async _setAssociatedFeatureLayer(e){if(-1===["mesh-pyramids","points"].indexOf(this.profile))return;const t=new N.a(this.parsedUrl,this.portalItem,e);try{this.associatedLayer=await t.fetch()}catch(e){Object(y.n)(e)||this._logWarningOnPopupEnabled()}}_logWarningOnPopupEnabled(){Object(j.l)(this,["popupTemplate","popupEnabled"],(()=>this.popupEnabled&&null!=this.popupTemplate)).then((()=>()=>{const e=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?V.warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):V.info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}))}_buddyIsMoreImportant(e){if(Object(r.h)(this.associatedLayer))return!1;const t=this.originIdOf(e),a=this.associatedLayer.originIdOf(e);return null!=a&&a<=2?null==t||t<2:null!=a&&a<=3&&(null==t||t<3)}_validateElevationInfo(){const e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"absolute-height"!==e.mode&&V.warn(".elevationInfo=","Mesh scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&V.warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};Object(i.a)([Object(n.b)({types:{key:"type",base:S.a,typeMap:{selection:T.a}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],K.prototype,"featureReduction",void 0),Object(i.a)([Object(n.b)({type:[C],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],K.prototype,"rangeInfos",void 0),Object(i.a)([Object(n.b)({json:{read:!1}})],K.prototype,"associatedLayer",void 0),Object(i.a)([Object(n.b)({type:["show","hide"]})],K.prototype,"listMode",void 0),Object(i.a)([Object(n.b)({type:["ArcGISSceneServiceLayer"]})],K.prototype,"operationalLayerType",void 0),Object(i.a)([Object(n.b)({json:{read:!1},readOnly:!0})],K.prototype,"type",void 0),Object(i.a)([Object(n.b)({...M.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],K.prototype,"fields",void 0),Object(i.a)([Object(n.b)({readOnly:!0,dependsOn:["fields"]})],K.prototype,"fieldsIndex",null),Object(i.a)([Object(n.b)(M.outFields)],K.prototype,"outFields",void 0),Object(i.a)([Object(n.b)({type:R.c,readOnly:!0,json:{read:!1}})],K.prototype,"nodePages",void 0),Object(i.a)([Object(l.a)("service","nodePages",["nodePages","pointNodePages"])],K.prototype,"readNodePages",null),Object(i.a)([Object(n.b)({type:[R.b],readOnly:!0})],K.prototype,"materialDefinitions",void 0),Object(i.a)([Object(n.b)({type:[R.d],readOnly:!0})],K.prototype,"textureSetDefinitions",void 0),Object(i.a)([Object(n.b)({type:[R.a],readOnly:!0})],K.prototype,"geometryDefinitions",void 0),Object(i.a)([Object(n.b)({readOnly:!0})],K.prototype,"serviceUpdateTimeStamp",void 0),Object(i.a)([Object(n.b)({readOnly:!0})],K.prototype,"attributeStorageInfo",void 0),Object(i.a)([Object(n.b)({readOnly:!0})],K.prototype,"statisticsInfo",void 0),Object(i.a)([Object(n.b)({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:!0}})],K.prototype,"definitionExpression",void 0),Object(i.a)([Object(n.b)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],K.prototype,"path",void 0),Object(i.a)([Object(n.b)(g.b)],K.prototype,"elevationInfo",null),Object(i.a)([Object(n.b)({type:String,dependsOn:["profile"]})],K.prototype,"geometryType",null),Object(i.a)([Object(n.b)(g.c)],K.prototype,"labelsVisible",void 0),Object(i.a)([Object(n.b)({type:[_.a],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:x.a},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:x.a},write:!0}})],K.prototype,"labelingInfo",void 0),Object(i.a)([Object(n.b)(g.d)],K.prototype,"legendEnabled",void 0),Object(i.a)([Object(n.b)(g.f)],K.prototype,"opacity",void 0),Object(i.a)([Object(n.b)({types:v.b,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],K.prototype,"renderer",null),Object(i.a)([Object(n.b)({json:{read:!1}})],K.prototype,"cachedDrawingInfo",void 0),Object(i.a)([Object(l.a)("service","cachedDrawingInfo")],K.prototype,"readCachedDrawingInfo",null),Object(i.a)([Object(n.b)({readOnly:!0,json:{read:!1},dependsOn:["associatedLayer.capabilities"]})],K.prototype,"capabilities",null),Object(i.a)([Object(n.b)({type:Boolean,json:{read:!1}})],K.prototype,"editingEnabled",void 0),Object(i.a)([Object(n.b)(g.g)],K.prototype,"popupEnabled",void 0),Object(i.a)([Object(n.b)({type:b.a,json:{name:"popupInfo",write:!0}})],K.prototype,"popupTemplate",void 0),Object(i.a)([Object(n.b)({readOnly:!0,json:{read:!1},dependsOn:["fields","title","attributeStorageInfo","associatedLayer"]})],K.prototype,"defaultPopupTemplate",null),Object(i.a)([Object(n.b)({type:String,json:{read:!1}})],K.prototype,"objectIdField",void 0),Object(i.a)([Object(l.a)("service","objectIdField",["objectIdField","fields"])],K.prototype,"readObjectIdField",null),Object(i.a)([Object(n.b)({type:String,json:{read:!1}})],K.prototype,"globalIdField",void 0),Object(i.a)([Object(l.a)("service","globalIdField",["globalIdField","fields"])],K.prototype,"readGlobalIdField",null),Object(i.a)([Object(n.b)({readOnly:!0,type:String,json:{read:!1},dependsOn:["associatedLayer.displayField"]})],K.prototype,"displayField",null),Object(i.a)([Object(n.b)({type:String,json:{read:!1}})],K.prototype,"profile",void 0),Object(i.a)([Object(l.a)("service","profile",["store.profile"])],K.prototype,"readProfile",null),Object(i.a)([Object(n.b)({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],K.prototype,"normalReferenceFrame",void 0),Object(i.a)([Object(n.b)(g.i)],K.prototype,"screenSizePerspectiveEnabled",void 0),K=Object(i.a)([Object(p.a)("esri.layers.SceneLayer")],K);const $={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},W={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};var z=K;t.default=z}}]);