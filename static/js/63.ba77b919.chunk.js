(this["webpackJsonpjsapi-create-react-app"]=this["webpackJsonpjsapi-create-react-app"]||[]).push([[63],{550:function(e,a,t){"use strict";t.r(a),t.d(a,"fromItem",(function(){return y})),t.d(a,"selectLayerClassPath",(function(){return o}));var n=t(2),r=t(13),l=t(9),i=t(47),u=t(328),s=t(698),c=t(659);function y(e){return!e.portalItem||e.portalItem instanceof u.default||(e={...e,portalItem:new u.default(e.portalItem)}),(a=e.portalItem,a.load().then(o).then(d)).then((a=>{const t={portalItem:e.portalItem,...a.properties},n=a.constructor;return Object(l.u)(new n(t))}));var a}function o(e){switch(e.type){case"Map Service":return function(e){return function(e){return h(e.url).then((e=>e.tileInfo))}(e).then((e=>e?{className:"TileLayer"}:{className:"MapImageLayer"}))}(e);case"Feature Service":return function(e){return f(e).then((e=>{if("object"==typeof e){const a={};return null!=e.id&&(a.layerId=e.id),{className:"FeatureLayer",properties:a}}return{className:"GroupLayer"}}))}(e);case"Feature Collection":return async function(e){return await e.load(),Object(s.a)(e,"Map Notes")?{className:"MapNotesLayer"}:Object(s.a)(e,"Route Layer")?{className:"RouteLayer"}:1===m(await e.fetchData())?{className:"FeatureLayer"}:{className:"GroupLayer"}}(e);case"Scene Service":return function(e){return f(e).then((a=>{if("object"==typeof a){const t={};let n;if(null!=a.id?(t.layerId=a.id,n=`${e.url}/layers/${a.id}`):n=e.url,Array.isArray(e.typeKeywords)&&e.typeKeywords.length>0){const a={IntegratedMesh:"IntegratedMeshLayer","3DObject":"SceneLayer",Point:"SceneLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};for(const t of Object.keys(a))if(-1!==e.typeKeywords.indexOf(t))return{className:a[t]}}return h(n).then((e=>{let a="SceneLayer";const n={Point:"SceneLayer","3DObject":"SceneLayer",IntegratedMesh:"IntegratedMeshLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};return e&&e.layerType&&n[e.layerType]&&(a=n[e.layerType]),{className:a,properties:t}}))}return{className:"GroupLayer"}}))}(e);case"Image Service":return async function(e){var a,t,n;await e.load();const r=null!=(a=null==(t=e.typeKeywords)?void 0:t.map((e=>e.toLowerCase())))?a:[];if(r.indexOf("elevation 3d layer")>-1)return{className:"ElevationLayer"};if(r.indexOf("tiled imagery")>-1)return{className:"ImageryTileLayer"};const l=await e.fetchData(),i=null==l?void 0:l.layerType;if("ArcGISTiledImageServiceLayer"===i)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===i)return{className:"ImageryLayer"};return"map"===(null==(n=(await h(e.url)).cacheType)?void 0:n.toLowerCase())?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}(e);case"Stream Service":return{className:"StreamLayer"};case"Vector Tile Service":return{className:"VectorTileLayer"};case"KML":return{className:"KMLLayer"};case"WMTS":return{className:"WMTSLayer"};case"WMS":return{className:"WMSLayer"};default:return Object(l.t)(new r.a("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type}))}}function d(e){return(0,c.a[e.className])().then((a=>({constructor:a,properties:e.properties})))}function f(e){return!e.url||e.url.match(/\/\d+$/)?Object(l.u)({}):e.load().then((()=>e.fetchData())).then((a=>m(a)>0?p(a):h(e.url).then(p)))}function p(e){return 1===m(e)&&{id:Object(n.o)(L(e))}}function L(e){const a=e.layers;if(a&&a.length)return a[0].id;const t=e.tables;return t&&t.length?t[0].id:null}function m(e){var a,t,n,r;return(null!=(a=null==e||null==(t=e.layers)?void 0:t.length)?a:0)+(null!=(n=null==e||null==(r=e.tables)?void 0:r.length)?n:0)}function h(e){return Object(i.default)(e,{responseType:"json",query:{f:"json"}}).then((e=>e.data))}},659:function(e,a,t){"use strict";t.d(a,"a",(function(){return n}));const n={BingMapsLayer:async()=>(await t.e(125).then(t.bind(null,735))).default,BuildingSceneLayer:async()=>(await Promise.all([t.e(19),t.e(126)]).then(t.bind(null,722))).default,CSVLayer:async()=>(await t.e(69).then(t.bind(null,734))).default,ElevationLayer:async()=>(await Promise.resolve().then(t.bind(null,465))).default,FeatureLayer:async()=>(await Promise.resolve().then(t.bind(null,358))).default,GroupLayer:async()=>(await t.e(26).then(t.bind(null,688))).default,GeoRSSLayer:async()=>(await t.e(127).then(t.bind(null,707))).default,ImageryLayer:async()=>(await Promise.all([t.e(6),t.e(10),t.e(16),t.e(70)]).then(t.bind(null,723))).default,ImageryTileLayer:async()=>(await Promise.all([t.e(6),t.e(10),t.e(16),t.e(61)]).then(t.bind(null,721))).default,IntegratedMeshLayer:async()=>(await t.e(52).then(t.bind(null,727))).default,KMLLayer:async()=>(await t.e(71).then(t.bind(null,733))).default,MapImageLayer:async()=>(await t.e(24).then(t.bind(null,705))).default,MapNotesLayer:async()=>(await t.e(128).then(t.bind(null,711))).default,OpenStreetMapLayer:async()=>(await t.e(129).then(t.bind(null,712))).default,PointCloudLayer:async()=>(await t.e(44).then(t.bind(null,724))).default,RouteLayer:async()=>(await t.e(130).then(t.bind(null,713))).default,SceneLayer:async()=>(await Promise.all([t.e(19),t.e(131)]).then(t.bind(null,732))).default,StreamLayer:async()=>(await t.e(132).then(t.bind(null,731))).default,TileLayer:async()=>(await Promise.resolve().then(t.bind(null,463))).default,UnknownLayer:async()=>(await t.e(133).then(t.bind(null,714))).default,UnsupportedLayer:async()=>(await t.e(134).then(t.bind(null,715))).default,VectorTileLayer:async()=>(await Promise.resolve().then(t.bind(null,464))).default,WebTileLayer:async()=>(await Promise.resolve().then(t.bind(null,331))).default,WMSLayer:async()=>(await t.e(57).then(t.bind(null,730))).default,WMTSLayer:async()=>(await t.e(135).then(t.bind(null,725))).default}},698:function(e,a,t){"use strict";function n(e,a){return!!e.typeKeywords&&e.typeKeywords.indexOf(a)>-1}t.d(a,"a",(function(){return n}))}}]);