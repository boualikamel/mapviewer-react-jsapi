(this["webpackJsonpjsapi-create-react-app"]=this["webpackJsonpjsapi-create-react-app"]||[]).push([[74],{553:function(e,a,n){"use strict";n.r(a),n.d(a,"fromUrl",(function(){return u}));var t=n(2),r=n(13),l=n(47),s=n(139),i=n(659);async function u(e){const a=await async function(e){const a=Object(s.e)(e);if(Object(t.h)(a))throw new r.a("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:e});const{serverType:n,sublayer:l}=a;let u;const y={FeatureServer:"FeatureLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer"};switch(n){case"MapServer":u=null!=l?"FeatureLayer":async function(e){return(await c(e)).tileInfo}(e).then((e=>e?"TileLayer":"MapImageLayer"));break;case"ImageServer":u=c(e).then((e=>{const a=e.tileInfo&&e.tileInfo.format;return e.tileInfo?!a||"LERC"!==a.toUpperCase()||e.cacheType&&"elevation"!==e.cacheType.toLowerCase()?"ImageryTileLayer":"ElevationLayer":"ImageryLayer"}));break;case"SceneServer":u=c(a.url.path).then((e=>{const a={Point:"SceneLayer","3DObject":"SceneLayer",IntegratedMesh:"IntegratedMeshLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};if(e&&Array.isArray(e.layers)&&e.layers.length>0){const n=e.layers[0].layerType;if(null!=a[n])return a[n]}return"SceneLayer"}));break;default:u=y[n]}const d="FeatureServer"===n,f={parsedUrl:a,Constructor:null,layerOrTableId:d?l:null,sublayerIds:null,tableIds:null},b=await u;if({FeatureLayer:!0,SceneLayer:!0}[b]&&null==l){const a=await async function(e,a){var n,t;let r,l=!1;if("FeatureServer"===a){const a=await async function(e){var a,n;let t=await c(e);t=t||{},t.layers=(null==(a=t.layers)?void 0:a.filter(o))||[];const r={serviceJSON:t};if(t.currentVersion<10.5)return r;const l=await c(e+"/layers");return r.layersJSON={layers:(null==l||null==(n=l.layers)?void 0:n.filter(o))||[],tables:(null==l?void 0:l.tables)||[]},r}(e);l=!!a.layersJSON,r=a.layersJSON||a.serviceJSON}else r=await c(e);const s=null==(n=r)?void 0:n.layers,i=null==(t=r)?void 0:t.tables;return{layerIds:(null==s?void 0:s.map((e=>e.id)).reverse())||[],tableIds:(null==i?void 0:i.map((e=>e.id)).reverse())||[],layerInfos:l?s:[],tableInfos:l?i:[]}}(e,n);if(d&&(f.sublayerInfos=a.layerInfos,f.tableInfos=a.tableInfos),1!==a.layerIds.length+a.tableIds.length)f.sublayerIds=a.layerIds,f.tableIds=a.tableIds;else if(d){var h,w;f.layerOrTableId=null!=(h=a.layerIds[0])?h:a.tableIds[0],f.sourceJSON=null!=(w=a.layerInfos[0])?w:a.tableInfos[0]}}return f.Constructor=await async function(e){return(0,i.a[e])()}(b),f}(e.url),l={...e.properties,url:e.url};if(!a.sublayerIds)return null!=a.layerOrTableId&&(l.layerId=a.layerOrTableId,l.sourceJSON=a.sourceJSON),new a.Constructor(l);const u=new(0,(await n.e(26).then(n.bind(null,688))).default)({title:a.parsedUrl.title});return function(e,a,n){function r(e,r){const l={...n,layerId:e,sublayerTitleMode:"service-name"};return Object(t.i)(r)&&(l.sourceJSON=r),new a.Constructor(l)}a.sublayerIds.forEach((n=>{const t=r(n,y(a.sublayerInfos,n));e.add(t)})),a.tableIds.forEach((n=>{const t=r(n,y(a.tableInfos,n));e.tables.add(t)}))}(u,a,l),u}function y(e,a){return e?e.find((e=>e.id===a)):null}function o(e){return!e.type||"Feature Layer"===e.type}async function c(e){return(await Object(l.default)(e,{responseType:"json",query:{f:"json"}})).data}},659:function(e,a,n){"use strict";n.d(a,"a",(function(){return t}));const t={BingMapsLayer:async()=>(await n.e(125).then(n.bind(null,735))).default,BuildingSceneLayer:async()=>(await Promise.all([n.e(19),n.e(126)]).then(n.bind(null,722))).default,CSVLayer:async()=>(await n.e(69).then(n.bind(null,734))).default,ElevationLayer:async()=>(await Promise.resolve().then(n.bind(null,465))).default,FeatureLayer:async()=>(await Promise.resolve().then(n.bind(null,358))).default,GroupLayer:async()=>(await n.e(26).then(n.bind(null,688))).default,GeoRSSLayer:async()=>(await n.e(127).then(n.bind(null,707))).default,ImageryLayer:async()=>(await Promise.all([n.e(6),n.e(10),n.e(16),n.e(70)]).then(n.bind(null,723))).default,ImageryTileLayer:async()=>(await Promise.all([n.e(6),n.e(10),n.e(16),n.e(61)]).then(n.bind(null,721))).default,IntegratedMeshLayer:async()=>(await n.e(52).then(n.bind(null,727))).default,KMLLayer:async()=>(await n.e(71).then(n.bind(null,733))).default,MapImageLayer:async()=>(await n.e(24).then(n.bind(null,705))).default,MapNotesLayer:async()=>(await n.e(128).then(n.bind(null,711))).default,OpenStreetMapLayer:async()=>(await n.e(129).then(n.bind(null,712))).default,PointCloudLayer:async()=>(await n.e(44).then(n.bind(null,724))).default,RouteLayer:async()=>(await n.e(130).then(n.bind(null,713))).default,SceneLayer:async()=>(await Promise.all([n.e(19),n.e(131)]).then(n.bind(null,732))).default,StreamLayer:async()=>(await n.e(132).then(n.bind(null,731))).default,TileLayer:async()=>(await Promise.resolve().then(n.bind(null,463))).default,UnknownLayer:async()=>(await n.e(133).then(n.bind(null,714))).default,UnsupportedLayer:async()=>(await n.e(134).then(n.bind(null,715))).default,VectorTileLayer:async()=>(await Promise.resolve().then(n.bind(null,464))).default,WebTileLayer:async()=>(await Promise.resolve().then(n.bind(null,331))).default,WMSLayer:async()=>(await n.e(57).then(n.bind(null,730))).default,WMTSLayer:async()=>(await n.e(135).then(n.bind(null,725))).default}}}]);