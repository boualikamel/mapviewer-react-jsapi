(this["webpackJsonpjsapi-create-react-app"]=this["webpackJsonpjsapi-create-react-app"]||[]).push([[128],{711:function(e,t,a){"use strict";a.r(t);var r=a(0),i=(a(7),a(6),a(10),a(1)),o=a(21),n=a(3),l=(a(5),a(11),a(12),a(30)),c=a(46),p=(a(69),a(27)),s=a(148),b=a(165),y=a(196),d=a(242),O=a(195),j=a(241),u=a(358),m=a(432);let h=class extends(Object(d.a)(Object(j.a)(Object(y.a)(Object(O.a)(Object(b.a)(s.a)))))){constructor(e){super(e),this.capabilities={operations:{supportsEditing:!0}},this.legendEnabled=!1,this.lineGraphics=new m.b,this.opacity=1,this.pointGraphics=new m.b,this.polygonGraphics=new m.b,this.textGraphics=new m.b,this.type="map-notes"}readFullExtent(e,t){if(!t.layers.length)return new c.a({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:l.a.WGS84});const a=l.a.fromJSON(t.layers[0].layerDefinition.spatialReference);return t.layers.reduce(((e,t)=>{const a=t.layerDefinition.extent;return a?c.a.fromJSON(a).union(e):e}),new c.a({spatialReference:a}))}readCapabilities(e,t){return{operations:{supportsEditing:!t.layers.some((e=>!!e.layerDefinition.drawingInfo))}}}readFeatureCollections(e,t,a){const r=t.layers.map((e=>{const t=new u.default;return t.read(e,a),t}));return new p.a({items:r})}readMinScale(e,t){for(const a of t.layers)if(null!=a.layerDefinition.minScale)return a.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const a of t.layers)if(null!=a.layerDefinition.maxScale)return a.layerDefinition.maxScale;return 0}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}read(e,t){"featureCollection"in e&&super.read(e.featureCollection,t),super.read(e,t)}};Object(r.a)([Object(o.a)(["web-map","portal-item"],"fullExtent",["layers"])],h.prototype,"readFullExtent",null),Object(r.a)([Object(i.b)({readOnly:!0})],h.prototype,"capabilities",void 0),Object(r.a)([Object(o.a)(["portal-item","web-map"],"capabilities",["layers"])],h.prototype,"readCapabilities",null),Object(r.a)([Object(i.b)({readOnly:!0})],h.prototype,"featureCollections",void 0),Object(r.a)([Object(o.a)(["web-map","portal-item"],"featureCollections",["layers"])],h.prototype,"readFeatureCollections",null),Object(r.a)([Object(i.b)({readOnly:!0,json:{origins:{service:{read:{enabled:!1}}},name:"showLegend",write:!0}})],h.prototype,"legendEnabled",void 0),Object(r.a)([Object(i.b)(Object(m.c)("lineGraphics"))],h.prototype,"lineGraphics",void 0),Object(r.a)([Object(i.b)({type:["show","hide"]})],h.prototype,"listMode",void 0),Object(r.a)([Object(o.a)(["web-map","portal-item"],"minScale",["layers"])],h.prototype,"readMinScale",null),Object(r.a)([Object(o.a)(["web-map","portal-item"],"maxScale",["layers"])],h.prototype,"readMaxScale",null),Object(r.a)([Object(i.b)({type:Number,json:{name:"opacity",write:!0}})],h.prototype,"opacity",void 0),Object(r.a)([Object(i.b)(Object(m.c)("pointGraphics"))],h.prototype,"pointGraphics",void 0),Object(r.a)([Object(i.b)(Object(m.c)("polygonGraphics"))],h.prototype,"polygonGraphics",void 0),Object(r.a)([Object(i.b)(Object(m.c)("textGraphics"))],h.prototype,"textGraphics",void 0),Object(r.a)([Object(i.b)({readOnly:!0,json:{read:!1}})],h.prototype,"type",void 0),h=Object(r.a)([Object(n.a)("esri.layers.MapNotesLayer")],h);var f=h;t.default=f}}]);