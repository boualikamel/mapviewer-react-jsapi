(this["webpackJsonpjsapi-create-react-app"]=this["webpackJsonpjsapi-create-react-app"]||[]).push([[61],{672:function(e,t,i){"use strict";i.d(t,"a",(function(){return x})),i.d(t,"b",(function(){return y})),i.d(t,"c",(function(){return h})),i.d(t,"d",(function(){return m})),i.d(t,"e",(function(){return p})),i.d(t,"f",(function(){return f})),i.d(t,"g",(function(){return b}));var n=i(13),a=i(34),r=i(44),s=i(33),o=i(46),l=(i(69),i(50)),c=i(102);const u=function(e,t){const i=(e.isWGS84||e.isWebMercator)&&(t.isWGS84||t.isWebMercator);return!(e.equals(t)||i)};async function h(){if(Object(c.e)()||!Object(c.f)())return null;await Object(c.g)()}function f(e,t,i,a=null){if(e.spatialReference.equals(t))return e;const s=u(e.spatialReference,t);if(s&&!Object(c.e)())throw new n.a("rasterprojectionhelper-projectResolution","projection engine is not loaded");const l=i.center,h=new o.a({xmin:l.x-e.x/2,xmax:l.x+e.x/2,ymin:l.y-e.y/2,ymax:l.y+e.y/2,spatialReference:e.spatialReference}),f=s?Object(c.h)(h,t,a):Object(r.d)(h,t);return null==f?null:{x:f.xmax-f.xmin,y:f.ymax-f.ymin}}function d(e,t=.01){return Object(l.c)(e)?t/Object(l.c)(e):0}function p(e,t,i=null,s=!0){const o=e.spatialReference;if(o.equals(t))return e;const l=u(o,t);if(l&&!Object(c.e)())throw new n.a("rasterprojectionhelper-projectResolution","projection engine is not loaded");const h=l?Object(c.h)(e,t,i):Object(r.d)(e,t);if(h&&s&&t.isGeographic){var f,p;const[t,i]=o.isWebMercator?Object(a.d)(o).origin:null!=(f=null==(p=Object(a.d)(o))?void 0:p.valid)?f:[],n=d(o);n&&null!=t&&null!=i&&(Math.abs(e.x-t)<n&&Math.abs(180-h.x)<5e-4?h.x-=360:Math.abs(e.x-i)<n&&Math.abs(180+h.x)<5e-4&&(h.x+=360))}return h}function m(e,t,i=null,o=!0){var l,h,f,m;const y=e.spatialReference;if(y.equals(t))return e;const b=u(y,t);if(b&&!Object(c.e)())throw new n.a("rasterprojectionhelper-projectExtent","projection engine is not loaded");const x=b?Object(c.h)(e,t,i):Object(r.d)(e,t);let[g,w]=null!=(l=null==(h=Object(a.d)(y))?void 0:h.origin)?l:[];if(x&&o&&y.isWebMercator&&t.isGeographic&&null!=g&&null!=w){const n=.001,a=1e3;if(Math.abs(e.xmin-g)<n&&Math.abs(w-e.xmax)>a&&Math.abs(180-x.xmax)<5e-4){x.xmin=-180;const n=[];n.push(new s.a(e.xmax,e.ymin,y)),n.push(new s.a(e.xmax,(e.ymin+e.ymax)/2,y)),n.push(new s.a(e.xmax,e.ymax,y));const a=n.map((e=>p(e,t,i))).filter((e=>!isNaN(null==e?void 0:e.x))).map((e=>e.x));x.xmax=Math.max.apply(null,a)}if(Math.abs(e.xmax-w)<n&&Math.abs(g-e.xmin)>a&&Math.abs(180+x.xmin)<5e-4){x.xmax=180;const n=[];n.push(new s.a(e.xmin,e.ymin,y)),n.push(new s.a(e.xmin,(e.ymin+e.ymax)/2,y)),n.push(new s.a(e.xmin,e.ymax,y));const a=n.map((e=>p(e,t,i))).filter((e=>!isNaN(null==e?void 0:e.x))).map((e=>e.x));x.xmin=Math.min.apply(null,a)}}[g,w]=t.isWebMercator?Object(a.d)(t).origin:null!=(f=null==(m=Object(a.d)(t))?void 0:m.valid)?f:[];const O=d(t);return O&&null!=g&&null!=w&&(Math.abs(x.xmin-g)<O&&(x.xmin=g),Math.abs(x.xmax-w)<O&&(x.xmax=w)),x}function y(e,t,i,r=null,o=null,l=!1,h=[32,32]){var f,d;if(u(e.spatialReference,t.spatialReference)&&!Object(c.e)())throw new n.a("rasterprojectionhelper-projectResolution","projection engine is not loaded");if(!(e&&t&&i))return null;const{xmin:m,ymin:y,xmax:b,ymax:x}=e,g=e.spatialReference,w=t.spatialReference,[O,I]=null!=(f=null==(d=Object(a.d)(g))?void 0:d.valid)?f:[],v={x:h[0]*i.x,y:h[1]*i.y},j={cols:Math.ceil((b-m)/v.x-.1)+1,rows:Math.ceil((x-y)/v.y-.1)+1},R=v.x,M=v.y,T=[];let S,_=!1;for(let n=0;n<j.cols;n++){const e=[];for(let i=0;i<j.rows;i++){let a=p(new s.a({x:m+R*n,y:x-M*i,spatialReference:g}),w,r);o&&(a=o.inverseTransform(a)),e.push(a),n>0&&l&&a&&S[i]&&null!=O&&a.x<S[i].x&&(a.x+=I-O),a?(T.push((a.x-t.xmin)/(t.xmax-t.xmin)),T.push((t.ymax-a.y)/(t.ymax-t.ymin))):(T.push(NaN),T.push(NaN),_=!0)}S=e}const C=function(e,t){const i=(e[0]+e[4]+e[4*t.cols]+e[4*t.cols+4])/4,n=(e[1]+e[5]+e[4*t.rows+1]+e[4*t.rows+5])/4;return[Math.abs(i-e[2*t.rows+2]),Math.abs(n-e[2*t.rows+3])]}(T,j),k=new Float32Array((j.cols-1)*(j.rows-1)*2*6),F=new Float32Array([-0,-1,1,-1,1,-0,1,-0,-0]),P=new Float32Array([-1,1,0,0,-1,1,1,0,0]);for(let n=0;n<j.cols-1;n++){for(let e=0;e<j.rows-1;e++){let t=n*j.rows*2+2*e;const i=T[t],a=T[t+1],r=T[t+2],s=T[t+3];t+=2*j.rows;const o=T[t],l=T[t+1],c=T[t+2],u=T[t+3];let h=0,f=12*(e*(j.cols-1)+n);for(let e=0;e<3;e++)k[f++]=F[h++]*i+F[h++]*r+F[h++]*c;h=0;for(let e=0;e<3;e++)k[f++]=F[h++]*a+F[h++]*s+F[h++]*u;h=0;for(let e=0;e<3;e++)k[f++]=P[h++]*i+P[h++]*o+P[h++]*c;h=0;for(let e=0;e<3;e++)k[f++]=P[h++]*a+P[h++]*l+P[h++]*u}if(_)for(let e=0;e<k.length;e++)isNaN(k[e])&&(k[e]=-1)}return{offsets:T,error:C,coefficients:k,spacing:h,size:[j.cols-1,j.rows-1]}}function b(e,t,i){const n=Math.log(e.x/t.pixelSize.x)/Math.LN2,a=Math.log(e.y/t.pixelSize.y)/Math.LN2,r=t.storageInfo.maximumPyramidLevel||0;let o="down"===i?Math.floor(Math.min(n,a)):"up"===i?Math.ceil(Math.max(n,a)):Math.round((n+a)/2),l=!1;o<0?o=0:o>r&&(l=o>r+3,o=r);const c=Math.pow(2,o);return{pyramidLevel:o,pyramidResolution:new s.a({x:c*t.nativePixelSize.x,y:c*t.nativePixelSize.y,spatialReference:t.spatialReference}),excessiveReading:l}}function x(e,t,i=512,n=!0){const{extent:a,spatialReference:r,pixelSize:o}=e,c=f(new s.a({x:o.x,y:o.y,spatialReference:r}),t,a);if(null==c)return{projectedPixelSize:null,scales:null,srcResolutions:null};const u=(c.x+c.y)/2,h=Object(l.c)(t),d=u*h*96*39.37,p=t.isGeographic?512/i*295828763.7958547:512/i*591657527.591555;let y=!1;if(n&&(t.isGeographic||t.isWebMercator)){const e=m(a,t);y=e.xmin*e.xmax<0}let b,x=d;if(y){x=p;const e=x/(96*h*39.37);b=f(new s.a({x:e,y:e,spatialReference:t}),r,a)}else{b={x:o.x,y:o.y};const t=Math.ceil(Math.log(Math.min(e.width,e.height)/32)/Math.LN2);let i=0;for(;x<.5005*p&&i<t;)i++,x*=2,b.x*=2,b.y*=2;Math.max(x,p)/Math.min(x,p)<=1.001&&(x=p)}const g=[],w=[],O=Math.min(70.5310735,d)/1.001;for(;x>=O;)g.push(x),w.push({x:b.x,y:b.y}),x/=2,b.x/=2,b.y/=2;return{projectedPixelSize:c,scales:g,srcResolutions:w}}},721:function(e,t,i){"use strict";i.r(t);var n=i(0),a=(i(7),i(2)),r=i(6),s=i(10),o=i(1),l=i(36),c=i(31),u=i(21),h=i(3),f=i(13),d=i(5),p=(i(11),i(12),i(9)),m=i(198),y=i(148),b=i(165),x=i(106),g=i(196),w=i(708),O=i(197),I=i(242),v=i(195),j=i(287),R=i(241),M=i(364),T=i(32),S=i(34),_=i(30),C=i(46),k=(i(69),i(47)),F=i(139),P=i(99),B=i(767),D=i(796),z=i(802),N=i(774);const L=r.a.getLogger("esri.layers.mixins.ImageryTileMixin"),H=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e)}set url(e){this._set("url",Object(F.f)(e,L))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!(i&&i.pixels&&i.pixels.length>0))return null;let n;this.updateRenderer();const a=this._rasterJobHandler.instance,{bandIds:r}=this;return n=a?await a.symbolize({...e,simpleStretchParams:t,bandIds:r}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:r}),n}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t){if(!this.loaded)return null;const i=Object(S.d)(e);return P.a.create({size:256,spatialReference:e,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,n={}){if(n.requestAsImageElement){const a=this.getTileUrl(e,t,i);return Object(k.default)(a,{responseType:"image",query:{sliceId:this._sliceId,_ts:n.timestamp},signal:n.signal}).then((e=>e.data))}if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;n={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...n}}return"raster-shaded-relief"===this.renderer.type&&(n={buffer:{cols:1,rows:1},...n}),this.raster.fetchTile(e,t,i,n)}async fetchPixels(e,t,i,n){if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;n={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...n}}return this.raster.fetchPixels(e,t,i,n)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t={...t,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new D.a;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=Object(z.c)(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(Object(a.i)(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],i=[];t.dimensions.forEach((e=>{i.push(new B.a({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))})),this.multidimensionalDefinition=i}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t;this.bandIds||(this.bandIds=Object(z.b)(e)),this.renderer||(this.renderer=Object(z.a)(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)?void 0:t[0].variableName})),this.symbolizer?(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.rasterInfo=e):this.symbolizer=new N.a({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||L.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")}};return Object(n.a)([Object(o.b)()],t.prototype,"_cachedRendererJson",void 0),Object(n.a)([Object(o.b)()],t.prototype,"_sliceId",void 0),Object(n.a)([Object(o.b)()],t.prototype,"_compatibleFullExtent",void 0),Object(n.a)([Object(o.b)()],t.prototype,"_rasterJobHandler",void 0),Object(n.a)([Object(o.b)()],t.prototype,"bandIds",void 0),Object(n.a)([Object(o.b)()],t.prototype,"copyright",void 0),Object(n.a)([Object(o.b)({type:C.a}),Object(T.a)("rasterInfo.extent")],t.prototype,"fullExtent",void 0),Object(n.a)([Object(o.b)()],t.prototype,"interpolation",void 0),Object(n.a)([Object(o.b)({type:[B.a]})],t.prototype,"multidimensionalDefinition",null),Object(n.a)([Object(o.b)()],t.prototype,"raster",void 0),Object(n.a)([Object(o.b)({readOnly:!0}),Object(T.a)("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),Object(n.a)([Object(o.b)()],t.prototype,"sourceJSON",void 0),Object(n.a)([Object(o.b)({type:_.a}),Object(T.a)("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),Object(n.a)([Object(o.b)({type:P.a,dependsOn:["rasterInfo"]}),Object(T.a)("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),Object(n.a)([Object(o.b)(x.j)],t.prototype,"url",null),Object(n.a)([Object(o.b)({types:w.a})],t.prototype,"renderer",null),Object(n.a)([Object(o.b)()],t.prototype,"symbolizer",void 0),t=Object(n.a)([Object(h.a)("esri.layers.ImageryTileMixin")],t),t};var A=i(33),J=i(240),E=i(660),q=i(17);let U=class extends q.a{constructor(){super(...arguments),this.blockWidth=void 0,this.blockHeight=void 0,this.compression=null,this.origin=null,this.firstPyramidLevel=null,this.maximumPyramidLevel=null,this.pyramidScalingFactor=2,this.pyramidBlockWidth=null,this.pyramidBlockHeight=null,this.isVirtualTileInfo=!1,this.tileInfo=null,this.blockBoundary=null}};Object(n.a)([Object(o.b)({type:Number,json:{write:!0}})],U.prototype,"blockWidth",void 0),Object(n.a)([Object(o.b)({type:Number,json:{write:!0}})],U.prototype,"blockHeight",void 0),Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],U.prototype,"compression",void 0),Object(n.a)([Object(o.b)({type:A.a,json:{write:!0}})],U.prototype,"origin",void 0),Object(n.a)([Object(o.b)({type:Number,json:{write:!0}})],U.prototype,"firstPyramidLevel",void 0),Object(n.a)([Object(o.b)({type:Number,json:{write:!0}})],U.prototype,"maximumPyramidLevel",void 0),Object(n.a)([Object(o.b)()],U.prototype,"pyramidScalingFactor",void 0),Object(n.a)([Object(o.b)({type:Number,json:{write:!0}})],U.prototype,"pyramidBlockWidth",void 0),Object(n.a)([Object(o.b)({type:Number,json:{write:!0}})],U.prototype,"pyramidBlockHeight",void 0),Object(n.a)([Object(o.b)({type:Boolean,json:{write:!0}})],U.prototype,"isVirtualTileInfo",void 0),Object(n.a)([Object(o.b)({json:{write:!0}})],U.prototype,"tileInfo",void 0),Object(n.a)([Object(o.b)()],U.prototype,"blockBoundary",void 0),U=Object(n.a)([Object(h.a)("esri.layers.support.RasterStorageInfo")],U);var W=U,G=i(166),$=i(728),V=i(641),Y=i(672),X=i(773);let K=class extends(Object(G.b)(q.a)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=Object(Y.c)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:P.a.create(),...e.ioConfig}}),e}set url(e){this._set("url",Object(F.f)(e,r.a.getLogger(this.declaredClass)))}async open(e){throw new f.a("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,n={}){var r;const{tileInfo:s}=n,o=s.lodAt(e),l=new A.a({x:o.resolution,y:o.resolution,spatialReference:s.spatialReference}),c=this.getTileExtent(l,t,i,s);return null!=(r=n.multidimensionalDefinition)&&r.length&&Object(a.i)(this.rasterInfo.multidimensionalInfo)&&null==n.sliceId&&(n={...n,sliceId:this.getSliceIndex(n.multidimensionalDefinition)||0}),this.fetchPixels(c,s.size[0],s.size[1],n)}async identify(e,t={}){const{spatialReference:i,extent:n}=this.rasterInfo,{datumTransformation:r}=t,s=Object(Y.e)(e,i,r);if(!n.intersects(s))return{location:s,value:null};let o=0;if(t.srcResolution)o=Object(Y.g)(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(o=await this.computeBestPyramidLevelForLocation(e,t),null==o)return{location:s,value:null};const l=this.identifyPixelLocation(s,o,null);if(null===l)return{location:s,value:null};const{row:c,col:u,rowOffset:h,colOffset:f}=l,d=Object(X.d)(this.url,t.sliceId),p=`${o}/${c}/${u}`;let m=Object(X.c)(d,null,p);Object(a.i)(m)||(m=this.fetchRawTile(o,c,u,t),Object(X.e)(d,null,p,m));const y=await m;if(!(y&&y.pixels&&y.pixels.length>0))return{location:s,value:null};const b=h*this.rasterInfo.storageInfo.blockHeight+f;return{location:s,value:!y.mask||y.mask[b]?y.pixels.map((e=>e[b])):null,pyramidLevel:o}}async fetchPixels(e,t,i,n={}){const r=e.clone().normalize();e=r[0];const s=this.rasterInfo.spatialReference,o=!e.spatialReference.equals(s),{datumTransformation:l}=n,c=new A.a({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),u=n.srcResolution||(o?Object(Y.f)(c,s,e,l):c);if(!u)return null;const{pyramidLevel:h,pyramidResolution:f,excessiveReading:d}=Object(Y.g)(u,this.rasterInfo,this.ioConfig.sampling);if(d)return null;const p=this.rasterInfo.storageInfo;let m=o?Object(Y.d)(e,s,l):e;const y=Object(a.o)(this.rasterInfo.transform);if(y&&(m=y.inverseTransform(m)),null==m)return null;const b={x:Math.floor((m.xmin-p.origin.x)/f.x+.1),y:Math.floor((p.origin.y-m.ymax)/f.y+.1)},x=Math.ceil((m.xmax-m.xmin)/f.x-.1),g=Math.ceil((m.ymax-m.ymin)/f.y-.1);if(x/t>8||g/i>8)return null;const w=await this.fetchRawPixels(h,b,{width:x,height:g},n);if(!w)return null;const O=h>0?p.pyramidBlockWidth:p.blockWidth,I=h>0?p.pyramidBlockHeight:p.blockHeight;if(!o&&1===w.pixelBlocks.length&&O===t&&I===i&&u.x===c.x&&u.y===c.y)return{extent:e,srcExtent:m,pixelBlock:w.pixelBlocks[0],transformGrid:null};const v=Object(Y.b)(e,w.extent,c,l,y);let j;const R=!n.requestRawData,M={rows:v.spacing[0],cols:v.spacing[1]},{pixelBlocks:T,mosaicSize:S,isPartiallyFilled:_}=w;if(this.rasterJobHandler)j=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:T,srcMosaicSize:S,destDimension:R?{width:t,height:i}:null,coefs:R?v.coefficients:null,sampleSpacing:R?M:null,interpolation:n.interpolation},n);else{const e=Object(V.i)(T,S);j=R?Object(V.a)(e,{width:t,height:i},v.coefficients,M,n.interpolation):e}return{srcExtent:m,pixelBlock:j,transformGrid:v,extent:e,isPartiallyFilled:_}}async fetchRawPixels(e,t,i,n){const{origin:a,blockBoundary:r}=this.rasterInfo.storageInfo,s=e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,o=e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight;let{x:l,y:c}=t,{width:u,height:h}=i;n.buffer&&(l-=n.buffer.cols,c-=n.buffer.rows,u+=2*n.buffer.cols,h+=2*n.buffer.rows);const f=Math.floor(l/s),d=Math.floor(c/o),m=Math.floor((l+u-1)/s),y=Math.floor((c+h-1)/o),b=r[e];if(!b)return null;const{minRow:x,minCol:g,maxCol:w,maxRow:O}=b;if(y<x||m<g||d>O||f>w)return null;const I=[];let v,j=!1;for(let C=d;C<=y;C++)for(let t=f;t<=m;t++)C>=x&&t>=g&&O>=C&&w>=t?(v=this._fetchRawTile(e,C,t,n),this.ioConfig.allowPartialFill&&(v=Object(p.c)((e=>{v.then((t=>e(t))).catch((()=>{j=!0,e(null)}))}))),I.push(v)):I.push(null);if(0===I.length)return null;const R=await Object(p.b)(I),M={height:(y-d+1)*s,width:(m-f+1)*o},{nativePixelSize:T,spatialReference:S}=this.rasterInfo,_=T.x*Math.pow(2,e),k=T.y*Math.pow(2,e);return{extent:new C.a({xmin:a.x+f*s*_,xmax:a.x+(m+1)*s*_,ymin:a.y-(y+1)*o*k,ymax:a.y-d*o*k,spatialReference:S}),pixelBlocks:R,mosaicSize:M,isPartiallyFilled:j}}async fetchRawTile(e,t,i,n){throw new f.a("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return Object(Y.d)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?Object($.a)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var n,a;const{customFetchParameters:r}=this.ioConfig,{range:s,query:o,headers:l}=t;i=null!=(n=null!=(a=i)?a:t.retryCount)?n:this.ioConfig.retryCount;const c=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await Object(k.default)(e,{...t,query:{...o,...r},headers:{...l,...c}})}catch(n){if(i>0)return i--,this.request(e,t,i);throw n}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!Object(a.i)(t)||null==e||!e.length)return null;let i=0;const n=e[0].variableName;for(let a=0;a<t.variables.length;a++){const r=t.variables[a],s=r.dimensions;if(r.name!==n){i+=s.map((e=>this._getDimensionValuesCount(e))).reduce(((e,t)=>e+t));break}const o=s.map((e=>this._getDimensionValuesCount(e))),l=s.length;for(let t=0;t<l;t++){const n=e.filter((e=>e.dimensionName===s[t].name))[0];if(null==n)return null;const a=Array.isArray(n.values[0])?n.values[0][0]:n.values[0],r=this._getIndexFromDimensions(a,s[t]);if(-1===r)return null;o.shift(),i+=t===l-1?r:r*o.reduce(((e,t)=>e+t))}}return i}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:n}=this.rasterInfo;if(!e.tileInfo){const a=[],r=e.maximumPyramidLevel||0;let s=Math.max(n.x,n.y),o=1/.0254*96*s;for(let e=0;e<=r;e++)a.push({level:r-e,resolution:s,scale:o}),s*=2,o*=2;const l=new A.a({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new P.a({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:a}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,n){const{width:a,height:r,nativeExtent:s,pixelSize:o,spatialReference:l}=e,c=new A.a({x:s.xmin,y:s.ymax,spatialReference:l});null==n&&(n=Math.max(0,Math.round(Math.log(Math.max(a,r))/Math.LN2-8)));const u=this._computeBlockBoundary(s,o,n,512,512);e.storageInfo=new W({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:n,blockBoundary:u})}async computeBestPyramidLevelForLocation(e,t={}){return 0}identifyPixelLocation(e,t,i){const{spatialReference:n,pixelSize:a,extent:r}=this.rasterInfo,{blockWidth:s,blockHeight:o,maximumPyramidLevel:l,pyramidScalingFactor:c,origin:u}=this.rasterInfo.storageInfo,h=Object(Y.e)(e,n,i);if(!r.intersects(h))return null;if(t<0||t>l)return null;const f=Math.pow(c,t),d=f*a.x,p=f*a.y,m=(u.y-h.y)/p/o,y=(h.x-u.x)/d/s,b=Math.min(o-1,Math.floor((m-Math.floor(m))*o)),x=Math.min(s-1,Math.floor((y-Math.floor(y))*s));return{pyramidLevel:t,row:Math.floor(m),col:Math.floor(y),rowOffset:b,colOffset:x,srcLocation:h}}getTileExtent(e,t,i,n){const{origin:a,spatialReference:r}=n,s=n.size[0],o=n.size[1],l=a.x+i*s*e.x,c=l+s*e.x,u=a.y-t*o*e.y,h=u-o*e.y;return new C.a({xmin:l,xmax:c,ymin:h,ymax:u,spatialReference:r})}_computeBlockBoundary(e,t,i,n,a){let{x:r,y:s}=t;const o=e.xmin,l=e.ymax,c=[{minCol:Math.floor((e.xmin-o+.1*r)/n/r),maxCol:Math.floor((e.xmax-o-.1*r)/n/r),minRow:Math.floor((l-e.ymax+.1*s)/a/s),maxRow:Math.floor((l-e.ymin-.1*s)/a/s)}];if(i>0)for(let u=0;u<i;u++)r*=2,s*=2,c.push({minCol:Math.floor((e.xmin-o+.1*r)/n/r),maxCol:Math.floor((e.xmax-o-.1*r)/n/r),minRow:Math.floor((l-e.ymax+.1*s)/a/r),maxRow:Math.floor((l-e.ymin-.1*s)/a/r)});return c}_fetchRawTile(e,t,i,n){const r=this.rasterInfo.storageInfo.blockBoundary[e];if(!r)return Object(p.u)(null);const{minRow:s,minCol:o,maxCol:l,maxRow:c}=r;if(t<s||i<o||t>c||i>l)return Object(p.u)(null);const u=Object(X.d)(this.url,n.sliceId),h=`${e}/${t}/${i}`;let f=Object(X.c)(u,n.registryId,h);if(!Object(a.i)(f)){const a=Object(p.d)();f=this.fetchRawTile(e,t,i,{...n,signal:a.signal}),Object(X.e)(u,n.registryId,h,f,a),f.catch((()=>{Object(X.b)(u,n.registryId,h)}))}return n.signal&&Object(p.r)(n,(()=>{Object(X.a)(u,n.registryId,h)})),f}_getIndexFromDimensions(e,t){const{extent:i,interval:n,unit:a,values:r}=t;if(null!=r&&r.length)return Array.isArray(r[0])?r.findIndex((t=>t[0]<=e&&t[1]>=e)):r.indexOf(e);if(e>i[1])return-1;const s=i[0];let o=-1;if("ISO8601"===a){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":o=Math.round((e-s)/1e3/n);break;case"minutes":o=Math.round((e-s)/6e4/n);break;case"hours":o=Math.round((e-s)/36e5/n);break;case"days":o=Math.round((e-s)/864e5/n);break;case"years":o=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/n);break;case"decades":o=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/10/n)}return o}return Math.round((e-s)/n)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:n,values:a}=e;let r=(null==a?void 0:a.length)||0;if(r)return r;const s=t[0];if(0===r&&"ISO8601"===n){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":r=Math.round((t[1]-t[0])/1e3/i);break;case"minutes":r=Math.round((t[1]-t[0])/6e4/i);break;case"hours":r=Math.round((t[1]-t[0])/36e5/i);break;case"days":r=Math.round((t[1]-t[0])/864e5/i);break;case"years":r=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/i);break;case"decades":r=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/10/i)}return r}return Math.round((t[1]-t[0])/i)}};Object(n.a)([Object(o.b)(x.j)],K.prototype,"url",null),Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],K.prototype,"datasetName",void 0),Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],K.prototype,"datasetFormat",void 0),Object(n.a)([Object(o.b)()],K.prototype,"rasterInfo",void 0),Object(n.a)([Object(o.b)()],K.prototype,"ioConfig",void 0),Object(n.a)([Object(o.b)()],K.prototype,"sourceJSON",void 0),K=Object(n.a)([Object(h.a)("esri.layers.support.rasterDatasets.BaseRaster")],K);var Q=K,Z=i(783);const ee=new Map;ee.set("int16","esriFieldTypeSmallInteger"),ee.set("int32","esriFieldTypeInteger"),ee.set("int64","esriFieldTypeInteger"),ee.set("float32","esriFieldTypeSingle"),ee.set("float64","esriFieldTypeDouble"),ee.set("text","esriFieldTypeString");let te=class extends Q{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new f.a("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:n}=this._parseHeader(t);if("thematic"===n.dataType){const e=await this._fetchAuxiliaryInformation();n.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",n),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,n={}){const a=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(a<0)return null;const r=this._buildCacheFilePath(a,t,i,n.multidimensionalDefinition),s=this._getIndexRecordFromBundle(t,i),o=await this.request(r,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:n.signal});if(!o)return null;const l=new Uint8Array(o.data),c=this._getTileEndAndContentType(l,s);if(0===c.recordSize)return null;const u=await this.request(r,{range:{from:c.position,to:c.position+c.recordSize},responseType:"array-buffer",signal:n.signal});return u?this.decodePixelBlock(u.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){var t;const i=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:n,histograms:a,colormap:r,blockWidth:s,blockHeight:o,firstPyramidLevel:l,maximumPyramidLevel:c}=e,u=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),h=new _.a(e.extent.spatialReference||e.geodataXform.spatialReference),f=new C.a({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:h}),d=new A.a({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:h}),p=null!=(t=e.properties)?t:{},m=e.format.toLowerCase().replace("cache/",""),y=new A.a(e.origin.x,e.origin.y,h);let b,x,g,w;if(r&&r.colors)for(b=[],x=0;x<r.colors.length;x++)g=r.colors[x],w=r.values?r.values[x]:x,b.push([w,255&g,g<<16>>>24,g<<8>>>24,g>>>24]);const O=e.LODInfos,I=[];for(x=0;x<O.levels.length;x++)I.push({level:O.levels[x],resolution:O.resolutions[x],scale:96/.0254*O.resolutions[x]});const v=new P.a({dpi:96,lods:I,format:m,origin:y,size:[s,o],spatialReference:h}),j={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},R=Math.round((f.xmax-f.xmin)/d.x),M=Math.round((f.ymax-f.ymin)/d.y),T=[{maxCol:Math.ceil(R/s)-1,maxRow:Math.ceil(M/o)-1,minCol:0,minRow:0}];let S=2;if(c>0)for(x=0;x<c;x++)T.push({maxCol:Math.ceil(R/S/s)-1,maxRow:Math.ceil(M/S/o)-1,minCol:0,minRow:0}),S*=2;const k=e.mdInfo;return{storageInfo:j,rasterInfo:new E.a({width:R,height:M,pixelType:i,bandCount:n,extent:f,spatialReference:h,pixelSize:d,keyProperties:p,statistics:u,histograms:a,multidimensionalInfo:k,colormap:b,storageInfo:new W({blockWidth:s,blockHeight:o,pyramidBlockWidth:s,pyramidBlockHeight:o,origin:y,tileInfo:v,firstPyramidLevel:l,maximumPyramidLevel:c,blockBoundary:T})})}}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),n=await Object(p.b)([t,i]);let a;if(n[0]){let e=n[0].fields;const t=n[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":ee.get(e.type),name:e.name,alias:e.alias||e.name})));const i=t.map((e=>({attributes:e})));e&&t&&(a={fields:e,features:i})}}return!a&&n[1]&&(a=class{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const n=t.getUint32(4,!0),a=t.getUint16(8,!0),r=t.getUint16(10,!0),s={version:i,recordCount:n,headerByteCount:a,recordByteCount:r};let o=32;const l=[],c=[];let u;if(3===i){for(;13!==t.getUint8(o);)u=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:Object(Z.a)(new Uint8Array(e,o,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<n&&e.byteLength-o>r;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)i.push(Object(Z.a)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const n=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(n.substring(0,4),10),parseInt(n.substring(4,6),10)-1,parseInt(n.substring(6,8),10)))}o+=t.length})),c.push(i)):o+=r}}const h=function(e){const t=e.fields,i=e.records,n=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",a=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),r=a.map((e=>e.name)),s=[];let o=0,l=0;return i.forEach((e=>{const t={};for(t[n]=o++,l=1;l<r.length;l++)t[r[l]]=e[l-1];s.push({attributes:t})})),{displayFieldName:"",fields:a,features:s}}({fields:l,records:c});return{header:s,fields:l,records:c,recordSet:h}}}.parse(n[1]).recordSet),J.default.fromJSON(a)}_buildCacheFilePath(e,t,i,n){const r=this.storageInfo.packetSize,s=Math.floor(t/r)*r,o=Math.floor(i/r)*r,l="R"+this._toHexString4(s)+"C"+this._toHexString4(o);let c="L";c+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,h=null==n?void 0:n[0];if(!Object(a.i)(u)||!h)return`${this.url}/_alllayers/${c}/${l}.bundle`;let f=u.variables.filter((e=>e.name===h.variableName))[0].dimensions[0].values.indexOf(h.values[0]).toString(16);const d=4-f.length;for(let a=0;a<d;a++)f="0"+f;return f="S"+f,`${this.url}/_alllayers/${h.variableName}/${f}/${c}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const i=this.storageInfo.packetSize,n=i*(e%i)+t%i;if(n<0)throw"Invalid level / row / col";return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let n,a=0;for(n=0;n<5;n++)a|=(255&i[n])<<8*n;const r=0xffffffffff&a;for(a=0,n=5;n<8;n++)a|=(255&i[n])<<8*(n-5);return{position:r,recordSize:0xffffffffff&a}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};Object(n.a)([Object(o.b)({readOnly:!0})],te.prototype,"storageInfo",void 0),Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],te.prototype,"datasetFormat",void 0),te=Object(n.a)([Object(h.a)("esri.layers.support.rasterDatasets.CloudRaster")],te);var ie=te;let ne=class extends Q{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:i,statistics:n,histograms:a,name:r,keyProperties:s,nativeExtent:o,transform:l}=this.data,{width:c,height:u,pixelType:h}=i,f=this.data.extent||new C.a({xmin:-.5,ymin:.5,xmax:c-.5,ymax:u-.5,spatialReference:new _.a({wkid:3857})}),d=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,p={x:f.width/c,y:f.height/u},m=new E.a({width:c,height:u,pixelType:h,extent:f,nativeExtent:o,transform:l,pixelSize:p,spatialReference:f.spatialReference,bandCount:3,keyProperties:s||{},statistics:n,isPseudoSpatialReference:d,histograms:a});this.createRemoteDatasetStorageInfo(m,512,512),this._set("rasterInfo",m),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=r,this.url="/InMemory/"+r}fetchRawTile(e,t,i,n={}){const a=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Object(p.u)(a)}async _buildInMemoryRaster(e,t,i){const n=this.rasterInfo.storageInfo.maximumPyramidLevel,r=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:n},i):Object(p.u)(Object(V.m)(e,t,n)),s=Object(a.i)(this.rasterInfo.statistics),o=Object(a.i)(this.rasterInfo.histograms),l=s&&o?Object(p.u)({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Object(p.u)(Object(V.f)(e)),c=await Object(p.j)([r,l]);if(!c[0].value&&c[1].value)throw new f.a("inmemory-raster:open","failed to build in memory raster");var u,h;this._pixelBlockTiles=c[0].value,s||(this.rasterInfo.statistics=null==(u=c[1].value)?void 0:u.statistics),o&&(this.rasterInfo.histograms=null==(h=c[1].value)?void 0:h.histograms)}};Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],ne.prototype,"datasetFormat",void 0),Object(n.a)([Object(o.b)()],ne.prototype,"data",void 0),ne=Object(n.a)([Object(h.a)("esri.layers.support.rasterDatasets.InMemoryRaster")],ne);var ae=ne;function re(e,t,i){const{x:n,y:a}=t;if(i<2)return{x:e[0]+n*e[2]+a*e[4],y:e[1]+n*e[3]+a*e[5]};if(2===i){const t=n*n,i=a*a,r=n*a;return{x:e[0]+n*e[2]+a*e[4]+t*e[6]+r*e[8]+i*e[10],y:e[1]+n*e[3]+a*e[5]+t*e[7]+r*e[9]+i*e[11]}}const r=n*n,s=a*a,o=n*a,l=r*n,c=r*a,u=n*s,h=a*s;return{x:e[0]+n*e[2]+a*e[4]+r*e[6]+o*e[8]+s*e[10]+l*e[12]+c*e[14]+u*e[16]+h*e[18],y:e[1]+n*e[3]+a*e[5]+r*e[7]+o*e[9]+s*e[11]+l*e[13]+c*e[15]+u*e[17]+h*e[19]}}function se(e,t,i){const{xmin:n,ymin:a,xmax:r,ymax:s,spatialReference:o}=t;let l=[];if(i<2)l.push({x:n,y:s}),l.push({x:r,y:s}),l.push({x:n,y:a}),l.push({x:r,y:a});else{let e=10;for(let t=0;t<e;t++)l.push({x:n,y:a+(s-a)*t/(e-1)}),l.push({x:r,y:a+(s-a)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:n+(r-n)*t/e,y:a}),l.push({x:n+(r-n)*t/e,y:s})}l=l.map((t=>re(e,t,i)));const c=l.map((e=>e.x)),u=l.map((e=>e.y));return new C.a({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,u),ymax:Math.max.apply(null,u),spatialReference:o})}let oe=class extends q.a{constructor(){super(...arguments),this.polynomialOrder=1}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,n,a,r,s]=e,o=n*s-r*a,l=r*a-n*s;return[(r*i-t*s)/o,(n*i-t*a)/l,s/o,a/l,-r/o,-n/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}forwardTransform(e){if("point"===e.type){const t=re(this.forwardCoefficients,e,this.polynomialOrder);return new A.a({x:t.x,y:t.y,spatialReference:e.spatialReference})}return se(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=re(this.inverseCoefficients,e,this.polynomialOrder);return new A.a({x:t.x,y:t.y,spatialReference:e.spatialReference})}return se(this.inverseCoefficients,e,this.polynomialOrder)}};Object(n.a)([Object(o.b)({json:{write:!0}})],oe.prototype,"polynomialOrder",void 0),Object(n.a)([Object(o.b)({json:{write:!0}})],oe.prototype,"forwardCoefficients",void 0),Object(n.a)([Object(o.b)({dependsOn:["forwardCoefficients"],json:{write:!0}})],oe.prototype,"inverseCoefficients",null),oe=Object(n.a)([Object(h.a)("esri.layers.support.rasterTransforms.PolynomialTransform")],oe);var le=oe;function ce(e,t){if(!e||!t)return[];let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=[];if(t){const a=ce(e,i);for(let e=0;e<a.length;e++)ce(a[e],t).forEach((e=>n.push(e)));return n}const a=e.getElementsByTagNameNS("*",i);if(!a||0===a.length)return[];for(let r=0;r<a.length;r++)n.push(a[r]||a.item[r]);return n}function ue(e,t){if(!e||!t)return null;let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=ce(e,i);return n.length>0?t?ue(n[0],t):n[0]:null}function he(e,t=null){const i=t?ue(e,t):e;let n;return i?(n=i.textContent||i.nodeValue,n?n.trim():null):null}function fe(e,t){return function(e,t){const i=ce(e,t),n=[];let a;for(let r=0;r<i.length;r++)a=i[r].textContent||i[r].nodeValue,a&&(a=a.trim(),""!==a&&n.push(a));return n}(e,t).map((e=>Number(e)))}function de(e,t){const i=he(e,t);return Number(i)}function pe(e,t){var i;const n=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),a=t.toLowerCase();return n.slice(n.lastIndexOf(":")+1)===a}function me(e,t){if(!e||!t)return null;const i=[];for(let n=0;n<e.length;n++)i.push(e[n]),i.push(t[n]);return i}function ye(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new _.a({wkid:t});const i=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),n=i[i.length-1].split(",");return"EPSG"!==n[0]||(t=Number(n[1]),isNaN(t)||0===t)?new _.a({wkt:e}):new _.a({wkid:t})}function be(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(pe(e,"SRS")){if(!i.spatialReference){const t=he(e);i.spatialReference=ye(t)}}else if(pe(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:n}=function(e){var t;const i=ue(e,"GeodataXform"),n=ye(de(i,"SpatialReference/WKID")||he(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:n,transform:null};const a=null!=(t=de(i,"PolynomialOrder"))?t:1,r=fe(i,"CoeffX/Double"),s=fe(i,"CoeffY/Double"),o=fe(i,"InverseCoeffX/Double"),l=fe(i,"InverseCoeffY/Double"),c=me(r,s),u=me(o,l);return{spatialReference:n,transform:new le({polynomialOrder:a,forwardCoefficients:c,inverseCoefficients:u})}}(e);i.transform=n,i.spatialReference||(i.spatialReference=t)}else ce(e,"MDI").forEach((e=>i.metadata[e.getAttribute("key")]=he(e)));else if(pe(e,"PAMRasterBand")){const t=function(e){var t;const i=de(e,"NoDataValue"),n=ue(e,"Histograms/HistItem"),a=de(n,"HistMin"),r=de(n,"HistMax"),s=de(n,"BucketCount"),o=null==(t=he(n,"HistCounts"))?void 0:t.split("|").map((e=>Number(e)));let l,c,u,h;ce(e,"Metadata/MDI").forEach((e=>{var t;const i=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":c=i;break;case"STATISTICS_MEAN":u=i;break;case"STATISTICS_STDDEV":h=i}}));const f=de(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!=o&&o.length&&null!=l&&null!=c?{min:a,max:r,size:s||o.length,counts:o}:null,sourceBandIndex:f,statistics:null!=l&&null!=c?{min:l,max:c,avg:u,stddev:h}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}}));const n=i.rasterBands;if(n){const e=!!n[0].statistics;i.statistics=e?n.map((e=>e.statistics)):null;const t=!!n[0].histogram;i.histograms=t?n.map((e=>e.histogram)):null}return i}let xe=class extends Q{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:n,histograms:a,transform:r}=await this._fetchAuxiliaryData(e);const s=!i;s&&(i=new _.a({wkid:3857})),null!=a&&a.length&&null==n&&(n=Object(V.e)(a));const{width:o,height:l}=t;let c=new C.a({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const u=r?r.forwardTransform(c):c;let h=!0;if(r){const e=r.forwardCoefficients;h=e&&0===e[1]&&0===e[2],h&&(r=null,c=u)}const f=new ae({data:{extent:u,nativeExtent:c,transform:r,pixelBlock:t,statistics:n,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:s}});await f.open(),this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(e,t,i,n={}){return this._inMemoryRaster.fetchRawTile(e,t,i,n)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),i=Object($.b)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new f.a("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,i;const n=Object(a.o)(null==e?void 0:e.signal),r=null!=(t=this.ioConfig.skipExtensions)?t:[],s=r.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:n}),o=this.datasetFormat,l="JPG"===o?"jgw":"PNG"===o?"pgw":"BMP"===o?"bpw":null,c=r.indexOf(l)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+l,{responseType:"text",signal:n}),u=await Object(p.j)([s,c]);if(null!=n&&n.aborted)throw Object(p.e)();const h=be(null==(i=u[0].value)?void 0:i.data);if(!h.transform){const e=u[1].value?u[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;h.transform=6===(null==e?void 0:e.length)?new le({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return h}};Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],xe.prototype,"datasetFormat",void 0),xe=Object(n.a)([Object(h.a)("esri.layers.support.rasterDatasets.ImageAuxRaster")],xe);var ge=xe,we=i(383),Oe=i(249);let Ie=class extends Q{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const n=i.data;this.sourceJSON=n;if(this.tileType=n.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(n.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===n.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),!n)throw new f.a("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!n.tileInfo)throw new f.a("imageserverraster:open","use ImageryLayer to open non-tiled image services");this.datasetName=n.name.slice(n.name.indexOf("/")+1);const r=await this._fetchRasterInfo({signal:t});if(!Object(a.i)(r))throw new f.a("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?Object(we.a)(n.tileInfo,n):P.a.fromJSON(n.tileInfo),{extent:t,pixelSize:i}=r,a=.5/r.width*i.x;let s,o;const l=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==n.maxScale&&("Raster"===this.tileType?(s=e.lods.filter((e=>e.resolution===i.x))[0],s||(s=e.lods[e.lods.length-1])):(s=e.lods.filter((e=>Math.abs(e.scale-n.maxScale)<a))[0],s||(s=e.lods.filter((e=>e.scale>n.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=s.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),s||(s=l);const c=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==n.minScale&&"Elevation"===this.tileType&&(o=e.lods.filter((e=>Math.abs(e.scale-n.minScale)<a))[0],this._levelOffset=o.level-c.level),o||(o=c);const u=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>a||!e.lods.some((e=>Math.abs(e.resolution-u)<a)))&&(i.x=i.y=s.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const h=s.level-o.level,[f,d]=e.size,p=e.origin;let{x:m,y:y}=i;const b=[{minCol:Math.floor((t.xmin-p.x+.1*m)/f/m),maxCol:Math.floor((t.xmax-p.x-.1*m)/f/m),minRow:Math.floor((p.y-t.ymax+.1*y)/d/y),maxRow:Math.floor((p.y-t.ymin-.1*y)/d/y)}];if(h>0)for(let n=0;n<h;n++)m*=2,y*=2,b.push({minCol:Math.floor((t.xmin-p.x+.1*m)/f/m),maxCol:Math.floor((t.xmax-p.x-.1*m)/f/m),minRow:Math.floor((p.y-t.ymax+.1*y)/d/m),maxRow:Math.floor((p.y-t.ymin-.1*y)/d/m)});r.storageInfo=new W({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:h,tileInfo:e,blockBoundary:b}),this._set("rasterInfo",r)}if(n.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:r.storageInfo.tileInfo,parsedUrl:Object(d.I)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Oe.a({layer:e})}}async fetchRawTile(e,t,i,n={}){const{storageInfo:a,extent:r,pixelSize:s}=this.rasterInfo,o=a.maximumPyramidLevel-e+this._levelOffset,l=`${this.url}/tile/${o}/${t}/${i}`,c=this._slices?{sliceId:n.sliceId||0}:null,{data:u}=await this.request(l,{query:c,responseType:"array-buffer",signal:n.signal});if(!u)return null;const h=await this.decodePixelBlock(u,{width:a.tileInfo.size[0],height:a.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),f=a.blockBoundary[e];if("jpg"!==a.compression||i>f.minCol&&i<f.maxCol&&t>f.minRow&&t<f.maxRow)return h;const{origin:d,blockWidth:p,blockHeight:m}=a,y=Math.pow(2,e),b=Math.round((r.xmin-d.x)/(s.x*y))%p,x=Math.round((r.xmax-d.x)/(s.x*y))%p,g=Math.round((d.y-r.ymax)/(s.x*y))%m,w=Math.round((d.y-r.ymin)/(s.x*y))%m,O=i===f.minCol?b:0,I=t===f.minRow?g:0,v=i===f.maxCol?x:p,j=t===f.maxRow?w:m;return Object(V.l)(h,{x:O,y:I},{width:v-O,height:j-I}),h}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];return!i||(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),n=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),a=await Object(p.b)([i,n]);return a[0]&&a[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:a[0]||null,histograms:a[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let n=0;const{maximumPyramidLevel:a}=this.rasterInfo.storageInfo;let r=a-n+this._levelOffset;const s=i.srcLocation;for(;r>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(r,i.row,i.col,t))break}catch{}if(r--,n++,i=this.identifyPixelLocation(s,n,t.datumTransformation),null===i)return null}return-1===r||null==i?null:n}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),n=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),a=_.a.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new E.a({width:i,height:n,bandCount:3,extent:C.a.fromJSON(t.extent),spatialReference:a,pixelSize:new A.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:r,signal:s}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:r,f:"json"},signal:s}).then((e=>J.default.fromJSON(e.data))).catch((()=>null)),l=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:r,f:"json"},signal:s}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),c=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:r,f:"json"},signal:s}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),u=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:s}).then((e=>e.data)).catch((()=>{})),h=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),f=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:s}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return Object(p.b)([o,l,c,u,h,f]).then((e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new E.a({width:i,height:n,bandCount:t.bandCount,extent:C.a.fromJSON(t.extent),spatialReference:a,pixelSize:new A.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=i.variables)&&t.length&&i.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),i}};Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],Ie.prototype,"datasetFormat",void 0),Object(n.a)([Object(o.b)()],Ie.prototype,"tileType",void 0),Ie=Object(n.a)([Object(h.a)("esri.layers.support.rasterDatasets.ImageServerRaster")],Ie);var ve=Ie,je=i(644),Re=i(755);const Me=new Map;Me.set("Int8","s8"),Me.set("UInt8","u8"),Me.set("Int16","s16"),Me.set("UInt16","u16"),Me.set("Int32","s32"),Me.set("UInt32","u32"),Me.set("Float32","f32"),Me.set("Float64","f32"),Me.set("Double64","f32");const Te=new Map;Te.set("lerc",".lrc"),Te.set("none",".til"),Te.set("deflate",".pzp"),Te.set("jpeg",".jzp");let Se=class extends Q{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?Object(a.o)(e.signal):null,n=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:r,files:s}=this._parseHeader(n.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var o;null!=t&&(r.statistics=null!=(o=t.statistics)?o:r.statistics,r.histograms=t.histograms,t.histograms&&!Object(a.i)(r.statistics)&&(r.statistics=Object(V.e)(t.histograms)))}this._set("rasterInfo",r),this._files=s;const l=await this.request(s.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(l.data);let c,u,h=0,f=-1;const{blockWidth:d,blockHeight:p,compression:m}=this.rasterInfo.storageInfo,y=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:b,height:x,bandCount:g}=this.rasterInfo,w=[],O="none"===m?1:g;for(;h<this._storageIndex.length;)f++,c=Math.ceil(b/d/Math.pow(y,f)),u=Math.ceil(x/p/Math.pow(y,f)),h+=c*u*O*4,w.push({maxRow:u,maxCol:c,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=w,f>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=f),this.updateTileInfo()}async fetchRawTile(e,t,i,n={}){const{blockWidth:a,blockHeight:r,blockBoundary:s,compression:o}=this.rasterInfo.storageInfo,l=s[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:c,pixelType:u}=this.rasterInfo,{ranges:h,actualTileWidth:f,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){const e=new Uint8Array(a*r);return new je.a({width:a,height:r,pixels:null,mask:e,validPixelCount:0})}const{bandIds:m}=this.ioConfig,y="none"===o?1:c,b=[];let x=0;for(x=0;x<y;x++)(!m||m.indexOf[x]>-1)&&b.push(this.request(this._files.data,{range:{from:h[x].from,to:h[x].to},responseType:"array-buffer",signal:n.signal}));const g=await Object(p.b)(b),w=g.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),O=new Uint8Array(w);let I=0;for(x=0;x<y;x++)O.set(new Uint8Array(g[x].data),I),I+=g[x].data.byteLength;const v="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",j=await this.decodePixelBlock(O.buffer,{width:a,height:r,format:v,pixelType:u});let R=0,M=0;if(f!==a||d!==r){let e=j.mask;if(e)for(x=0;x<r;x++)if(M=x*a,x<d)for(R=f;R<a;R++)e[M+R]=0;else for(R=0;R<a;R++)e[M+R]=0;else for(e=new Uint8Array(a*r),j.mask=e,x=0;x<d;x++)for(M=x*a,R=0;R<f;R++)e[M+R]=1}return j}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,n,a,r,s;if(Re.a){for(i=new Uint8Array(e),a=new ArrayBuffer(e.byteLength),n=new Uint8Array(a),r=0;r<e.byteLength/4;r++)for(s=0;s<4;s++)n[4*r+s]=i[4*r+3-s];t=new Uint32Array(a)}else t=new Uint32Array(e);return t}_getTileLocation(e,t,i){const{blockWidth:n,blockHeight:a,pyramidScalingFactor:r,compression:s}=this.rasterInfo.storageInfo,{width:o,height:l,bandCount:c}=this.rasterInfo,u="none"===s?1:c;let h,f,d,p=0,m=0;for(d=0;d<e;d++)m=Math.pow(r,d),h=Math.ceil(o/n/m),f=Math.ceil(l/a/m),p+=h*f;m=Math.pow(r,e),h=Math.ceil(o/n/m),f=Math.ceil(l/a/m),p+=t*h+i,p*=4*u;const y=this._storageIndex.subarray(p,p+4*u);let b=0,x=0;const g=[];for(let w=0;w<u;w++)b=y[4*w+0]*Math.pow(2,32)+y[4*w+1],x=b+y[4*w+2]*Math.pow(2,32)+y[4*w+3],g.push({from:b,to:x});return{ranges:g,actualTileWidth:i<h-1?n:Math.ceil(o/m)-n*(h-1),actualTileHeight:t<f-1?a:Math.ceil(l/m)-a*(f-1)}}_parseHeader(e){const t=ue(e,"MRF_META/Raster");if(!t)throw new f.a("mrf:open","not a valid MRF format");const i=ue(t,"Size"),n=parseInt(i.getAttribute("x"),10),a=parseInt(i.getAttribute("y"),10),r=parseInt(i.getAttribute("c"),10),s=(he(t,"Compression")||"none").toLowerCase();if(!s||-1===["none","lerc"].indexOf(s))throw new f.a("mrf:open","currently does not support compression "+s);const o=he(t,"DataType")||"UInt8",l=Me.get(o);if(null==l)throw new f.a("mrf:open","currently does not support pixel type "+o);const c=ue(t,"PageSize"),u=parseInt(c.getAttribute("x"),10),h=parseInt(c.getAttribute("y"),10),d=ue(t,"DataValues");let p,m;if(d&&(m=d.getAttribute("NoData"),null!=m&&(p=m.trim().split(" ").map((e=>parseFloat(e))))),ue(e,"MRF_META/CachedSource"))throw new f.a("mrf:open","currently does not support MRF referencing other data files");const y=ue(e,"MRF_META/GeoTags"),b=ue(y,"BoundingBox");if(null==b)throw new f.a("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const x=parseFloat(b.getAttribute("minx")),g=parseFloat(b.getAttribute("miny")),w=parseFloat(b.getAttribute("maxx")),O=parseFloat(b.getAttribute("maxy")),I=he(y,"Projection"),v=he(e,"datafile"),j=he(e,"IndexFile");let R;"LOCAL_CS[]"!==I&&(R=new _.a({wkt:I}));const M=new C.a(x,g,w,O);M.spatialReference=R;const T=ue(e,"MRF_META/Rsets"),S=parseInt(T&&T.getAttribute("scale")||"2",10),k=new W({origin:new A.a({x:M.xmin,y:M.ymax,spatialReference:R}),blockWidth:u,blockHeight:h,pyramidBlockWidth:u,pyramidBlockHeight:h,compression:s,pyramidScalingFactor:S}),F=new A.a({x:(w-x)/n,y:(O-g)/a,spatialReference:R});return{rasterInfo:new E.a({width:n,height:a,extent:M,spatialReference:R,bandCount:r,pixelType:l,pixelSize:F,noDataValue:p,storageInfo:k}),files:{mrf:this.url,index:j||this.url.replace(".mrf",".idx"),data:v||this.url.replace(".mrf",Te.get(s))}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return be(t)}catch{return null}}};Object(n.a)([Object(o.b)()],Se.prototype,"_files",void 0),Object(n.a)([Object(o.b)()],Se.prototype,"_storageIndex",void 0),Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],Se.prototype,"datasetFormat",void 0),Se=Object(n.a)([Object(h.a)("esri.layers.support.rasterIO.MRFRaster")],Se);var _e=Se,Ce=i(784),ke=i(805);const Fe=function(e,t){const i=e.get(t);return i&&i.values},Pe=function(e,t){const i=e.get(t);return i&&i.values[0]};let Be=class extends Q{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t;await this.init();const i=e?Object(a.o)(e.signal):null,{data:n}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:i});if(!n)throw new f.a("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:r,firstIFD:s,isBigTiff:o}=Object(ke.f)(n),l=[];await this.readIFDs(l,n,r,s,0,o?8:4,i);const c=Object(ke.c)(l),{width:u,height:h,tileWidth:d,tileHeight:p,planes:m,pixelType:y,compression:b,firstPyramidLevel:x,maximumPyramidLevel:g,pyramidBlockWidth:w,pyramidBlockHeight:O,tileBoundary:I,metadata:v}=c,j=C.a.fromJSON(c.extent),R=j.spatialReference,M=new A.a(j?{x:j.xmin,y:j.ymax,spatialReference:R}:{x:0,y:0}),T=new W({blockWidth:d,blockHeight:p,pyramidBlockWidth:w,pyramidBlockHeight:O,compression:b,origin:M,firstPyramidLevel:x,maximumPyramidLevel:g,blockBoundary:I}),S=new A.a({x:(j.xmax-j.xmin)/u,y:(j.ymax-j.ymin)/h,spatialReference:R}),_=v?{BandProperties:v.bandProperties,DataType:v.dataType}:{},k=new E.a({width:u,height:h,bandCount:m,pixelType:y,compression:b,pixelSize:S,storageInfo:T,spatialReference:R,keyProperties:_,extent:j,statistics:v?v.statistics:null});if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var F;null!=t&&(k.statistics=null!=(F=t.statistics)?F:k.statistics,k.histograms=t.histograms,t.histograms&&!Object(a.i)(k.statistics)&&(k.statistics=Object(V.e)(t.histograms)))}if(this._set("rasterInfo",k),this._headerInfo={littleEndian:r,isBigTiff:o,ifds:l,...c},!this._headerInfo.isSupported)throw new f.a("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,n={}){if(!this._headerInfo&&this._headerInfo.isSupported)return null;const{blockBoundary:a}=this.rasterInfo.storageInfo,r=e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,s=e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight,o=a[e];if(!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i)return null;const l=this.getTileLocation(e,t,i);if(!l)return null;const{range:c,actualTileWidth:u,actualTileHeight:h,ifd:f}=l,{data:d}=await this.request(this.url,{range:c,responseType:"array-buffer",signal:n.signal}),p=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:f,offset:0,size:0},width:r,height:s,planes:null,pixelType:null});let m,y,b;if(u!==r||h!==s){let e=p.mask;if(e)for(m=0;m<s;m++)if(b=m*r,m<h)for(y=u;y<r;y++)e[b+y]=0;else for(y=0;y<r;y++)e[b+y]=0;else for(e=new Uint8Array(r*s),p.mask=e,m=0;m<h;m++)for(b=m*r,y=0;y<u;y++)e[b+y]=1}return p}async readIFDs(e,t,i,n,a,r=4,s){if(!n)return null;(n>=t.byteLength||n<0)&&(t=(await this.request(this.url,{range:{from:n+a,to:n+a+this._bufferSize},responseType:"array-buffer",signal:s})).data,a=n+a,n=0);const o=await this.readIFD(t,i,n,a,Ce.a.TIFF_TAGS,r,s);if(e.push(o.ifd),!o.nextIFD)return null;await this.readIFDs(e,t,i,o.nextIFD-a,a,r,s)}async readIFD(e,t,i,n,a=Ce.a.TIFF_TAGS,r=4,s){if(!e)return null;const o=Object(ke.e)(e,t,i,n,a,r);if(o.success){const i=[];if(o.ifd.forEach((e=>{e.values||i.push(e)})),i.length>0){const a=i.map((e=>e.offlineOffsetSize)),r=Math.min.apply(null,a.map((e=>e[0])));if(Math.min.apply(null,a.map((e=>e[0]+e[1])))-r<=this._bufferSize){const{data:a}=await this.request(this.url,{range:{from:r,to:r+this._bufferSize},responseType:"array-buffer",signal:s});e=a,n=r,i.forEach((i=>Object(ke.d)(e,t,i,n)))}}if(o.ifd.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),a=i.values;if(a&&a.length>4){const r=a[0]+"."+a[1]+"."+a[2],o=await this.readIFD(e,t,i.valueOffset+6-n,n,Ce.a.GEO_KEYS,2,s);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[r]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:n,to:n+o.requiredBufferSize+4},responseType:"array-buffer",signal:s});return(e=i.data).byteLength<o.requiredBufferSize?null:this.readIFD(e,t,0,n,Ce.a.TIFF_TAGS,4,s)}}getTileLocation(e,t,i){const{firstPyramidLevel:n,blockBoundary:a}=this.rasterInfo.storageInfo,r=0===e?0:e-(n-1),s=this._headerInfo.ifds[r];if(!s)return null;const o=Fe(s,"TILEOFFSETS");if(void 0===o)return null;const l=Fe(s,"TILEBYTECOUNTS"),{minRow:c,minCol:u,maxRow:h,maxCol:f}=a[r];if(t>h||i>f||t<c||i<u)return null;const d=Pe(s,"IMAGEWIDTH"),p=Pe(s,"IMAGELENGTH"),m=Pe(s,"TILEWIDTH"),y=Pe(s,"TILELENGTH"),b=t*(f+1)+i,x=o[b],g=l[b];return null==x||null==g?null:{range:{from:x,to:x+g-1},ifd:s,actualTileWidth:i===f?d%m:m,actualTileHeight:t===h?p%y:y}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return be(t)}catch{return null}}};Object(n.a)([Object(o.b)()],Be.prototype,"_files",void 0),Object(n.a)([Object(o.b)()],Be.prototype,"_headerInfo",void 0),Object(n.a)([Object(o.b)()],Be.prototype,"_bufferSize",void 0),Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],Be.prototype,"datasetFormat",void 0),Be=Object(n.a)([Object(h.a)("esri.layers.support.rasterDatasets.TIFFRaster")],Be);var De=Be;const ze=new Map;ze.set("CRF",{desc:"Cloud Raster Format",constructor:ie}),ze.set("MRF",{desc:"Meta Raster Format",constructor:_e}),ze.set("TIFF",{desc:"GeoTIFF",constructor:De}),ze.set("RasterTileServer",{desc:"Raster Tile Server",constructor:ve}),ze.set("JPG",{desc:"JPG Raster Format",constructor:ge}),ze.set("PNG",{desc:"PNG Raster Format",constructor:ge}),ze.set("GIF",{desc:"GIF Raster Format",constructor:ge}),ze.set("BMP",{desc:"BMP Raster Format",constructor:ge});const Ne=Object(l.b)()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"});function Le(){return{enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}let He=class extends(Object(I.a)(Object(R.a)(Object(j.a)(Object(g.a)(Object(v.a)(H(Object(b.a)(y.a)))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(a.i)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then((()=>this._openRaster(t)),(()=>this._openRaster(t)))),Object(p.u)(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get fields(){var e,t;let i=[new O.a({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const n=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(n){const e=n.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));i=i.concat(e)}return i}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const n=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,a=Object(w.b)(n,i)||void 0;if(null!=a)return a}createPopupTemplate(e){return Object(M.a)(this,e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new f.a("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const e=new Set;return ze.forEach(((t,i)=>e.add(i))),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:n}=e;let a=e.datasetFormat;null==a&&t.lastIndexOf(".")&&(a=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===a||"TIF"===a?a="TIFF":"JPG"!==a&&"JPEG"!==a&&"JFIF"!==a||(a="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(a="RasterTileServer");const r={url:t,sourceJSON:n,datasetFormat:a,ioConfig:i||{bandIds:null,sampling:null}};let s,o;if(this.supportedFormats.has(a))return s=ze.get(a).constructor,o=new s(r),await o.open({signal:e.signal}),o;if(a)throw new f.a("rasterfactory:open","not a supported format "+a);const l=Array.from(ze.keys());let c=0;const u=function(){return a=l[c++],a?(s=ze.get(a).constructor,o=new s(r),o.open({signal:e.signal}).then((()=>o)).catch((()=>u()))):null};return u()}static register(e,t,i){ze.has(e.toUpperCase())||ze.set(e.toUpperCase(),{desc:t,constructor:i})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:this.ioConfig,signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new f.a("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings()}};Object(n.a)([Object(o.b)()],He.prototype,"ioConfig",void 0),Object(n.a)([Object(o.b)({type:[s.a],json:{write:{overridePolicy:Le}}})],He.prototype,"bandIds",void 0),Object(n.a)([Object(o.b)({json:{write:{overridePolicy:Le}}}),Object(c.a)(Ne)],He.prototype,"interpolation",void 0),Object(n.a)([Object(o.b)({json:{write:!0}})],He.prototype,"multidimensionalDefinition",void 0),Object(n.a)([Object(o.b)(x.d)],He.prototype,"legendEnabled",void 0),Object(n.a)([Object(o.b)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],He.prototype,"isReference",void 0),Object(n.a)([Object(o.b)({type:["show","hide"]})],He.prototype,"listMode",void 0),Object(n.a)([Object(o.b)()],He.prototype,"sourceJSON",void 0),Object(n.a)([Object(o.b)({readOnly:!0})],He.prototype,"version",void 0),Object(n.a)([Object(o.b)()],He.prototype,"title",void 0),Object(n.a)([Object(o.b)({readOnly:!0,json:{read:!1}})],He.prototype,"type",void 0),Object(n.a)([Object(o.b)({type:["ArcGISTiledImageServiceLayer"]})],He.prototype,"operationalLayerType",void 0),Object(n.a)([Object(o.b)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:Le,writer(e,t,i){t[i]=!e}}}})],He.prototype,"popupEnabled",void 0),Object(n.a)([Object(o.b)({type:m.a,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:Le}}})],He.prototype,"popupTemplate",void 0),Object(n.a)([Object(o.b)({readOnly:!0,dependsOn:["title"]})],He.prototype,"defaultPopupTemplate",null),Object(n.a)([Object(o.b)({readOnly:!0,type:[O.a],dependsOn:["rasterInfo"]})],He.prototype,"fields",null),Object(n.a)([Object(o.b)({types:w.a,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:Le},origins:{"web-scene":{types:w.c,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],He.prototype,"renderer",null),Object(n.a)([Object(u.a)("renderer")],He.prototype,"readRenderer",null),He=Object(n.a)([Object(h.a)("esri.layers.ImageryTileLayer")],He);var Ae=He;t.default=Ae},773:function(e,t,i){"use strict";i.d(t,"a",(function(){return h})),i.d(t,"b",(function(){return p})),i.d(t,"c",(function(){return f})),i.d(t,"d",(function(){return l})),i.d(t,"e",(function(){return d})),i.d(t,"f",(function(){return c})),i.d(t,"g",(function(){return u})),i.d(t,"h",(function(){return m}));var n=i(2),a=i(33),r=(i(69),i(672));const s=new Map,o=new class{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.refCount--,e.refCount<=0&&(n.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.ts=Date.now(),e.refCount++,n.delete(i),n.set(i,e),e.block}return null}putBlock(e,t,i,n=null){const a=this._cachedBlocks,r=e+"/"+t;if(a.has(r)){const e=a.get(r);e.ts=Date.now(),e.refCount++}else a.set(r,{block:i,ts:Date.now(),refCount:1,controller:n});this.trim(),this.updateTimer()}deleteBlock(e,t){const i=this._cachedBlocks,n=e+"/"+t;i.has(n)&&i.delete(n)}updateMaxSize(e){this._size=e,this.trim()}empty(){this._cachedBlocks.clear(),this.clearTimer()}getCurrentSize(){return this._cachedBlocks.size}updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval((()=>{const t=Array.from(e),i=Date.now();for(let n=0;n<t.length&&t[n][1].ts<=i-this._duration;n++)e.delete(t[n][0]);0===e.size&&this.clearTimer()}),this._interval)}trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function l(e,t){return null==t?e:`${e}?sliceId=${t}`}function c(e,t){const i={extent:null,rasterInfo:t,cache:new Map};if(s.has(e)){const t=s.get(e);return t.push(i),t.length-1}return s.set(e,[i]),0}function u(e,t){s.has(e)&&(s.get(e)[t]=null)}function h(e,t,i){if(!s.has(e))return null==t?o.decreaseRefCount(e,i):0;const n=s.get(e);if(null==n[t])return o.decreaseRefCount(e,i);const a=n[t].cache;if(a.has(i)){const e=a.get(i);if(e.refCount--,0===e.refCount){a.delete(i);for(let e=0;e<n.length;e++)n[e]&&n[e].cache.has(i)&&n[e].cache.delete(i);e.controller&&e.controller.abort()}return e.refCount}return 0}function f(e,t,i){if(!s.has(e))return null==t?o.getBlock(e,i):null;const n=s.get(e);if(null==n[t]){for(let e=0;e<n.length;e++)if(n[e]&&n[e].cache.has(i)){const t=n[e].cache.get(i);return t.refCount++,t.block}return o.getBlock(e,i)}const a=n[t].cache;if(a.has(i)){const e=a.get(i);return e.refCount++,e.block}for(let r=0;r<n.length;r++)if(r!==t&&n[r]&&n[r]&&n[r].cache.has(i)){const e=n[r].cache.get(i);return e.refCount++,a.set(i,e),e.block}return null}function d(e,t,i,n,a=null){if(!s.has(e))return void(null==t&&o.putBlock(e,i,n,a));const r=s.get(e);if(null==r[t])return void o.putBlock(e,i,n,a);const l={refCount:1,block:n,isResolved:!1,isRejected:!1,controller:a};n.then((()=>l.isResolved=!0)).catch((()=>l.isRejected=!0)),r[t].cache.set(i,l)}function p(e,t,i){if(!s.has(e))return void(null==t&&o.deleteBlock(e,i));const n=s.get(e);null!=n[t]?n[t].cache.delete(i):o.deleteBlock(e,i)}function m(e,t,i,o,l,c,u=null){const h=function(e,t){if(!s.has(e))return null;const i=s.get(e);return null==i[t]?null:i[t]}(e,t),f=h.extent,{cache:d,rasterInfo:p}=h;if(f&&f.xmin===i.xmin&&f.xmax===i.xmax&&f.ymin===i.ymin&&f.ymax===i.ymax)return;const m=i.clone().normalize(),{spatialReference:y,transform:b}=p,x=new Set;for(let s=0;s<m.length;s++){const e=m[s];if(e.xmax-e.xmin<=o||e.ymax-e.ymin<=o)continue;let t=Object(r.d)(e,y,u);Object(n.i)(b)&&(t=b.inverseTransform(t));const i=new a.a({x:o,y:o,spatialReference:e.spatialReference});if(null===l&&!(l=Object(r.f)(i,y,e,u)))return;const{pyramidLevel:h,pyramidResolution:f,excessiveReading:d}=Object(r.g)(l,p,c||"closest");if(d)return;const{storageInfo:g}=p,{origin:w}=g,O={x:Math.max(0,Math.floor((t.xmin-w.x)/f.x)),y:Math.max(0,Math.floor((w.y-t.ymax)/f.y))},I=Math.ceil((t.xmax-t.xmin)/f.x-.1),v=Math.ceil((t.ymax-t.ymin)/f.y-.1),j=h>0?g.pyramidBlockWidth:g.blockWidth,R=h>0?g.pyramidBlockHeight:g.blockHeight,M=1,T=Math.max(0,Math.floor(O.x/j)-M),S=Math.max(0,Math.floor(O.y/R)-M),_=Math.floor((O.x+I-1)/j)+M,C=Math.floor((O.y+v-1)/R)+M;for(let n=S;n<=C;n++)for(let e=T;e<=_;e++)x.add(`${h}/${n}/${e}`)}d.forEach(((e,t)=>{if(!x.has(t)){const e=d.get(t);(null==e||e.isResolved||e.isRejected)&&d.delete(t)}})),h.extent={xmin:i.xmin,ymin:i.ymin,xmax:i.xmax,ymax:i.ymax}}}}]);