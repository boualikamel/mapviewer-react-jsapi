(this["webpackJsonpjsapi-create-react-app"]=this["webpackJsonpjsapi-create-react-app"]||[]).push([[136],{862:function(t,e,s){"use strict";s.r(e);var r=s(9),o=s(46),i=(s(69),s(644)),c=s(728),a=s(641),n=s(774);e.default=class{async decode(t){const e=await Object(c.a)(t.data,t.options);return e&&e.toJSON()}symbolize(t){t.pixelBlock=i.a.fromJSON(t.pixelBlock),t.extent=t.extent?o.a.fromJSON(t.extent):null;const e=this.symbolizer.symbolize(t);return Object(r.u)(e&&e.toJSON())}async updateSymbolizer(t){var e;this.symbolizer=n.a.fromJSON(t.symbolizerJSON),t.histograms&&"rasterStretch"===(null==(e=this.symbolizer)?void 0:e.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=t.histograms)}stretch(t){const e=this.symbolizer.simpleStretch(i.a.fromJSON(t.srcPixelBlock),t.stretchParams);return Object(r.u)(e&&e.toJSON())}estimateStatisticsHistograms(t){const e=Object(a.f)(i.a.fromJSON(t.srcPixelBlock));return Object(r.u)(e)}split(t){const e=Object(a.m)(i.a.fromJSON(t.srcPixelBlock),t.tileSize,t.maximumPyramidLevel);return e&&e.forEach(((t,s)=>{e.set(s,null==t?void 0:t.toJSON())})),Object(r.u)(e)}async mosaicAndTransform(t){const e=t.srcPixelBlocks.map((t=>t?new i.a(t):null)),s=Object(a.i)(e,t.srcMosaicSize);if(!t.coefs)return s&&s.toJSON();const r=Object(a.a)(s,t.destDimension,t.coefs,t.sampleSpacing,t.interpolation);return r&&r.toJSON()}}}}]);