(this["webpackJsonptesting-ant-cra"]=this["webpackJsonptesting-ant-cra"]||[]).push([[1],{610:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return c})),n.d(t,"d",(function(){return l}));Number.POSITIVE_INFINITY;var a=Math.PI,i=128/a,o=1/Math.LN2;function r(e,t){return(e%=t)>=0?e:e+t}function l(e){return r(e*i,256)}function s(e){return r(.7111111111111111*e,256)}function c(e){return Math.log(e)*o}function u(e,t,n){return e>=t&&e<=n||e>=n&&e<=t}},650:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a,i,o={exports:{}};a=o,void 0!==(i=function(){function e(e,n,i){i=i||2;var o,r,l,c,u,f,v,d=n&&n.length,m=d?n[0]*i:e.length,_=t(e,0,m,i,!0),p=[];if(!_||_.next===_.prev)return p;if(d&&(_=s(e,n,_,i)),e.length>80*i){o=l=e[0],r=c=e[1];for(var g=i;g<m;g+=i)(u=e[g])<o&&(o=u),(f=e[g+1])<r&&(r=f),u>l&&(l=u),f>c&&(c=f);v=0!==(v=Math.max(l-o,c-r))?1/v:0}return a(_,p,i,o,r,v),p}function t(e,t,n,a,i){var o,r;if(i===z(e,t,n,a)>0)for(o=t;o<n;o+=a)r=O(o,e[o],e[o+1],r);else for(o=n-a;o>=t;o-=a)r=O(o,e[o],e[o+1],r);return r&&h(r,r.next)&&(T(r),r=r.next),r}function n(e,t){if(!e)return e;t||(t=e);var n,a=e;do{if(n=!1,a.steiner||!h(a,a.next)&&0!==g(a.prev,a,a.next))a=a.next;else{if(T(a),(a=t=a.prev)===a.next)break;n=!0}}while(n||a!==t);return t}function a(e,t,s,c,u,f,d){if(e){!d&&f&&v(e,c,u,f);for(var m,_,p=e;e.prev!==e.next;)if(m=e.prev,_=e.next,f?o(e,c,u,f):i(e))t.push(m.i/s),t.push(e.i/s),t.push(_.i/s),T(e),e=_.next,p=_.next;else if((e=_)===p){d?1===d?a(e=r(n(e),t,s),t,s,c,u,f,2):2===d&&l(e,t,s,c,u,f):a(n(e),t,s,c,u,f,1);break}}}function i(e){var t=e.prev,n=e,a=e.next;if(g(t,n,a)>=0)return!1;for(var i=e.next.next;i!==e.prev;){if(_(t.x,t.y,n.x,n.y,a.x,a.y,i.x,i.y)&&g(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function o(e,t,n,a){var i=e.prev,o=e,r=e.next;if(g(i,o,r)>=0)return!1;for(var l=i.x<o.x?i.x<r.x?i.x:r.x:o.x<r.x?o.x:r.x,s=i.y<o.y?i.y<r.y?i.y:r.y:o.y<r.y?o.y:r.y,c=i.x>o.x?i.x>r.x?i.x:r.x:o.x>r.x?o.x:r.x,u=i.y>o.y?i.y>r.y?i.y:r.y:o.y>r.y?o.y:r.y,f=d(l,s,t,n,a),v=d(c,u,t,n,a),m=e.prevZ,p=e.nextZ;m&&m.z>=f&&p&&p.z<=v;){if(m!==e.prev&&m!==e.next&&_(i.x,i.y,o.x,o.y,r.x,r.y,m.x,m.y)&&g(m.prev,m,m.next)>=0)return!1;if(m=m.prevZ,p!==e.prev&&p!==e.next&&_(i.x,i.y,o.x,o.y,r.x,r.y,p.x,p.y)&&g(p.prev,p,p.next)>=0)return!1;p=p.nextZ}for(;m&&m.z>=f;){if(m!==e.prev&&m!==e.next&&_(i.x,i.y,o.x,o.y,r.x,r.y,m.x,m.y)&&g(m.prev,m,m.next)>=0)return!1;m=m.prevZ}for(;p&&p.z<=v;){if(p!==e.prev&&p!==e.next&&_(i.x,i.y,o.x,o.y,r.x,r.y,p.x,p.y)&&g(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function r(e,t,a){var i=e;do{var o=i.prev,r=i.next.next;!h(o,r)&&x(o,i,i.next,r)&&S(o,r)&&S(r,o)&&(t.push(o.i/a),t.push(i.i/a),t.push(r.i/a),T(i),T(i.next),i=e=r),i=i.next}while(i!==e);return n(i)}function l(e,t,i,o,r,l){var s=e;do{for(var c=s.next.next;c!==s.prev;){if(s.i!==c.i&&p(s,c)){var u=C(s,c);return s=n(s,s.next),u=n(u,u.next),a(s,t,i,o,r,l),void a(u,t,i,o,r,l)}c=c.next}s=s.next}while(s!==e)}function s(e,a,i,o){var r,l,s,f=[];for(r=0,l=a.length;r<l;r++)(s=t(e,a[r]*o,r<l-1?a[r+1]*o:e.length,o,!1))===s.next&&(s.steiner=!0),f.push(m(s));for(f.sort(c),r=0;r<f.length;r++)u(f[r],i),i=n(i,i.next);return i}function c(e,t){return e.x-t.x}function u(e,t){if(t=function(e,t){var n,a=t,i=e.x,o=e.y,r=-1/0;do{if(o<=a.y&&o>=a.next.y&&a.next.y!==a.y){var l=a.x+(o-a.y)*(a.next.x-a.x)/(a.next.y-a.y);if(l<=i&&l>r){if(r=l,l===i){if(o===a.y)return a;if(o===a.next.y)return a.next}n=a.x<a.next.x?a:a.next}}a=a.next}while(a!==t);if(!n)return null;if(i===r)return n;var s,c=n,u=n.x,v=n.y,d=1/0;a=n;do{i>=a.x&&a.x>=u&&i!==a.x&&_(o<v?i:r,o,u,v,o<v?r:i,o,a.x,a.y)&&(s=Math.abs(o-a.y)/(i-a.x),S(a,e)&&(s<d||s===d&&(a.x>n.x||a.x===n.x&&f(n,a)))&&(n=a,d=s)),a=a.next}while(a!==c);return n}(e,t)){var a=C(t,e);n(t,t.next),n(a,a.next)}}function f(e,t){return g(e.prev,e,t.prev)<0&&g(t.next,e,e.next)<0}function v(e,t,n,a){var i=e;do{if(null===i.z&&(i.z=d(i.x,i.y,t,n,a)),i.prev.next!==i||i.next.prev!==i)return i.prev.next=i,i.next.prev=i,v(e,t,n,a);i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,function(e){var t,n,a,i,o,r,l,s,c=1;do{for(n=e,e=null,o=null,r=0;n;){for(r++,a=n,l=0,t=0;t<c&&(l++,a=a.nextZ);t++);for(s=c;l>0||s>0&&a;)0!==l&&(0===s||!a||n.z<=a.z)?(i=n,n=n.nextZ,l--):(i=a,a=a.nextZ,s--),o?o.nextZ=i:e=i,i.prevZ=o,o=i;n=a}o.nextZ=null,c*=2}while(r>1)}(i)}function d(e,t,n,a,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-a)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function m(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function _(e,t,n,a,i,o,r,l){return(i-r)*(t-l)-(e-r)*(o-l)>=0&&(e-r)*(a-l)-(n-r)*(t-l)>=0&&(n-r)*(o-l)-(i-r)*(a-l)>=0}function p(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&x(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(S(e,t)&&S(t,e)&&function(e,t){var n=e,a=!1,i=(e.x+t.x)/2,o=(e.y+t.y)/2;do{n.y>o!=n.next.y>o&&n.next.y!==n.y&&i<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(a=!a),n=n.next}while(n!==e);return a}(e,t)&&(g(e.prev,e,t.prev)||g(e,t.prev,t))||h(e,t)&&g(e.prev,e,e.next)>0&&g(t.prev,t,t.next)>0)}function g(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function h(e,t){return e.x===t.x&&e.y===t.y}function x(e,t,n,a){var i=b(g(e,t,n)),o=b(g(e,t,a)),r=b(g(n,a,e)),l=b(g(n,a,t));return i!==o&&r!==l||!(0!==i||!y(e,n,t))||!(0!==o||!y(e,a,t))||!(0!==r||!y(n,e,a))||!(0!==l||!y(n,t,a))}function y(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function b(e){return e>0?1:e<0?-1:0}function S(e,t){return g(e.prev,e,e.next)<0?g(e,t,e.next)>=0&&g(e,e.prev,t)>=0:g(e,t,e.prev)<0||g(e,e.next,t)<0}function C(e,t){var n=new D(e.i,e.x,e.y),a=new D(t.i,t.x,t.y),i=e.next,o=t.prev;return e.next=t,t.prev=e,n.next=i,i.prev=n,a.next=n,n.prev=a,o.next=a,a.prev=o,a}function O(e,t,n,a){var i=new D(e,t,n);return a?(i.next=a.next,i.prev=a,a.next.prev=i,a.next=i):(i.prev=i,i.next=i),i}function T(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function D(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function z(e,t,n,a){for(var i=0,o=t,r=n-a;o<n;o+=a)i+=(e[r]-e[o])*(e[o+1]+e[r+1]),r=o;return i}return e.deviation=function(e,t,n,a){var i=t&&t.length,o=i?t[0]*n:e.length,r=Math.abs(z(e,0,o,n));if(i)for(var l=0,s=t.length;l<s;l++){var c=t[l]*n,u=l<s-1?t[l+1]*n:e.length;r-=Math.abs(z(e,c,u,n))}var f=0;for(l=0;l<a.length;l+=3){var v=a[l]*n,d=a[l+1]*n,m=a[l+2]*n;f+=Math.abs((e[v]-e[m])*(e[d+1]-e[v+1])-(e[v]-e[d])*(e[m+1]-e[v+1]))}return 0===r&&0===f?0:Math.abs((f-r)/r)},e.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},a=0,i=0;i<e.length;i++){for(var o=0;o<e[i].length;o++)for(var r=0;r<t;r++)n.vertices.push(e[i][o][r]);i>0&&(a+=e[i-1].length,n.holes.push(a))}return n},e}())&&(a.exports=i);var r=o.exports},663:function(e,t,n){"use strict";var a=n(11),i=n(15),o=n(4),r=n(5),l=n(47),s=n(46),c=n(6),u=n(7),f=(n(13),n(10)),v=n(730),d=n(664),m=n(27),_=n(22),p=n(12),g=n(471),h=n(19),x=n(650),y=n(50),b=n(91),S=n(439),C=n(154),O=n(595),T=n(144),D=p.a.getLogger("esri.views.2d.engine.webgl.Mesh2D"),z=function(e,t,n,a){for(var i=0,o=1;o<n;o++){var r=e[2*(t+o-1)],l=e[2*(t+o-1)+1];i+=(e[2*(t+o)]-r)*(e[2*(t+o)+1]+l)}return a?i>0:i<0},V=function(e,t){for(var n=e.coords,a=e.lengths,o=[],r=0,l=0;r<a.length;l+=a[r],r+=1){for(var s=l,c=[];r<a.length-1&&z(n,l+a[r],a[r+1],t);l+=a[r+=1])c.push(l+a[r]-s);var u,f=n.slice(2*s,2*(l+a[r])),v=Object(x.a)(f,c,2),d=Object(i.a)(v);try{for(d.s();!(u=d.n()).done;){var m=u.value;o.push(m+s)}}catch(_){d.e(_)}finally{d.f()}}return o},P=function(){function e(t,n,a){var i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];Object(o.a)(this,e),this._cache={},this.vertices=t,this.indices=n,this.primitiveType=a,this.isMapSpace=i}return Object(r.a)(e,[{key:"destroy",value:function(){for(var e in Object(f.k)(this._cache.indexBuffer)&&this._cache.indexBuffer.dispose(),this._cache.vertexBuffers)Object(f.k)(this._cache.vertexBuffers[e])&&this._cache.vertexBuffers[e].dispose()}},{key:"elementType",get:function(){return function(e){switch(e.BYTES_PER_ELEMENT){case 1:return 5121;case 2:return 5123;case 4:return 5125;default:throw new _.a("Cannot get DataType of array")}}(this.indices)}},{key:"getIndexBuffer",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:35044;return this._cache.indexBuffer||(this._cache.indexBuffer=T.a.createIndex(e,t,this.indices)),this._cache.indexBuffer}},{key:"getVertexBuffers",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:35044;return this._cache.vertexBuffers||(this._cache.vertexBuffers=Object.keys(this.vertices).reduce((function(i,o){return Object(a.a)(Object(a.a)({},i),{},Object(h.a)({},o,T.a.createVertex(e,n,t.vertices[o])))}),{})),this._cache.vertexBuffers}}],[{key:"fromRect",value:function(t){var n=t.x,a=t.y,i=n+t.width,o=a+t.height;return e.fromScreenExtent({xmin:n,ymin:a,xmax:i,ymax:o})}},{key:"fromPath",value:function(t){for(var n=Object(S.f)(new C.a,t.path,!1,!1),a=n.coords,i=new Uint32Array(V(n,!0)),o=new Uint32Array(a.length/2),r=0;r<o.length;r++)o[r]=Object(O.a)(Math.floor(a[2*r]),Math.floor(a[2*r+1]));return new e({geometry:o},i,4)}},{key:"fromGeometry",value:function(t,n){var a=n.geometry.type;switch(a){case"polygon":return e.fromPolygon(t,n.geometry);case"extent":return e.fromMapExtent(t,n.geometry);default:return D.error(new _.a("mapview-bad-type","Unable to create a mesh from type ".concat(a),n)),e.fromRect({x:0,y:0,width:1,height:1})}}},{key:"fromPolygon",value:function(t,n){for(var a=Object(S.g)(new C.a,n,!1,!1),i=a.coords,o=new Uint32Array(V(a,!1)),r=new Uint32Array(i.length/2),l=Object(b.a)(),s=Object(b.a)(),c=0;c<r.length;c++)Object(y.r)(l,i[2*c],i[2*c+1]),t.toScreen(s,l),r[c]=Object(O.a)(Math.floor(s[0]),Math.floor(s[1]));return new e({geometry:r},o,4,!0)}},{key:"fromScreenExtent",value:function(t){var n=t.xmin,a=t.xmax,i=t.ymin,o=t.ymax;return new e({geometry:new Uint32Array([Object(O.a)(n,i),Object(O.a)(a,i),Object(O.a)(n,o),Object(O.a)(n,o),Object(O.a)(a,i),Object(O.a)(a,o)])},new Uint32Array([0,1,2,3,4,5]),4)}},{key:"fromMapExtent",value:function(t,n){var a=t.toScreen([0,0],[n.xmin,n.ymin]),i=Object(m.a)(a,2),o=i[0],r=i[1],l=t.toScreen([0,0],[n.xmax,n.ymax]),s=Object(m.a)(l,2),c=s[0],u=s[1];return new e({geometry:new Uint32Array([Object(O.a)(o,r),Object(O.a)(c,r),Object(O.a)(o,u),Object(O.a)(o,u),Object(O.a)(c,r),Object(O.a)(c,u)])},new Uint32Array([0,1,2,3,4,5]),4)}}]),e}(),I=n(266),w=p.a.getLogger("esri.views.2d.engine.webgl.ClippingInfo"),M=function(e){return parseFloat(e)/100},A=function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(e,a){var i;return Object(o.a)(this,n),(i=t.call(this))._clip=a,i._cache={},i.stage=e,i._handle=a.watch("version",(function(){return i._invalidate()})),i.ready(),i}return Object(r.a)(n,[{key:"_destroyGL",value:function(){Object(f.k)(this._cache.mesh)&&(this._cache.mesh.destroy(),this._cache.mesh=null),Object(f.k)(this._cache.vao)&&(this._cache.vao.dispose(),this._cache.vao=null)}},{key:"destroy",value:function(){this._destroyGL(),this._handle.remove()}},{key:"getVAO",value:function(e,t,n,a){var i=Object(m.a)(t.size,2),o=i[0],r=i[1];if("geometry"!==this._clip.type&&this._lastWidth===o&&this._lastHeight===r||(this._lastWidth=o,this._lastHeight=r,this._destroyGL()),Object(f.j)(this._cache.vao)){var l=this._createMesh(t,this._clip),s=l.getIndexBuffer(e),c=l.getVertexBuffers(e);this._cache.mesh=l,this._cache.vao=new I.a(e,n,a,c,s)}return this._cache.vao}},{key:"_invalidate",value:function(){this._destroyGL(),this.requestRender()}},{key:"_createScreenRect",value:function(e,t){var n=Object(m.a)(e.size,2),a=n[0],i=n[1],o="string"==typeof t.left?M(t.left)*a:t.left,r="string"==typeof t.right?M(t.right)*a:t.right,l="string"==typeof t.top?M(t.top)*i:t.top,s="string"==typeof t.bottom?M(t.bottom)*i:t.bottom,c=o,u=l;return{x:c,y:u,width:Math.max(a-r-c,0),height:Math.max(i-s-u,0)}}},{key:"_createMesh",value:function(e,t){switch(t.type){case"rect":return P.fromRect(this._createScreenRect(e,t));case"path":return P.fromPath(t);case"geometry":return P.fromGeometry(e,t);default:return w.error(new _.a("mapview-bad-type","Unable to create ClippingInfo mesh from clip of type: ${clip.type}")),P.fromRect({x:0,y:0,width:1,height:1})}}}],[{key:"fromClipArea",value:function(e,t){return new n(e,t)}}]),n}(g.a),U=n(593),E=function(e){Object(c.a)(n,e);var t=Object(u.a)(n);function n(){var e;return Object(o.a)(this,n),(e=t.apply(this,arguments)).name=e.constructor.name,e}return Object(r.a)(n,[{key:"clips",set:function(e){this._clips=e,this.children.forEach((function(t){return t.clips=e})),this._updateClippingInfo()}},{key:"doRender",value:function(e){var t=this.createRenderParams(e),n=t.painter,a=t.globalOpacity,i=t.profiler,o=t.drawPhase===U.c.LABEL?1:a*this.computedOpacity;i.recordContainerStart(this.name),n.beforeRenderLayer(t,this._clippingInfos?255:0,o),this.updateTransforms(e.state),this.renderChildren(t),n.compositeLayer(t,o),i.recordContainerEnd()}},{key:"renderChildren",value:function(e){Object(f.j)(this._renderPasses)&&(this._renderPasses=this.prepareRenderPasses(e.painter));var t,n=Object(i.a)(this.children);try{for(n.s();!(t=n.n()).done;){t.value.beforeRender(e)}}catch(c){n.e(c)}finally{n.f()}var a,o=Object(i.a)(this._renderPasses);try{for(o.s();!(a=o.n()).done;){var r=a.value;try{r.render(e)}catch(u){}}}catch(c){o.e(c)}finally{o.f()}var l,s=Object(i.a)(this.children);try{for(s.s();!(l=s.n()).done;){l.value.afterRender(e)}}catch(c){s.e(c)}finally{s.f()}}},{key:"createRenderParams",value:function(e){return Object(a.a)(Object(a.a)({},e),{},{requireFBO:this.requiresDedicatedFBO})}},{key:"prepareRenderPasses",value:function(e){var t=this;return[e.registerRenderPass({name:"clip",brushes:[v.a.clip],target:function(){return t._clippingInfos},drawPhase:U.c.MAP|U.c.LABEL|U.c.LABEL_ALPHA|U.c.DEBUG|U.c.HIGHLIGHT})]}},{key:"updateTransforms",value:function(e){var t,n=Object(i.a)(this.children);try{for(n.s();!(t=n.n()).done;){t.value.setTransform(e)}}catch(a){n.e(a)}finally{n.f()}}},{key:"onAttach",value:function(){Object(l.a)(Object(s.a)(n.prototype),"onAttach",this).call(this),this._updateClippingInfo()}},{key:"onDetach",value:function(){Object(l.a)(Object(s.a)(n.prototype),"onDetach",this).call(this),this._updateClippingInfo()}},{key:"_updateClippingInfo",value:function(){var e=this;if(Object(f.k)(this._clippingInfos)&&(this._clippingInfos.forEach((function(e){return e.destroy()})),this._clippingInfos=null),this.stage){var t=this._clips;Object(f.k)(t)&&t.length&&(this._clippingInfos=t.items.map((function(t){return A.fromClipArea(e.stage,t)}))),this.requestRender()}}}]),n}(d.a);t.a=E},677:function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return i}));var a=n(708);function i(e){var t="";for(var n in e){var a=e[n];if("boolean"==typeof a)a&&(t+="#define ".concat(n,"\n"));else if("number"==typeof a)t+="#define ".concat(n," ").concat(a.toFixed(),"\n");else if("object"==typeof a){var i=a.options,o=0;for(var r in i)t+="#define ".concat(i[r]," ").concat((o++).toFixed(),"\n");t+="#define ".concat(n," ").concat(i[a.value],"\n")}}return t}function o(e,t,n,i){n=n||{},i=i||"";var o="function"==typeof t.shaders?t.shaders(n):t.shaders;return new a.a(e,i+o.vertexShader,i+o.fragmentShader,t.attributes)}},678:function(e,t,n){"use strict";function a(){return new Float32Array(4)}function i(e){var t=new Float32Array(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t}function o(e,t,n,a){var i=new Float32Array(4);return i[0]=e,i[1]=t,i[2]=n,i[3]=a,i}function r(){return a()}function l(){return o(1,1,1,1)}function s(){return o(1,0,0,0)}function c(){return o(0,1,0,0)}function u(){return o(0,0,1,0)}function f(){return o(0,0,0,1)}n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return o}));var v=r(),d=l(),m=s(),_=c(),p=u(),g=f();Object.freeze({__proto__:null,create:a,clone:i,fromValues:o,createView:function(e,t){return new Float32Array(e,t,4)},zeros:r,ones:l,unitX:s,unitY:c,unitZ:u,unitW:f,ZEROS:v,ONES:d,UNIT_X:m,UNIT_Y:_,UNIT_Z:p,UNIT_W:g})},683:function(e,t,n){"use strict";var a=n(4),i=n(5),o=n(6),r=n(7),l=n(678),s=n(144),c=(n(440),n(13),n(102),n(338),n(539),n(677)),u=(n(143),n(266)),f=n(710),v=n(888),d=function(e){Object(o.a)(n,e);var t=Object(r.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments))._color=Object(l.c)(1,0,0,1),e._initialized=!1,e}return Object(i.a)(n,[{key:"dispose",value:function(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}},{key:"prepareState",value:function(e,t){var n=e.context;n.setDepthWriteEnabled(!1),n.setDepthTestEnabled(!1),n.setStencilTestEnabled(!0),n.setBlendingEnabled(!1),n.setColorMask(!1,!1,!1,!1),n.setStencilOp(7680,7680,7681),n.setStencilWriteMask(255),n.setStencilFunctionSeparate(1032,516,t.stencilRef,255)}},{key:"draw",value:function(e,t){var n=e.context;this._initialized||this._initialize(n),n.bindVAO(this._solidVertexArrayObject),n.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._solidProgram.setUniform2fv("u_coord_range",t.coordRange),this._solidProgram.setUniform1f("u_depth",0),this._solidProgram.setUniform4fv("u_color",this._color),n.drawArrays(5,0,4),n.bindVAO()}},{key:"_initialize",value:function(e){if(this._initialized)return!0;var t=Object(c.a)(e,v.a);if(!t)return!1;var n=new Int8Array([0,0,1,0,0,1,1,1]),a=s.a.createVertex(e,35044,n),i=new u.a(e,v.a.attributes,{geometry:[{name:"a_pos",count:2,type:5120,offset:0,stride:2,normalized:!1,divisor:0}]},{geometry:a});return this._solidProgram=t,this._solidVertexArrayObject=i,this._initialized=!0,!0}}]),n}(f.a);t.a=d},690:function(e,t,n){"use strict";var a=n(4),i=n(5),o=n(6),r=n(7),l=n(678),s=n(144),c=(n(440),n(13),n(102),n(338),n(539),n(677)),u=n(143),f=n(266),v=n(710),d=n(888),m=n(758),_={shaders:{vertexShader:Object(m.a)("tileInfo/tileInfo.vert"),fragmentShader:Object(m.a)("tileInfo/tileInfo.frag")},attributes:new Map([["a_pos",0]])},p=300,g=function(e){Object(o.a)(n,e);var t=Object(r.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments))._color=Object(l.c)(1,0,0,1),e}return Object(i.a)(n,[{key:"dispose",value:function(){this._outlineProgram&&(this._outlineProgram.dispose(),this._outlineProgram=null),this._tileInfoProgram&&(this._tileInfoProgram.dispose(),this._tileInfoProgram=null),this._outlineVertexArrayObject&&(this._outlineVertexArrayObject.dispose(),this._outlineVertexArrayObject=null),this._tileInfoVertexArrayObject&&(this._tileInfoVertexArrayObject.dispose(),this._tileInfoVertexArrayObject=null),this._canvas=null}},{key:"prepareState",value:function(e){var t=e.context;t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(1,771,1,771),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1)}},{key:"draw",value:function(e,t){var n=e.context;if(t.isReady){this._loadWGLResources(n),n.bindVAO(this._outlineVertexArrayObject),n.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._outlineProgram.setUniform2f("u_coord_range",t.coordRange[0],t.coordRange[1]),this._outlineProgram.setUniform1f("u_depth",0),this._outlineProgram.setUniform4fv("u_color",this._color),n.drawArrays(3,0,4),n.bindVAO();var a=this._getTexture(n,t);a&&(n.bindVAO(this._tileInfoVertexArrayObject),n.useProgram(this._tileInfoProgram),n.bindTexture(a,0),this._tileInfoProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._tileInfoProgram.setUniform1f("u_depth",0),this._tileInfoProgram.setUniform2f("u_coord_ratio",t.coordRange[0]/t.size[0],t.coordRange[1]/t.size[1]),this._tileInfoProgram.setUniform2f("u_delta",8,8),this._tileInfoProgram.setUniform2f("u_dimensions",a.descriptor.width,a.descriptor.height),n.drawArrays(5,0,4),n.bindVAO())}}},{key:"_loadWGLResources",value:function(e){if(!this._outlineProgram||!this._tileInfoProgram){var t=Object(c.a)(e,d.a),n=Object(c.a)(e,_),a={geometry:[{name:"a_pos",count:2,type:5120,offset:0,stride:2,normalized:!1,divisor:0}]},i=new Int8Array([0,0,1,0,1,1,0,1]),o=s.a.createVertex(e,35044,i),r=new f.a(e,d.a.attributes,a,{geometry:o}),l=new Int8Array([0,0,1,0,0,1,1,1]),u=s.a.createVertex(e,35044,l),v=new f.a(e,_.attributes,a,{geometry:u});this._outlineProgram=t,this._tileInfoProgram=n,this._outlineVertexArrayObject=r,this._tileInfoVertexArrayObject=v}}},{key:"_getTexture",value:function(e,t){if(t.texture&&t.triangleCountReportedInDebug===t.triangleCount)return t.texture;t.triangleCountReportedInDebug=t.triangleCount,this._canvas||(this._canvas=document.createElement("canvas"),this._canvas.setAttribute("id","canvas2d"),this._canvas.setAttribute("width","".concat(p)),this._canvas.setAttribute("height","".concat(32)),this._canvas.setAttribute("style","display:none"));var n=t.triangleCount,a=t.key.id;t.triangleCount>0&&(a+=", ".concat(n));var i=this._canvas,o=i.getContext("2d");return o.font="24px sans-serif",o.textAlign="left",o.textBaseline="top",o.clearRect(0,0,p,32),n>1e5?(o.fillStyle="red",o.fillRect(0,0,p,32),o.fillStyle="black"):(o.clearRect(0,0,p,32),o.fillStyle="blue"),o.fillText(a,0,0),t.texture=new u.a(e,{target:3553,pixelFormat:6408,dataType:5121,samplingMode:9728,wrapMode:33071},i),t.texture}}]),n}(v.a);t.a=g},708:function(e,t,n){"use strict";n.d(t,"a",(function(){return C}));var a=n(4),i=n(5),o=(n(13),n(10)),r=n(102),l=n(338),s=n(15),c=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"],u=n(539),f=999,v=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function d(){var e,t,n,a=0,i=0,o=f,r=[],l=[],s=1,c=0,d=0,m=!1,_=!1,p="";return function(e){return l=[],null!==e?h(e.replace?e.replace(/\r\n/g,"\n"):e):(r.length&&g(r.join("")),o=10,g("(eof)"),l)};function g(e){e.length&&l.push({type:v[o],data:e,position:d,line:s,column:c})}function h(u){var v;for(a=0,n=(p+=u).length;e=p[a],a<n;){switch(v=a,o){case 0:a="/"===e&&"*"===t?(r.push(e),g(r.join("")),o=f,a+1):(r.push(e),t=e,a+1);break;case 1:case 2:a=x();break;case 3:a=y();break;case 4:a="."===e||/[eE]/.test(e)?(r.push(e),o=5,t=e,a+1):"x"===e&&1===r.length&&"0"===r[0]?(o=11,r.push(e),t=e,a+1):/[^\d]/.test(e)?(g(r.join("")),o=f,a):(r.push(e),t=e,a+1);break;case 11:a=/[^a-fA-F0-9]/.test(e)?(g(r.join("")),o=f,a):(r.push(e),t=e,a+1);break;case 5:"f"===e&&(r.push(e),t=e,a+=1),a=/[eE]/.test(e)||"-"===e&&/[eE]/.test(t)?(r.push(e),t=e,a+1):/[^\d]/.test(e)?(g(r.join("")),o=f,a):(r.push(e),t=e,a+1);break;case 9999:a=S();break;case 9:a=/[^\s]/g.test(e)?(g(r.join("")),o=f,a):(r.push(e),t=e,a+1);break;case f:r=r.length?[]:r,a="/"===t&&"*"===e?(d=i+a-1,o=0,t=e,a+1):"/"===t&&"/"===e?(d=i+a-1,o=1,t=e,a+1):"#"===e?(o=2,d=i+a,a):/\s/.test(e)?(o=9,d=i+a,a):(m=/\d/.test(e),_=/[^\w_]/.test(e),d=i+a,o=m?4:_?3:9999,a)}if(v!==a)switch(p[v]){case"\n":c=0,++s;break;default:++c}}return i+=a,p=p.slice(a),l}function x(){return"\r"!==e&&"\n"!==e||"\\"===t?(r.push(e),t=e,a+1):(g(r.join("")),o=f,a)}function y(){if("."===t&&/\d/.test(e))return o=5,a;if("/"===t&&"*"===e)return o=0,a;if("/"===t&&"/"===e)return o=1,a;if("."===e&&r.length){for(;b(r););return o=5,a}if(";"===e||")"===e||"("===e){if(r.length)for(;b(r););return g(e),o=f,a+1}var n=2===r.length&&"="!==e;if(/[\w_\d\s]/.test(e)||n){for(;b(r););return o=f,a}return r.push(e),t=e,a+1}function b(e){for(var t,n,a=0;;){if(t=u.c.indexOf(e.slice(0,e.length+a).join("")),n=u.c[t],-1===t){if(a--+e.length>0)continue;n=e.slice(0,1).join("")}return g(n),d+=n.length,(r=r.slice(n.length)).length}}function S(){if(/[^\d\w_]/.test(e)){var n=r.join("");return o=u.b.indexOf(n)>-1?8:u.a.indexOf(n)>-1?7:6,g(r.join("")),o=f,a}return r.push(e),t=e,a+1}}function m(e){return function(e){var t=d(),n=[];return(n=n.concat(t(e))).concat(t(null))}(e)}var _=["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"];function p(e,t){for(var n=t-1;n>=0;n--){var a=e[n];if("whitespace"!==a.type&&"block-comment"!==a.type){if("keyword"!==a.type)break;if("attribute"===a.data||"in"===a.data)return!0}}return!1}function g(e,t,n,a){a=a||n;var i,o=Object(s.a)(e);try{for(o.s();!(i=o.n()).done;){var r=i.value;if("ident"===r.type&&r.data===n)return a in t?t[a]++:t[a]=0,g(e,t,a+"_"+t[a],a)}}catch(l){o.e(l)}finally{o.f()}return n}function h(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"afterVersion";function a(e,t){for(var n=t;n<e.length;n++){var a=e[n];if("operator"===a.type&&";"===a.data)return n}return null}function i(e){for(var t=-1,i=0,o=-1,r=0;r<e.length;r++){var l=e[r];if("preprocessor"===l.type&&(l.data.match(/\#(if|ifdef|ifndef)\s+.+/)?++i:l.data.match(/\#endif\s*.*/)&&--i),"afterVersion"!==n&&"afterPrecision"!==n||"preprocessor"===l.type&&/^#version/.test(l.data)&&(o=Math.max(o,r)),"afterPrecision"===n&&"keyword"===l.type&&"precision"===l.data){var s=a(e,r);if(null===s)throw new Error("precision statement not followed by any semicolons!");o=Math.max(o,s)}t<o&&0===i&&(t=r)}return t+1}var o={data:"\n",type:"whitespace"},r=function(t){return t<e.length&&/[^\r\n]$/.test(e[t].data)},l=i(e);r(l-1)&&e.splice(l++,0,o);var c,u=Object(s.a)(t);try{for(u.s();!(c=u.n()).done;){var f=c.value;e.splice(l++,0,f)}}catch(v){u.e(v)}finally{u.f()}r(l-1)&&r(l)&&e.splice(l,0,o)}function x(e,t,n){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"lowp";h(e,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:a},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function y(e,t,n,a){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"lowp";h(e,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:a.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function b(e,t){for(var n,a,i=-1,o=t;o<e.length;o++){var r=e[o];if("operator"===r.type&&("["===r.data&&(n=o),"]"===r.data)){a=o;break}"integer"===r.type&&(i=parseInt(r.data,10))}return n&&a&&e.splice(n,a-n+1),i}function S(e,t){var n=m(e);if("300 es"===function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"100",a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"300 es",i=/^\s*\#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/,o=Object(s.a)(e);try{for(o.s();!(t=o.n()).done;){var r=t.value;if("preprocessor"===r.type){var l=i.exec(r.data);if(l){var c=l[1].replace(/\s\s+/g," ");if(c===a)return c;if(c===n)return r.data="#version "+a,n;throw new Error("unknown glsl version: "+c)}}}}catch(u){o.e(u)}finally{o.f()}return e.splice(0,0,{type:"preprocessor",data:"#version "+a},{type:"whitespace",data:"\n"}),null}(n,"100","300 es"))throw new Error("shader is already glsl 300 es");for(var a=null,i=null,o={},r={},l=0;l<n.length;++l){var u=n[l];switch(u.type){case"keyword":35633===t&&"attribute"===u.data?u.data="in":"varying"===u.data&&(u.data=35633===t?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(u.data.trim())&&(u.data=u.data.replace(/(2D|Cube|EXT)/g,"")),35632===t&&"gl_FragColor"===u.data&&(a||x(n,a=g(n,o,"fragColor"),"vec4"),u.data=a),35632===t&&"gl_FragData"===u.data){var f=b(n,l+1),v=g(n,o,"fragData");y(n,v,"vec4",f,"mediump"),u.data=v}else 35632===t&&"gl_FragDepthEXT"===u.data&&(i||(i=g(n,o,"gl_FragDepth")),u.data=i);break;case"ident":if(c.indexOf(u.data)>=0){if(35633===t&&p(n,l))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");u.data in r||(r[u.data]=g(n,o,u.data)),u.data=r[u.data]}}}for(var d=n.length-1;d>=0;--d){var h=n[d];if("preprocessor"===h.type){var S=h.data.match(/\#extension\s+(.*)\:/);if(S&&S[1]&&_.indexOf(S[1].trim())>=0){var C=n[d+1];n.splice(d,C&&"whitespace"===C.type?2:1)}var O=h.data.match(/\#ifdef\s+(.*)/);O&&O[1]&&_.indexOf(O[1].trim())>=0&&(h.data="#if 1");var T=h.data.match(/\#ifndef\s+(.*)/);T&&T[1]&&_.indexOf(T[1].trim())>=0&&(h.data="#if 0")}}return n.map((function(e){return"eof"!==e.type?e.data:""})).join("")}var C=function(){function e(t,n,i,o){Object(a.a)(this,e),this._context=t,this._locations=o,this._vShader=null,this._fShader=null,this._nameToUniformLocation={},this._nameToUniform1={},this._nameToUniform1v={},this._nameToUniform2={},this._nameToUniform3={},this._nameToUniform4={},this._nameToUniformMatrix3={},this._nameToUniformMatrix4={},t||console.error("RenderingContext isn't initialized!"),0===n.length&&console.error("Shaders source should not be empty!"),this._vShader=T(this._context,35633,n),this._fShader=T(this._context,35632,i),this._vShader&&this._fShader||console.error("Error loading shaders!");var s=this._context.gl,c=s.createProgram();s.attachShader(c,this._vShader),s.attachShader(c,this._fShader),o.forEach((function(e,t){return s.bindAttribLocation(c,e,t)})),s.linkProgram(c),Object(l.c)()&&!s.getProgramParameter(c,s.LINK_STATUS)&&console.error("Could not initialize shader\nVALIDATE_STATUS: "+s.getProgramParameter(c,s.VALIDATE_STATUS)+", gl error ["+s.getError()+"]infoLog: "+s.getProgramInfoLog(c)),this._glName=c,this._context.instanceCounter.increment(r.b.Program,this)}return Object(i.a)(e,[{key:"glName",get:function(){return this._glName}},{key:"dispose",value:function(){var e=this._context.gl;if(this._vShader){var t=this._vShader;e.deleteShader(t),this._vShader=null}if(this._fShader){var n=this._fShader;e.deleteShader(n),this._fShader=null}this._glName&&(e.deleteProgram(this._glName),this._glName=null,this._context.instanceCounter.decrement(r.b.Program,this))}},{key:"_getUniformLocation",value:function(e){return void 0===this._nameToUniformLocation[e]&&(this._nameToUniformLocation[e]=this._context.gl.getUniformLocation(this._glName,e)),this._nameToUniformLocation[e]}},{key:"hasUniform",value:function(e){return null!==this._getUniformLocation(e)}},{key:"setUniform1i",value:function(e,t){var n=this._nameToUniform1[e];void 0!==n&&t===n||(this._context.useProgram(this),this._context.gl.uniform1i(this._getUniformLocation(e),t),this._nameToUniform1[e]=t)}},{key:"setUniform1iv",value:function(e,t){var n=this._nameToUniform1v[e];O(n,t)&&(this._context.useProgram(this),this._context.gl.uniform1iv(this._getUniformLocation(e),t),void 0===n?this._nameToUniform1v[e]=Array.from(t):D(t,n))}},{key:"setUniform2iv",value:function(e,t){var n=this._nameToUniform2[e];O(n,t)&&(this._context.useProgram(this),this._context.gl.uniform2iv(this._getUniformLocation(e),t),void 0===n?this._nameToUniform2[e]=Array.from(t):D(t,n))}},{key:"setUniform3iv",value:function(e,t){var n=this._nameToUniform3[e];O(n,t)&&(this._context.useProgram(this),this._context.gl.uniform3iv(this._getUniformLocation(e),t),void 0===n?this._nameToUniform3[e]=Array.from(t):D(t,n))}},{key:"setUniform4iv",value:function(e,t){var n=this._nameToUniform4[e];O(n,t)&&(this._context.useProgram(this),this._context.gl.uniform4iv(this._getUniformLocation(e),t),void 0===n?this._nameToUniform4[e]=Array.from(t):D(t,n))}},{key:"setUniform1f",value:function(e,t){var n=this._nameToUniform1[e];void 0!==n&&t===n||(this._context.useProgram(this),this._context.gl.uniform1f(this._getUniformLocation(e),t),this._nameToUniform1[e]=t)}},{key:"setUniform1fv",value:function(e,t){var n=this._nameToUniform1v[e];O(n,t)&&(this._context.useProgram(this),this._context.gl.uniform1fv(this._getUniformLocation(e),t),void 0===n?this._nameToUniform1v[e]=Array.from(t):D(t,n))}},{key:"setUniform2f",value:function(e,t,n){var a=this._nameToUniform2[e];void 0!==a&&t===a[0]&&n===a[1]||(this._context.useProgram(this),this._context.gl.uniform2f(this._getUniformLocation(e),t,n),void 0===a?this._nameToUniform2[e]=[t,n]:(a[0]=t,a[1]=n))}},{key:"setUniform2fv",value:function(e,t){var n=this._nameToUniform2[e];O(n,t)&&(this._context.useProgram(this),this._context.gl.uniform2fv(this._getUniformLocation(e),t),void 0===n?this._nameToUniform2[e]=Array.from(t):D(t,n))}},{key:"setUniform3f",value:function(e,t,n,a){var i=this._nameToUniform3[e];void 0!==i&&t===i[0]&&n===i[1]&&a===i[2]||(this._context.useProgram(this),this._context.gl.uniform3f(this._getUniformLocation(e),t,n,a),void 0===i?this._nameToUniform3[e]=[t,n,a]:(i[0]=t,i[1]=n,i[2]=a))}},{key:"setUniform3fv",value:function(e,t){var n=this._nameToUniform3[e];O(n,t)&&(this._context.useProgram(this),this._context.gl.uniform3fv(this._getUniformLocation(e),t),void 0===n?this._nameToUniform3[e]=Array.from(t):D(t,n))}},{key:"setUniform4f",value:function(e,t,n,a,i){var o=this._nameToUniform4[e];void 0!==o&&t===o[0]&&n===o[1]&&a===o[2]&&i===o[3]||(this._context.useProgram(this),this._context.gl.uniform4f(this._getUniformLocation(e),t,n,a,i),void 0===o?this._nameToUniform4[e]=[t,n,a,i]:(o[0]=t,o[1]=n,o[2]=a,o[3]=i))}},{key:"setUniform4fv",value:function(e,t){var n=this._nameToUniform4[e];O(n,t)&&(this._context.useProgram(this),this._context.gl.uniform4fv(this._getUniformLocation(e),t),void 0===n?this._nameToUniform4[e]=Array.from(t):D(t,n))}},{key:"setUniformMatrix3fv",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=this._nameToUniformMatrix3[e];z(a,t)&&(this._context.useProgram(this),this._context.gl.uniformMatrix3fv(this._getUniformLocation(e),n,t),void 0===a?this._nameToUniformMatrix3[e]=Array.from(t):D(t,a))}},{key:"setUniformMatrix4fv",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=this._nameToUniformMatrix4[e];V(a,t)&&(this._context.useProgram(this),this._context.gl.uniformMatrix4fv(this._getUniformLocation(e),n,t),void 0===a?this._nameToUniformMatrix4[e]=Array.from(t):D(t,a))}},{key:"assertCompatibleVertexAttributeLocations",value:function(e){e.locations!==this._locations&&console.error("VertexAttributeLocations are incompatible")}},{key:"stop",value:function(){}}]),e}();function O(e,t){if(Object(o.j)(e)||e.length!==t.length)return!0;for(var n=0;n<e.length;++n)if(e[n]!==t[n])return!0;return!1}function T(e,t,n){var a="webgl2"===e.webglVersion?S(n,t):n,i=e.gl,o=i.createShader(t);return i.shaderSource(o,a),i.compileShader(o),Object(l.c)()&&!i.getShaderParameter(o,i.COMPILE_STATUS)&&(console.error("Compile error in ".concat(35633===t?"vertex":"fragment"," shader")),console.error(i.getShaderInfoLog(o)),console.error(function(e){var t=2;return e.replace(/\n/g,(function(){return"\n"+function(e){return e>=1e3?e.toString():("  "+e).slice(-3)}(t++)+":"}))}(a)),"webgl2"===e.webglVersion&&(console.log("Shader source before transpilation:"),console.log(n))),o}function D(e,t){for(var n=0;n<e.length;++n)t[n]=e[n]}function z(e,t){return!!Object(o.j)(e)||(9!==e.length?O(e,t):9!==e.length||e[0]!==t[0]||e[1]!==t[1]||e[2]!==t[2]||e[3]!==t[3]||e[4]!==t[4]||e[5]!==t[5]||e[6]!==t[6]||e[7]!==t[7]||e[8]!==t[8])}function V(e,t){return!!Object(o.j)(e)||(16!==e.length?O(e,t):16!==e.length||e[0]!==t[0]||e[1]!==t[1]||e[2]!==t[2]||e[3]!==t[3]||e[4]!==t[4]||e[5]!==t[5]||e[6]!==t[6]||e[7]!==t[7]||e[8]!==t[8]||e[9]!==t[9]||e[10]!==t[10]||e[11]!==t[11]||e[12]!==t[12]||e[13]!==t[13]||e[14]!==t[14]||e[15]!==t[15])}},710:function(e,t,n){"use strict";var a=n(15),i=n(4),o=n(5),r=function(){function e(){Object(i.a)(this,e),this.name=this.constructor.name||"UnnamedBrush"}return Object(o.a)(e,[{key:"prepareState",value:function(e,t,n){}},{key:"draw",value:function(e,t,n){}},{key:"drawMany",value:function(e,t,n){var i,o=Object(a.a)(t);try{for(o.s();!(i=o.n()).done;){var r=i.value;this.draw(e,r,n)}}catch(l){o.e(l)}finally{o.f()}}}]),e}();t.a=r},730:function(e,t,n){"use strict";n.d(t,"a",(function(){return K}));var a=n(4),i=n(5),o=n(6),r=n(7),l=n(592),s=n(734),c=n(710),u={nearest:{defines:[],samplingMode:9728,mips:!1},bilinear:{defines:[],samplingMode:9729,mips:!1},bicubic:{defines:["bicubic"],samplingMode:9729,mips:!1},trilinear:{defines:[],samplingMode:9987,mips:!0}},f=function(e){Object(o.a)(n,e);var t=Object(r.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments))._desc={vsPath:"raster/bitmap",fsPath:"raster/bitmap",attributes:new Map([["a_position",0],["a_texcoord",1]])},e}return Object(i.a)(n,[{key:"dispose",value:function(){this._quad&&this._quad.dispose()}},{key:"prepareState",value:function(e,t){var n=e.context;n.setBlendingEnabled(!0),"additive"===t.blendFunction?n.setBlendFunctionSeparate(1,1,1,1):n.setBlendFunctionSeparate(1,771,1,771),n.setColorMask(!0,!0,!0,!0),n.setStencilWriteMask(0),n.setStencilTestEnabled(!0),n.setStencilFunction(514,t.stencilRef,255)}},{key:"draw",value:function(e,t){var n=e.context,a=e.renderingOptions,i=e.painter;if(t.source){e.timeline.begin(this.name),this._quad||(this._quad=new s.a(n,[0,0,1,0,0,1,1,1]));var o=function(e,t,n){if("dynamic"===n.samplingMode){var a=e.state,i=t.resolution/t.pixelRatio/a.resolution,o=Math.round(e.pixelRatio)!==e.pixelRatio,r=i>1.05||i<.95;return a.rotation||r||o||t.isSourceScaled||t.rotation?u.bilinear:u.nearest}return u[n.samplingMode]}(e,t,a),r=i.materialManager.getProgram(e,this._desc,o.defines),c=t.coordScale,f=t.computedOpacity,v=t.transforms;t.setSamplingProfile(o),t.bind(e.context,l.v),n.useProgram(r),r.setUniformMatrix3fv("u_dvsMat3",v.dvs),r.setUniform1i("u_texture",l.v),r.setUniform2fv("u_coordScale",c),r.setUniform1f("u_opacity",f),this._quad.draw(),e.timeline.end(this.name)}}}]),n}(c.a),v=n(10),d=n(678),m=n(594),_=n(888),p=n(677),g=function(e){Object(o.a)(n,e);var t=Object(r.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments))._color=Object(d.c)(0,1,0,1),e}return Object(i.a)(n,[{key:"dispose",value:function(){this._program&&this._program.dispose()}},{key:"prepareState",value:function(e){var t=e.context;t.setStencilTestEnabled(!0),t.setBlendingEnabled(!1),t.setFaceCullingEnabled(!1),t.setColorMask(!1,!1,!1,!1),t.setStencilOp(7680,7680,7681),t.setStencilWriteMask(255),t.setStencilFunction(519,0,255)}},{key:"draw",value:function(e,t){var n=e.context,a=e.state,i=Object(m.f)("clip",{geometry:[{location:0,name:"a_pos",count:2,type:5122}]}),o=t.getVAO(n,a,i.attributes,i.bufferLayouts);Object(v.j)(o.indexBuffer)||(this._program||(this._program=Object(p.a)(n,_.a)),n.useProgram(this._program),this._program.setUniform2fv("u_coord_range",[1,1]),this._program.setUniform4fv("u_color",this._color),this._program.setUniformMatrix3fv("u_dvsMat3",a.displayMat3),n.bindVAO(o),n.drawElements(4,o.indexBuffer.size,5125,0),n.bindVAO())}}]),n}(c.a),h=n(690),x=n(683),y=n(15),b=n(66),S=n(220),C=n(144),O=(n(440),n(13),n(102),n(338),n(539),n(143)),T=n(266),D=n(593),z=n(595),V=function(e){Object(o.a)(n,e);var t=Object(r.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments))._color=Object(d.c)(1,0,0,1),e._patternMatrix=Object(S.b)(),e._programOptions={id:!1,pattern:!1},e}return Object(i.a)(n,[{key:"dispose",value:function(){this._vao&&(this._vao.dispose(),this._vao=null)}},{key:"drawMany",value:function(e,t){var n=e.context,a=e.painter,i=e.styleLayerUID;this._loadWGLResources(e);var o,r,s=e.displayLevel,c=e.styleLayer,u=c.backgroundMaterial,f=a.vectorTilesMaterialManager,d=c.getPaintValue("background-color",s),m=c.getPaintValue("background-opacity",s),_=c.getPaintValue("background-pattern",s),p=void 0!==_,g=d[3]*m,h=1|window.devicePixelRatio,x=e.spriteMosaic,S=h>l.F?2:1,C=e.drawPhase===D.c.HITTEST,O=this._programOptions;O.id=C,O.pattern=p;var T=f.getMaterialProgram(n,u,O);if(n.bindVAO(this._vao),n.useProgram(T),p){var V=x.getMosaicItemPosition(_,!0);if(Object(v.k)(V)){var P=V.tl,I=V.br,w=V.page;o=I[0]-P[0],r=I[1]-P[1];var M=x.getPageSize(w);Object(v.k)(M)&&(x.bind(n,9729,w,l.H),T.setUniform4f("u_tlbr",P[0],P[1],I[0],I[1]),T.setUniform2fv("u_mosaicSize",M),T.setUniform1i("u_texture",l.H))}T.setUniform1f("u_opacity",m)}else this._color[0]=g*d[0],this._color[1]=g*d[1],this._color[2]=g*d[2],this._color[3]=g,T.setUniform4fv("u_color",this._color);if(T.setUniform1f("u_depth",c.z||0),C){var A=Object(z.c)(i+1);T.setUniform4fv("u_id",A)}var U,E=Object(y.a)(t);try{for(E.s();!(U=E.n()).done;){var F=U.value;if(T.setUniform1f("u_coord_range",F.coordRange[0]),T.setUniformMatrix3fv("u_dvsMat3",F.transforms.dvs),p){var L=Math.max(Math.pow(2,Math.round(s)-F.key.level),1),j=S*F.size[0]*L,k=j/Object(b.q)(o),R=j/Object(b.q)(r);this._patternMatrix[0]=k,this._patternMatrix[4]=R,T.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix)}n.setStencilFunction(514,F.stencilRef,255),n.drawArrays(5,0,4)}}catch(N){E.e(N)}finally{E.f()}}},{key:"_loadWGLResources",value:function(e){if(!this._vao){var t=e.context,n=e.styleLayer.backgroundMaterial,a=new Int8Array([0,0,1,0,0,1,1,1]),i=C.a.createVertex(t,35044,a),o=new T.a(t,n.getAttributeLocations(),n.getLayoutInfo(),{geometry:i});this._vao=o}}}]),n}(c.a),P=function(e){Object(o.a)(n,e);var t=Object(r.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments))._programOptions={id:!1},e}return Object(i.a)(n,[{key:"dispose",value:function(){}},{key:"drawMany",value:function(e,t){var n=e.context,a=e.displayLevel,i=e.requiredLevel,o=e.state,r=e.drawPhase,l=e.painter,s=e.spriteMosaic,c=e.styleLayerUID;if(t.some((function(e){var t,n;return null!=(t=null==(n=e.layerData.get(c))?void 0:n.circleIndexCount)&&t}))){var u=e.styleLayer,f=u.circleMaterial,d=l.vectorTilesMaterialManager,m=u.getPaintValue("circle-translate",a),_=u.getPaintValue("circle-translate-anchor",a),p=r===D.c.HITTEST,g=this._programOptions;g.id=p;var h=d.getMaterialProgram(n,f,g);n.useProgram(h),h.setUniformMatrix3fv("u_displayMat3",1===_?o.displayMat3:o.displayViewMat3),h.setUniform2fv("u_circleTranslation",m),h.setUniform1f("u_depth",u.z),h.setUniform1f("u_antialiasingWidth",1.2);var x=-1;if(p){var b=Object(z.c)(c+1);h.setUniform4fv("u_id",b)}var S,C=Object(y.a)(t);try{for(C.s();!(S=C.n()).done;){var O=S.value;if(O.layerData.has(c)){O.key.level!==x&&(x=O.key.level,f.setDataUniforms(h,a,u,x,s));var T=O.layerData.get(c);if(T.circleIndexCount){T.prepareForRendering(n);var V=T.circleVertexArrayObject;Object(v.j)(V)||(n.bindVAO(V),h.setUniformMatrix3fv("u_dvsMat3",O.transforms.dvs),i!==O.key.level?n.setStencilFunction(514,O.stencilRef,255):n.setStencilFunction(516,255,255),n.drawElements(4,T.circleIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*T.circleIndexStart),O.triangleCount+=T.circleIndexCount/3)}}}}catch(P){C.e(P)}finally{C.f()}}}}]),n}(c.a),I=n(27),w=1/65536,M=function(e){Object(o.a)(n,e);var t=Object(r.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments))._fillProgramOptions={id:!1,pattern:!1},e._outlineProgramOptions={id:!1},e}return Object(i.a)(n,[{key:"dispose",value:function(){}},{key:"drawMany",value:function(e,t){var n,a=e.displayLevel,i=e.drawPhase,o=e.renderPass,r=e.spriteMosaic,l=e.styleLayerUID,s=!1,c=Object(y.a)(t);try{for(c.s();!(n=c.n()).done;){var u=n.value;if(u.layerData.has(l)){var f=u.layerData.get(l);if(f.fillIndexCount>0||f.outlineIndexCount>0){s=!0;break}}}}catch(w){c.e(w)}finally{c.f()}if(s){var v,d=e.styleLayer,m=d.getPaintProperty("fill-pattern"),_=void 0!==m,p=_&&m.isDataDriven;if(_&&!p){var g=m.getValue(a);v=r.getMosaicItemPosition(g,!0)}var h=!_&&d.getPaintValue("fill-antialias",a),x=!0,b=1;if(!_){var S=d.getPaintProperty("fill-color"),C=d.getPaintProperty("fill-opacity");if(!(null!=S&&S.isDataDriven||null!=C&&C.isDataDriven)){var O=d.getPaintValue("fill-color",a);(b=d.getPaintValue("fill-opacity",a)*O[3])>=1&&(x=!1)}}if(!x||"opaque"!==o){var T;i===D.c.HITTEST&&(T=Object(z.c)(l+1));var V=d.getPaintValue("fill-translate",a),P=d.getPaintValue("fill-translate-anchor",a);(x||"translucent"!==o)&&this._drawFill(e,l,d,t,V,P,_,v,p,T);var I=!d.hasDataDrivenOutlineColor&&d.outlineUsesFillColor&&b<1;h&&"opaque"!==o&&!I&&this._drawOutline(e,l,d,t,V,P,T)}}}},{key:"_drawFill",value:function(e,t,n,a,i,o,r,s,c,u){if(!r||!Object(v.j)(s)){var f=e.context,d=e.displayLevel,m=e.state,_=e.drawPhase,p=e.painter,g=e.pixelRatio,h=e.spriteMosaic,x=n.fillMaterial,b=p.vectorTilesMaterialManager,S=g>l.F?2:1,C=_===D.c.HITTEST,O=this._fillProgramOptions;O.id=C,O.pattern=r;var T=b.getMaterialProgram(f,x,O);if(f.useProgram(T),Object(v.k)(s)){var z=s.page,V=h.getPageSize(z);Object(v.k)(V)&&(h.bind(f,9729,z,l.H),T.setUniform2fv("u_mosaicSize",V),T.setUniform1i("u_texture",l.H))}T.setUniformMatrix3fv("u_displayMat3",1===o?m.displayMat3:m.displayViewMat3),T.setUniform2fv("u_fillTranslation",i),T.setUniform1f("u_depth",n.z+w),C&&T.setUniform4fv("u_id",u);var P,M=-1,A=Object(y.a)(a);try{for(A.s();!(P=A.n()).done;){var U=P.value;if(U.layerData.has(t)){U.key.level!==M&&(M=U.key.level,x.setDataUniforms(T,d,n,M,h));var E=U.layerData.get(t);if(E.fillIndexCount){E.prepareForRendering(f);var F=E.fillVertexArrayObject;if(!Object(v.j)(F)){if(f.bindVAO(F),T.setUniformMatrix3fv("u_dvsMat3",U.transforms.dvs),f.setStencilFunction(514,U.stencilRef,255),r){var L=Math.max(Math.pow(2,Math.round(d)-U.key.level),1),j=U.coordRange[0]/(S*U.size[0]*L);T.setUniform1f("u_patternFactor",j)}if(c){var k=E.patternMap;if(!k)continue;var R,N=Object(y.a)(k);try{for(N.s();!(R=N.n()).done;){var B=Object(I.a)(R.value,2),G=B[0],H=B[1],W=h.getPageSize(G);Object(v.k)(W)&&(h.bind(f,9729,G,l.H),T.setUniform2fv("u_mosaicSize",W),T.setUniform1i("u_texture",l.H),f.drawElements(4,H[1],5125,Uint32Array.BYTES_PER_ELEMENT*H[0]))}}catch(Z){N.e(Z)}finally{N.f()}}else f.drawElements(4,E.fillIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*E.fillIndexStart);U.triangleCount+=E.fillIndexCount/3}}}}}catch(Z){A.e(Z)}finally{A.f()}}}},{key:"_drawOutline",value:function(e,t,n,a,i,o,r){var l=e.context,s=e.displayLevel,c=e.state,u=e.drawPhase,f=e.painter,d=e.pixelRatio,m=e.spriteMosaic,_=n.outlineMaterial,p=f.vectorTilesMaterialManager,g=.75/d,h=u===D.c.HITTEST,x=this._outlineProgramOptions;x.id=h;var b=p.getMaterialProgram(l,_,x);l.useProgram(b),b.setUniformMatrix3fv("u_displayMat3",1===o?c.displayMat3:c.displayViewMat3),b.setUniform2fv("u_fillTranslation",i),b.setUniform1f("u_depth",n.z+w),b.setUniform1f("u_outline_width",g),h&&b.setUniform4fv("u_id",r);var S,C=-1,O=Object(y.a)(a);try{for(O.s();!(S=O.n()).done;){var T=S.value;if(T.layerData.has(t)){T.key.level!==C&&(C=T.key.level,_.setDataUniforms(b,s,n,C,m));var z=T.layerData.get(t);if(z.prepareForRendering(l),z.outlineIndexCount){var V=z.outlineVertexArrayObject;Object(v.j)(V)||(l.bindVAO(V),b.setUniformMatrix3fv("u_dvsMat3",T.transforms.dvs),l.setStencilFunction(514,T.stencilRef,255),l.drawElements(4,z.outlineIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*z.outlineIndexStart),T.triangleCount+=z.outlineIndexCount/3)}}}}catch(P){O.e(P)}finally{O.f()}}}]),n}(c.a),A=function(e){Object(o.a)(n,e);var t=Object(r.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments))._programOptions={id:!1,pattern:!1,sdf:!1},e}return Object(i.a)(n,[{key:"dispose",value:function(){}},{key:"drawMany",value:function(e,t){var n=e.context,a=e.displayLevel,i=e.state,o=e.drawPhase,r=e.painter,s=e.pixelRatio,c=e.spriteMosaic,u=e.styleLayerUID;if(t.some((function(e){var t,n;return null!=(t=null==(n=e.layerData.get(u))?void 0:n.lineIndexCount)&&t}))){var f,d,m=e.styleLayer,_=m.lineMaterial,p=r.vectorTilesMaterialManager,g=m.getPaintValue("line-translate",a),h=m.getPaintValue("line-translate-anchor",a),x=m.getPaintProperty("line-pattern"),b=void 0!==x,S=b&&x.isDataDriven;if(b&&!S){var C=x.getValue(a);f=c.getMosaicItemPosition(C)}var O=!1;if(!b){var T=m.getPaintProperty("line-dasharray");if(O=(d=void 0!==T)&&T.isDataDriven,d&&!O){var V=T.getValue(a),P=m.getDashKey(V,m.getLayoutValue("line-cap",a));f=c.getMosaicItemPosition(P)}}var w=1/s,M=o===D.c.HITTEST,A=this._programOptions;A.id=M,A.pattern=b,A.sdf=d;var U=p.getMaterialProgram(n,_,A);if(n.useProgram(U),U.setUniformMatrix3fv("u_displayViewMat3",i.displayViewMat3),U.setUniformMatrix3fv("u_displayMat3",1===h?i.displayMat3:i.displayViewMat3),U.setUniform2fv("u_lineTranslation",g),U.setUniform1f("u_depth",m.z),U.setUniform1f("u_antialiasing",w),M){var E=Object(z.c)(u+1);U.setUniform4fv("u_id",E)}if(f&&Object(v.k)(f)){var F=f.page,L=c.getPageSize(F);Object(v.k)(L)&&(c.bind(n,9729,F,l.H),U.setUniform2fv("u_mosaicSize",L),U.setUniform1i("u_texture",l.H))}var j,k=-1,R=Object(y.a)(t);try{for(R.s();!(j=R.n()).done;){var N=j.value;if(N.layerData.has(u)){N.key.level!==k&&(k=N.key.level,_.setDataUniforms(U,a,m,k,c));var B=Math.pow(2,a-k)/s;U.setUniform1f("u_zoomFactor",B);var G=N.layerData.get(u);if(G.lineIndexCount){G.prepareForRendering(n);var H=G.lineVertexArrayObject;if(!Object(v.j)(H)){if(n.bindVAO(H),U.setUniformMatrix3fv("u_dvsMat3",N.transforms.dvs),n.setStencilFunction(514,N.stencilRef,255),S||O){var W=G.patternMap;if(!W)continue;var Z,Y=Object(y.a)(W);try{for(Y.s();!(Z=Y.n()).done;){var q=Object(I.a)(Z.value,2),X=q[0],K=q[1],J=c.getPageSize(X);Object(v.k)(J)&&(c.bind(n,9729,X,l.H),U.setUniform2fv("u_mosaicSize",J),U.setUniform1i("u_texture",l.H),n.drawElements(4,K[1],5125,Uint32Array.BYTES_PER_ELEMENT*K[0]))}}catch($){Y.e($)}finally{Y.f()}}else n.drawElements(4,G.lineIndexCount,5125,Uint32Array.BYTES_PER_ELEMENT*G.lineIndexStart);N.triangleCount+=G.lineIndexCount/3}}}}}catch($){R.e($)}finally{R.f()}}}}]),n}(c.a),U=n(442),E=n(445),F=n(610),L=function(e){Object(o.a)(n,e);var t=Object(r.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments))._iconProgramOptions={id:!1,sdf:!1},e._sdfProgramOptions={id:!1},e._spritesTextureSize=Object(U.a)(),e}return Object(i.a)(n,[{key:"dispose",value:function(){}},{key:"drawMany",value:function(e,t){var n,a=e.drawPhase,i=e.styleLayerUID,o=e.styleLayer;a===D.c.HITTEST&&(n=Object(z.c)(i+1)),this._drawIcons(e,o,t,n),this._drawText(e,o,t,n)}},{key:"_drawIcons",value:function(e,t,n,a){var i,o,r=e.context,s=e.displayLevel,c=e.drawPhase,u=e.painter,f=e.spriteMosaic,d=e.state,m=e.styleLayerUID,_=t.iconMaterial,p=u.vectorTilesMaterialManager,g=!1,h=Object(y.a)(n);try{for(h.s();!(o=h.n()).done;){var x=o.value;if(x.layerData.has(m)&&(i=x.layerData.get(m)).iconPerPageElementsMap.size>0){g=!0;break}}}catch(H){h.e(H)}finally{h.f()}if(g){var b=t.getPaintValue("icon-translate",s),S=t.getPaintValue("icon-translate-anchor",s),C=t.getLayoutValue("icon-rotation-alignment",s);2===C&&(C=0===t.getLayoutValue("symbol-placement",s)?1:0);var O=0===C,T=t.getLayoutValue("icon-keep-upright",s)&&O,z=i.isIconSDF,V=c===D.c.HITTEST,P=this._iconProgramOptions;P.id=V,P.sdf=z;var w=p.getMaterialProgram(r,_,P);r.useProgram(w),w.setUniformMatrix3fv("u_displayViewMat3",0===C?d.displayViewMat3:d.displayMat3),w.setUniformMatrix3fv("u_displayMat3",1===S?d.displayMat3:d.displayViewMat3),w.setUniform2fv("u_iconTranslation",b),w.setUniform1f("u_depth",t.z),w.setUniform1f("u_mapRotation",Object(F.b)(d.rotation)),w.setUniform1f("u_keepUpright",T?1:0),w.setUniform1f("u_level",10*s),w.setUniform1i("u_texture",l.H),w.setUniform1f("u_fadeDuration",E.d/1e3),V&&w.setUniform4fv("u_id",a);var M,A=-1,U=Object(y.a)(n);try{for(U.s();!(M=U.n()).done;){var L=M.value;if(L.layerData.has(m)&&(L.key.level!==A&&(A=L.key.level,_.setDataUniforms(w,s,t,A,f)),0!==(i=L.layerData.get(m)).iconPerPageElementsMap.size)){i.prepareForRendering(r),i.updateOpacityInfo();var j=i.iconVertexArrayObject;if(!Object(v.j)(j)){r.bindVAO(j),w.setUniformMatrix3fv("u_dvsMat3",L.transforms.dvs),w.setUniform1f("u_time",(performance.now()-i.lastOpacityUpdate)/1e3);var k,R=Object(y.a)(i.iconPerPageElementsMap);try{for(R.s();!(k=R.n()).done;){var N=Object(I.a)(k.value,2),B=N[0],G=N[1];this._renderIconRange(e,w,G,B,L)}}catch(H){R.e(H)}finally{R.f()}}}}}catch(H){U.e(H)}finally{U.f()}}}},{key:"_renderIconRange",value:function(e,t,n,a,i){var o=e.context,r=e.spriteMosaic;this._spritesTextureSize[0]=r.getWidth(a)/4,this._spritesTextureSize[1]=r.getHeight(a)/4,t.setUniform2fv("u_mosaicSize",this._spritesTextureSize),r.bind(o,9729,a,l.H),o.setStencilTestEnabled(!0),o.setStencilFunction(516,255,255),o.setStencilWriteMask(0),o.drawElements(4,n[1],5125,Uint32Array.BYTES_PER_ELEMENT*n[0]),i.triangleCount+=n[1]/3}},{key:"_drawText",value:function(e,t,n,a){var i,o,r=this,s=e.context,c=e.displayLevel,u=e.drawPhase,f=e.glyphMosaic,d=e.painter,m=e.pixelRatio,_=e.spriteMosaic,p=e.state,g=e.styleLayerUID,h=t.textMaterial,x=d.vectorTilesMaterialManager,b=!1,S=Object(y.a)(n);try{for(S.s();!(o=S.n()).done;){var C=o.value;if(C.layerData.has(g)&&(i=C.layerData.get(g)).glyphPerPageElementsMap.size>0){b=!0;break}}}catch(Y){S.e(Y)}finally{S.f()}if(b){var O=t.getPaintProperty("text-opacity");if(!O||O.isDataDriven||0!==O.getValue(c)){var T=t.getPaintProperty("text-color"),z=!T||T.isDataDriven||T.getValue(c)[3]>0,V=t.getPaintProperty("text-halo-width"),P=t.getPaintProperty("text-halo-color"),I=(!V||V.isDataDriven||V.getValue(c)>0)&&(!P||P.isDataDriven||P.getValue(c)[3]>0);if(z||I){var w=t.getLayoutValue("text-rotation-alignment",c);2===w&&(w=0===t.getLayoutValue("symbol-placement",c)?1:0);var M=0===w,A=t.getLayoutValue("text-keep-upright",c)&&M,L=u===D.c.HITTEST,j=.8*3/m;this._glyphTextureSize||(this._glyphTextureSize=Object(U.b)(f.width/4,f.height/4));var k=t.getPaintValue("text-translate",c),R=t.getPaintValue("text-translate-anchor",c),N=this._sdfProgramOptions;N.id=L;var B=x.getMaterialProgram(s,h,N);s.useProgram(B),B.setUniformMatrix3fv("u_displayViewMat3",0===w?p.displayViewMat3:p.displayMat3),B.setUniformMatrix3fv("u_displayMat3",1===R?p.displayMat3:p.displayViewMat3),B.setUniform2fv("u_textTranslation",k),B.setUniform1f("u_depth",t.z+152587890625e-16),B.setUniform2fv("u_mosaicSize",this._glyphTextureSize),B.setUniform1f("u_mapRotation",Object(F.b)(p.rotation)),B.setUniform1f("u_keepUpright",A?1:0),B.setUniform1f("u_level",10*c),B.setUniform1i("u_texture",l.G),B.setUniform1f("u_antialiasingWidth",j),B.setUniform1f("u_fadeDuration",E.d/1e3),L&&B.setUniform4fv("u_id",a);var G,H=-1,W=Object(y.a)(n);try{var Z=function(){var e=G.value;if(!e.layerData.has(g))return"continue";if(e.key.level!==H&&(H=e.key.level,h.setDataUniforms(B,c,t,H,_)),0===(i=e.layerData.get(g)).glyphPerPageElementsMap.size)return"continue";i.prepareForRendering(s),i.updateOpacityInfo();var n=i.textVertexArrayObject;if(Object(v.j)(n))return"continue";s.bindVAO(n),B.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),s.setStencilTestEnabled(!0),s.setStencilFunction(516,255,255),s.setStencilWriteMask(0);var a=(performance.now()-i.lastOpacityUpdate)/1e3;B.setUniform1f("u_time",a),i.glyphPerPageElementsMap.forEach((function(t,n){r._renderGlyphRange(s,t,n,f,B,I,z,e)}))};for(W.s();!(G=W.n()).done;)Z()}catch(Y){W.e(Y)}finally{W.f()}}}}}},{key:"_renderGlyphRange",value:function(e,t,n,a,i,o,r,s){a.bind(e,9729,n,l.G),o&&(i.setUniform1f("u_halo",1),e.drawElements(4,t[1],5125,Uint32Array.BYTES_PER_ELEMENT*t[0]),s.triangleCount+=t[1]/3),r&&(i.setUniform1f("u_halo",0),e.drawElements(4,t[1],5125,Uint32Array.BYTES_PER_ELEMENT*t[0]),s.triangleCount+=t[1]/3)}}]),n}(c.a),j=n(35),k=n(483),R=function(e){Object(o.a)(n,e);var t=Object(r.a)(n);function n(){return Object(a.a)(this,n),t.apply(this,arguments)}return Object(i.a)(n,[{key:"prepareState",value:function(e,t,n){var a=e.context,i=n&&-1!==n.indexOf("id");a.setBlendingEnabled(!i),a.setBlendFunctionSeparate(1,771,1,771),a.setColorMask(!0,!0,!0,!0),a.setStencilWriteMask(0),a.setStencilTestEnabled(!0),a.setStencilFunction(514,t.stencilRef,255)}},{key:"draw",value:function(e,t,n){var a=this,i=this.getGeometryType();t.commit(e);var o=t.getGeometry(i);Object(v.j)(o)||(e.timeline.begin(this.name),e.attributeView.bindTextures(e.context),o.forEachCommand((function(i){return a.drawGeometry(e,t,i,n)})))}},{key:"_setSharedUniforms",value:function(e,t,n){var a=t.displayLevel,i=t.pixelRatio,o=t.state;e.setUniform1f("u_pixelRatio",i),e.setUniformMatrix3fv("u_dvsMat3",n.transforms.dvs),e.setUniformMatrix3fv("u_displayViewMat3",o.displayViewMat3),e.setUniform1f("u_currentZoom",Math.round(a*l.m)),e.setUniform1i("u_attributeTextureSize",t.attributeView.size),e.setUniform1i("u_attributeData0",l.r),e.setUniform1i("u_attributeData1",l.s),e.setUniform1i("u_attributeData2",l.t),e.setUniform1i("u_attributeData3",l.u)}}]),n}(c.a),N=n(596),B=function(e){Object(o.a)(n,e);var t=Object(r.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments))._dotTextureSize=0,e._dotTextures=null,e._dotSamplers=new Int32Array([l.z,l.A]),e}return Object(i.a)(n,[{key:"dispose",value:function(){this._disposeTextures()}},{key:"getGeometryType",value:function(){return D.d.FILL}},{key:"drawGeometry",value:function(e,t,n,a){var i=e.context,o=e.painter,r=e.rendererInfo,s=e.requiredLevel,c=N.a.load(n.materialKey),u=function(e){return Object(m.f)(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:5122},{location:1,name:"a_id",count:4,type:5121}].concat(Object(j.a)(e.dotDensity?[]:[{location:2,name:"a_color",count:4,type:5121,normalized:!0},{location:3,name:"a_tlbr",count:4,type:5123},{location:4,name:"a_aux1",count:4,type:5121},{location:5,name:"a_aux2",count:2,type:5123},{location:6,name:"a_aux3",count:4,type:5121},{location:7,name:"a_zoomRange",count:2,type:5123}]),Object(j.a)(e.dotDensity?[{location:2,name:"a_inverseArea",count:1,type:5126}]:[]))})}(c),f=u.bufferLayouts,v=u.attributes,d=o.materialManager.getMaterialProgram(e,c,"materials/fill",v,a);if(i.useProgram(d),this._setSharedUniforms(d,e,t),c.textureBinding){o.textureManager.bindTextures(i,d,c);var _=1/Math.pow(2,s-t.key.level)/e.pixelRatio;d.setUniform1f("u_zoomFactor",_)}if(c.vvColor&&(d.setUniform1fv("u_vvColorValues",r.vvColorValues),d.setUniform4fv("u_vvColors",r.vvColors)),c.vvOpacity&&(d.setUniform1fv("u_vvOpacityValues",r.vvOpacityValues),d.setUniform1fv("u_vvOpacities",r.vvOpacities)),c.dotDensity){var p=l.E/r.ddDotSize,g=p*window.devicePixelRatio*p*window.devicePixelRatio,h=1/Math.pow(2,s-t.key.level),x=1/h*(1/h),y=r.ddDotScale?e.state.scale/r.ddDotScale:1;d.setUniform1f("u_tileZoomFactor",h),d.setUniform1f("u_tileDotsOverArea",g/(l.E*window.devicePixelRatio*l.E*window.devicePixelRatio)),d.setUniformMatrix4fv("u_dotColors",r.ddColors),d.setUniform4fv("u_isActive",r.ddActiveDots),d.setUniform4fv("u_dotBackgroundColor",r.ddBackgroundColor),d.setUniform1f("u_dotValue",Math.max(1,r.ddDotValue*y*x)),this._bindDotDensityTextures(i,d,r,p)}n.draw(i,f,v)}},{key:"_disposeTextures",value:function(){if(this._dotTextures){for(var e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null}}},{key:"_bindDotDensityTextures",value:function(e,t,n,a){var i=this._createDotDensityTextures(e,a,n.ddSeed);t.setUniform1iv("u_dotTextures",this._dotSamplers);for(var o=0;o<i.length;o++)e.bindTexture(i[o],this._dotSamplers[o])}},{key:"_createDotDensityTextures",value:function(e,t,n){if(this._dotTextureSize===t&&this._seed===n||(this._disposeTextures(),this._dotTextureSize=t,this._seed=n),null===this._dotTextures){var a=new k.a(n);this._dotTextures=[this._allocDotDensityTexture(e,t,a),this._allocDotDensityTexture(e,t,a)]}return this._dotTextures}},{key:"_allocDotDensityTexture",value:function(e,t,n){for(var a=new Float32Array(t*t*4),i=0;i<a.length;i++)a[i]=n.getFloat();return new O.a(e,{wrapMode:10497,pixelFormat:6408,dataType:5126,samplingMode:9728,width:t,height:t},a)}}]),n}(R),G=function(e){Object(o.a)(n,e);var t=Object(r.a)(n);function n(){return Object(a.a)(this,n),t.apply(this,arguments)}return Object(i.a)(n,[{key:"dispose",value:function(){}},{key:"getGeometryType",value:function(){return D.d.LABEL}},{key:"drawGeometry",value:function(e,t,n,a){var i=e.context,o=e.painter,r=e.state,l=e.rendererInfo,s=N.b.load(n.materialKey),c=s.mapAligned?1:0;if(c||!(Math.abs(t.key.level-Math.round(100*e.displayLevel)/100)>=1)){var u=function(e){return Object(m.f)(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:5122},{location:1,name:"a_id",count:4,type:5121},{location:2,name:"a_color",count:4,type:5121,normalized:!0},{location:3,name:"a_haloColor",count:4,type:5121,normalized:!0},{location:4,name:"a_texAndSize",count:4,type:5121},{location:5,name:"a_refSymbolAndPlacementOffset",count:4,type:5121},{location:6,name:"a_glyphData",count:4,type:5121},{location:7,name:"a_vertexOffset",count:2,type:5122},{location:8,name:"a_texCoords",count:2,type:5123}]})}(s),f=u.bufferLayouts,v=u.attributes,d=o.materialManager.getMaterialProgram(e,s,"materials/label",v,a);e.context.setStencilFunction(514,0,255),i.useProgram(d),this._setSharedUniforms(d,e,t),o.textureManager.bindTextures(i,d,s);var _=1===c?r.displayViewMat3:r.displayMat3;if(s.vvSizeMinMaxValue&&d.setUniform4fv("u_vvSizeMinMaxValue",l.vvSizeMinMaxValue),s.vvSizeScaleStops&&d.setUniform1f("u_vvSizeScaleStopsValue",l.vvSizeScaleStopsValue),s.vvSizeFieldStops){var p=l.getSizeVVFieldStops(t.key.level);d.setUniform1fv("u_vvSizeFieldStopsValues",p.values),d.setUniform1fv("u_vvSizeFieldStopsSizes",p.sizes)}s.vvSizeUnitValue&&d.setUniform1f("u_vvSizeUnitValueWorldToPixelsRatio",l.vvSizeUnitValueToPixelsRatio),d.setUniform1f("u_mapRotation",Math.floor(r.rotation/360*254)),d.setUniform1f("u_mapAligned",c),d.setUniformMatrix3fv("u_displayMat3",_),d.setUniform1f("u_opacity",1),d.setUniform2fv("u_screenSize",e.state.size),d.setUniform1f("u_isHalo",1),n.draw(i,f,v),d.setUniform1f("u_isHalo",0),n.draw(i,f,v),i.setStencilTestEnabled(!0),i.setBlendingEnabled(!0)}}}]),n}(R),H=function(e){Object(o.a)(n,e);var t=Object(r.a)(n);function n(){return Object(a.a)(this,n),t.apply(this,arguments)}return Object(i.a)(n,[{key:"dispose",value:function(){}},{key:"getGeometryType",value:function(){return D.d.LINE}},{key:"drawGeometry",value:function(e,t,n,a){var i=e.context,o=e.painter,r=e.rendererInfo,l=e.displayLevel,s=N.c.load(n.materialKey),c=function(e){return Object(m.f)(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:5122},{location:1,name:"a_id",count:4,type:5121},{location:2,name:"a_color",count:4,type:5121,normalized:!0},{location:3,name:"a_offsetAndNormal",count:4,type:5120},{location:4,name:"a_accumulatedDistanceAndHalfWidth",count:2,type:5123},{location:5,name:"a_tlbr",count:4,type:5123},{location:6,name:"a_segmentDirection",count:4,type:5120},{location:7,name:"a_aux",count:2,type:5123},{location:8,name:"a_zoomRange",count:2,type:5123}]})}(s),u=c.bufferLayouts,f=c.attributes,v=o.materialManager.getMaterialProgram(e,s,"materials/line",f,a),d=1/e.pixelRatio;i.useProgram(v),this._setSharedUniforms(v,e,t),s.textureBinding&&o.textureManager.bindTextures(i,v,s);var _=Math.pow(2,l-t.key.level)/e.pixelRatio;if(v.setUniform1f("u_zoomFactor",_),v.setUniform1f("u_blur",0+d),v.setUniform1f("u_antialiasing",d),s.vvSizeMinMaxValue&&v.setUniform4fv("u_vvSizeMinMaxValue",r.vvSizeMinMaxValue),s.vvSizeScaleStops&&v.setUniform1f("u_vvSizeScaleStopsValue",r.vvSizeScaleStopsValue),s.vvSizeFieldStops){var p=r.getSizeVVFieldStops(t.key.level);v.setUniform1fv("u_vvSizeFieldStopsValues",p.values),v.setUniform1fv("u_vvSizeFieldStopsSizes",p.sizes)}s.vvSizeUnitValue&&v.setUniform1f("u_vvSizeUnitValueWorldToPixelsRatio",r.vvSizeUnitValueToPixelsRatio),s.vvColor&&(v.setUniform1fv("u_vvColorValues",r.vvColorValues),v.setUniform4fv("u_vvColors",r.vvColors)),s.vvOpacity&&(v.setUniform1fv("u_vvOpacityValues",r.vvOpacityValues),v.setUniform1fv("u_vvOpacities",r.vvOpacities)),i.setFaceCullingEnabled(!1),n.draw(i,u,f)}}]),n}(R),W=function(e){Object(o.a)(n,e);var t=Object(r.a)(n);function n(){return Object(a.a)(this,n),t.apply(this,arguments)}return Object(i.a)(n,[{key:"dispose",value:function(){}},{key:"getGeometryType",value:function(){return D.d.MARKER}},{key:"drawGeometry",value:function(e,t,n,a){var i=e.context,o=e.painter,r=e.rendererInfo,l=e.state,s=N.d.load(n.materialKey),c=function(e){return Object(m.f)(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:5122},{location:1,name:"a_vertexOffset",count:2,type:5122},{location:2,name:"a_texCoords",count:2,type:5123},{location:3,name:"a_bitSetAndDistRatio",count:2,type:5123},{location:4,name:"a_id",count:4,type:5121},{location:5,name:"a_color",count:4,type:5121,normalized:!0},{location:6,name:"a_outlineColor",count:4,type:5121,normalized:!0},{location:7,name:"a_sizeAndOutlineWidth",count:4,type:5121},{location:8,name:"a_zoomRange",count:2,type:5123}]})}(s),u=c.bufferLayouts,f=c.attributes,v=o.materialManager.getMaterialProgram(e,s,"materials/icon",f,a);i.useProgram(v),s.textureBinding&&o.textureManager.bindTextures(i,v,s,!0),this._setSharedUniforms(v,e,t);var d=s.vvRotation?l.displayViewMat3:l.displayMat3;if(v.setUniformMatrix3fv("u_displayMat3",d),s.vvSizeMinMaxValue&&v.setUniform4fv("u_vvSizeMinMaxValue",r.vvSizeMinMaxValue),s.vvSizeScaleStops&&v.setUniform1f("u_vvSizeScaleStopsValue",r.vvSizeScaleStopsValue),s.vvSizeFieldStops){var _=r.getSizeVVFieldStops(t.key.level);v.setUniform1fv("u_vvSizeFieldStopsValues",_.values),v.setUniform1fv("u_vvSizeFieldStopsSizes",_.sizes)}s.vvSizeUnitValue&&v.setUniform1f("u_vvSizeUnitValueWorldToPixelsRatio",r.vvSizeUnitValueToPixelsRatio),s.vvColor&&(v.setUniform1fv("u_vvColorValues",r.vvColorValues),v.setUniform4fv("u_vvColors",r.vvColors)),s.vvOpacity&&(v.setUniform1fv("u_vvOpacityValues",r.vvOpacityValues),v.setUniform1fv("u_vvOpacities",r.vvOpacities)),s.vvRotation&&v.setUniform1f("u_vvRotationType","geographic"===r.vvMaterialParameters.vvRotationType?0:1),n.draw(i,u,f)}}]),n}(R),Z=function(e){Object(o.a)(n,e);var t=Object(r.a)(n);function n(){return Object(a.a)(this,n),t.apply(this,arguments)}return Object(i.a)(n,[{key:"dispose",value:function(){}},{key:"getGeometryType",value:function(){return D.d.TEXT}},{key:"drawGeometry",value:function(e,t,n,a){var i=e.context,o=e.painter,r=e.rendererInfo,l=e.state,s=N.f.load(n.materialKey),c=function(e){return Object(m.f)(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:5122},{location:1,name:"a_id",count:4,type:5121},{location:2,name:"a_color",count:4,type:5121,normalized:!0},{location:3,name:"a_haloColor",count:4,type:5121,normalized:!0},{location:4,name:"a_texFontSize",count:4,type:5121},{location:5,name:"a_aux",count:4,type:5120},{location:6,name:"a_zoomRange",count:2,type:5123},{location:7,name:"a_vertexOffset",count:2,type:5122},{location:8,name:"a_texCoords",count:2,type:5123}]})}(s),u=c.bufferLayouts,f=c.attributes,v=o.materialManager.getMaterialProgram(e,s,"materials/text",f,a);if(i.useProgram(v),this._setSharedUniforms(v,e,t),o.textureManager.bindTextures(i,v,s),v.setUniformMatrix3fv("u_displayMat3",l.displayMat3),v.setUniformMatrix3fv("u_displayViewMat3",l.displayViewMat3),s.vvSizeMinMaxValue&&v.setUniform4fv("u_vvSizeMinMaxValue",r.vvSizeMinMaxValue),s.vvSizeScaleStops&&v.setUniform1f("u_vvSizeScaleStopsValue",r.vvSizeScaleStopsValue),s.vvSizeFieldStops){var d=r.getSizeVVFieldStops(t.key.level);v.setUniform1fv("u_vvSizeFieldStopsValues",d.values),v.setUniform1fv("u_vvSizeFieldStopsSizes",d.sizes)}s.vvSizeUnitValue&&v.setUniform1f("u_vvSizeUnitValueWorldToPixelsRatio",r.vvSizeUnitValueToPixelsRatio),s.vvColor&&(v.setUniform1fv("u_vvColorValues",r.vvColorValues),v.setUniform4fv("u_vvColors",r.vvColors)),s.vvOpacity&&(v.setUniform1fv("u_vvOpacityValues",r.vvOpacityValues),v.setUniform1fv("u_vvOpacities",r.vvOpacities)),s.vvRotation&&v.setUniform1f("u_vvRotationType","geographic"===r.vvMaterialParameters.vvRotationType?0:1),v.setUniform1f("u_isHalo",1),n.draw(i,u,f),v.setUniform1f("u_isHalo",0),n.draw(i,u,f)}}]),n}(R),Y=n(11),q=n(214),X=function(e){Object(o.a)(n,e);var t=Object(r.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments))._desc={lut:{vsPath:"raster/lut",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])},stretch:{vsPath:"raster/stretch",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])},hillshade:{vsPath:"raster/hillshade",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])}},e._rendererUniformInfos=new Map,e}return Object(i.a)(n,[{key:"dispose",value:function(){this._quad&&this._quad.dispose()}},{key:"prepareState",value:function(e,t){var n=e.context;n.setBlendingEnabled(!0),n.setBlendFunctionSeparate(1,771,1,771),n.setColorMask(!0,!0,!0,!0),n.setStencilWriteMask(0),n.setStencilTestEnabled(!0),n.setStencilFunction(514,t.stencilRef,255)}},{key:"draw",value:function(e,t){var n;if(t.source&&!t.suspended){e.timeline.begin(this.name);var a=!(null!=(n=e.context.capabilities.textureFloat)&&n.textureFloatLinear);t.updateTexture(e);var i=this.getShaderVariations(t,a),o=e.painter.materialManager.getProgram(e,this._desc[t.symbolizerParameters.type],i);this.drawWithProgram(e.context,o,t),e.timeline.end(this.name)}}},{key:"drawWithProgram",value:function(e,t,n){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[0,0],o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];this._quad||(this._quad=new s.a(e,[0,0,1,0,0,1,1,1]));var r=n.symbolizerParameters,l=n.transformGrid,c=n.width,u=n.height,f=n.opacity,v=r.type;e.useProgram(t);var d=this.getShaderVariations(n),m=this.getUniformInfos(v,e,t,d),_=n.getTextures(),p=_.names,g=_.textures;Object(q.j)(e,t,p,g);var h=Object(q.d)(a,i),x=Object(q.f)(l,[c,u],[n.source.width,n.source.height],f,o);if(Object(q.k)(t,m,Object(Y.a)(Object(Y.a)({u_coordScale:n.coordScale,u_dvsMat3:n.transforms.dvs},h),x)),r.colormap){var y=r.colormap,b=r.colormapOffset,S=Object(q.e)(y,b);Object(q.k)(t,m,S)}if("stretch"===r.type){var C=Object(q.h)(r);Object(q.k)(t,m,C)}else if("hillshade"===r.type){var O=Object(q.g)(r);Object(q.k)(t,m,O)}this._quad.draw()}},{key:"getUniformInfos",value:function(e,t,n,a){var i=a.length>0?e+"-"+a.join("-"):e;if(this._rendererUniformInfos.has(i))return this._rendererUniformInfos.get(i);var o=Object(q.i)(t,n);return this._rendererUniformInfos.set(i,o),o}},{key:"getShaderVariations",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=[];return"cubic"===e.interpolation?n.push("bicubic"):t&&"bilinear"===e.interpolation&&n.push("bilinear"),e.isRendereredSource?n.push("noop"):e.symbolizerParameters.colormap&&n.push("applyColormap"),e.transformGrid&&n.push("applyProjection"),n}}]),n}(c.a),K={marker:W,line:H,fill:B,text:Z,label:G,clip:g,stencil:x.a,bitmap:f,raster:X,tileInfo:h.a,vtlBackground:V,vtlFill:M,vtlLine:A,vtlCircle:P,vtlSymbol:L}},734:function(e,t,n){"use strict";var a=n(4),i=n(5),o=n(144),r=(n(440),n(13),n(102),n(338),n(539),n(143),n(266)),l=function(){function e(t,n){Object(a.a)(this,e),this.rctx=t,this._vertexBuffer=o.a.createVertex(t,35044,new Uint16Array(n)),this._vao=new r.a(t,new Map([["a_position",0]]),{geometry:[{name:"a_position",count:2,type:5122,offset:0,stride:4,normalized:!1}]},{geometry:this._vertexBuffer}),this._count=n.length/2}return Object(i.a)(e,[{key:"bind",value:function(){this._vao.bind()}},{key:"unbind",value:function(){this._vao.unbind()}},{key:"dispose",value:function(){this._vao.dispose(!1),this._vertexBuffer.dispose()}},{key:"draw",value:function(){this.rctx.bindVAO(this._vao),this.rctx.drawArrays(5,0,this._count)}}]),e}();t.a=l},758:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));n(144),n(440),n(13),n(102),n(338),n(539);var a=n(798),i=(n(143),n(266),{background:{"background.frag":"uniform lowp vec4 u_color;\nvoid main() {\ngl_FragColor = u_color;\n}","background.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump vec2 u_coord_range;\nuniform mediump float u_depth;\nvoid main() {\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\n}"},bitBlit:{"bitBlit.frag":"uniform lowp sampler2D u_tex;\nuniform lowp float u_opacity;\nvarying mediump vec2 v_uv;\nvoid main() {\nlowp vec4 color = texture2D(u_tex, v_uv);\ngl_FragColor = color *  u_opacity;\n}","bitBlit.vert":"attribute vec2 a_pos;\nattribute vec2 a_tex;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_pos, 0.0, 1.0);\nv_uv = a_tex;\n}"},blend:{"blend.frag":"precision mediump float;\nuniform sampler2D u_layerTexture;\nuniform lowp float u_opacity;\nuniform lowp float u_inFadeOpacity;\n#ifndef NORMAL\nuniform sampler2D u_backbufferTexture;\n#endif\nvarying mediump vec2 v_uv;\nfloat rgb2v(in vec3 c) {\nreturn max(c.x, max(c.y, c.z));\n}\nvec3 rgb2hsv(in vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(in vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec3 tint(in vec3 Cb, in vec3 Cs) {\nfloat vIn = rgb2v(Cb);\nvec3 hsvTint = rgb2hsv(Cs);\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\nreturn hsv2rgb(hsvOut);\n}\nfloat overlay(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\n}\nfloat colorDodge(in float Cb, in float Cs) {\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\n}\nfloat colorBurn(in float Cb, in float Cs) {\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\n}\nfloat hardLight(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\n}\nfloat reflectBlend(in float Cb, in float Cs) {\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\n}\nfloat softLight(in float Cb, in float Cs) {\nif (Cs <= 0.5) {\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\n}\nif (Cb <= 0.25) {\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\n}\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\n}\nfloat vividLight(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\n}\nfloat minv3(in vec3 c) {\nreturn min(min(c.r, c.g), c.b);\n}\nfloat maxv3(in vec3 c) {\nreturn max(max(c.r, c.g), c.b);\n}\nfloat lumv3(in vec3 c) {\nreturn dot(c, vec3(0.3, 0.59, 0.11));\n}\nfloat satv3(vec3 c) {\nreturn maxv3(c) - minv3(c);\n}\nvec3 clipColor(vec3 color) {\nfloat lum = lumv3(color);\nfloat mincol = minv3(color);\nfloat maxcol = maxv3(color);\nif (mincol < 0.0) {\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\n}\nif (maxcol > 1.0) {\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\n}\nreturn color;\n}\nvec3 setLum(vec3 cbase, vec3 clum) {\nfloat lbase = lumv3(cbase);\nfloat llum = lumv3(clum);\nfloat ldiff = llum - lbase;\nvec3 color = cbase + vec3(ldiff);\nreturn clipColor(color);\n}\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\n{\nfloat minbase = minv3(cbase);\nfloat sbase = satv3(cbase);\nfloat ssat = satv3(csat);\nvec3 color;\nif (sbase > 0.0) {\ncolor = (cbase - minbase) * ssat / sbase;\n} else {\ncolor = vec3(0.0);\n}\nreturn setLum(color, clum);\n}\nvoid main() {\nvec4 src = texture2D(u_layerTexture, v_uv);\n#ifdef NORMAL\ngl_FragColor = src *  u_opacity;\n#else\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\nfloat as = u_opacity * src.a;\nfloat ab = dst.a;\n#ifdef DESTINATION_OVER\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\n#endif\n#ifdef SOURCE_IN\nvec4 color = vec4(as * Cs * ab, as * ab);\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\ngl_FragColor = color + fadeColor;\n#endif\n#ifdef DESTINATION_IN\nvec4 color = vec4(ab * Cb * as, ab * as);\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\ngl_FragColor = color + fadeColor;\n#endif\n#ifdef SOURCE_OUT\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\n#endif\n#ifdef DESTINATION_OUT\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\n#endif\n#ifdef SOURCE_ATOP\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\n#endif\n#ifdef DESTINATION_ATOP\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\n#endif\n#ifdef XOR\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\nas * (1.0 - ab) + ab * (1.0 - as));\n#endif\n#ifdef MULTIPLY\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\nas + ab * (1.0 - as));\n#endif\n#ifdef SCREEN\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef OVERLAY\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef DARKEN\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef LIGHTER\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\n#endif\n#ifdef LIGHTEN\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR_DODGE\nvec3 f = vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR_BURN\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef HARD_LIGHT\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef SOFT_LIGHT\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef DIFFERENCE\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef EXCLUSION\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef INVERT\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\n#endif\n#ifdef VIVID_LIGHT\nvec3 f = vec3(vividLight(Cb.r, Cs.r),\nvividLight(Cb.g, Cs.g),\nvividLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef HUE\nvec3 f = setLumSat(Cs,Cb,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef SATURATION\nvec3 f = setLumSat(Cb,Cs,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR\nvec3 f = setLum(Cs,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef LUMINOSITY\nvec3 f = setLum(Cb,Cs);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef PLUS\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\n#endif\n#ifdef MINUS\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\n#endif\n#ifdef AVERAGE\nvec3 f = (Cb + Cs) / 2.0;\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef REFLECT\nvec3 f = vec3(reflectBlend(Cb.r, Cs.r),\nreflectBlend(Cb.g, Cs.g),\nreflectBlend(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#endif\n}","blend.vert":"attribute vec2 a_position;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_position , 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"},filtering:{"bicubic.glsl":"vec4 computeWeights(float v) {\nfloat b = 1.0 / 6.0;\nfloat v2 = v * v;\nfloat v3 = v2 * v;\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\nfloat w3 = b * v3;\nreturn vec4(w0, w1, w2, w3);\n}\nvec4 bicubicOffsetsAndWeights(float v) {\nvec4 w = computeWeights(v);\nfloat g0 = w.x + w.y;\nfloat g1 = w.z + w.w;\nfloat h0 = 1.0 - (w.y / g0) + v;\nfloat h1 = 1.0 + (w.w / g1) - v;\nreturn vec4(h0, h1, g0, g1);\n}\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\nvec2 texel = coords * texSize - 0.5;\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\nvec2 coords10 = coords + hgX.x * eX;\nvec2 coords00 = coords - hgX.y * eX;\nvec2 coords11 = coords10 + hgY.x * eY;\nvec2 coords01 = coords00 + hgY.x * eY;\ncoords10 = coords10 - hgY.y * eY;\ncoords00 = coords00 - hgY.y * eY;\nvec4 color00 = texture2D(sampler, coords00);\nvec4 color10 = texture2D(sampler, coords10);\nvec4 color01 = texture2D(sampler, coords01);\nvec4 color11 = texture2D(sampler, coords11);\ncolor00 = mix(color00, color01, hgY.z);\ncolor10 = mix(color10, color11, hgY.z);\ncolor00 = mix(color00, color10, hgX.z);\nreturn color00;\n}","bilinear.glsl":"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 texelStart = floor(coords * texSize);\nvec2 coord0 = texelStart / texSize;\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\nvec4 color0 = texture2D(sampler, coord0);\nvec4 color1 = texture2D(sampler, coord1);\nvec4 color2 = texture2D(sampler, coord2);\nvec4 color3 = texture2D(sampler, coord3);\nvec2 blend = fract(coords * texSize);\nvec4 color01 = mix(color0, color1, blend.x);\nvec4 color23 = mix(color2, color3, blend.x);\nreturn mix(color01, color23, blend.y);\n}","epx.glsl":"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\nvec2 invSize = 1.0 / texSize;\nvec2 texel = coords * texSize;\nvec2 texel_i = floor(texel);\nvec2 texel_frac = fract(texel);\nvec4 colorP = texture2D(sampler, texel_i * invSize);\nvec4 colorP1 = vec4(colorP);\nvec4 colorP2 = vec4(colorP);\nvec4 colorP3 = vec4(colorP);\nvec4 colorP4 = vec4(colorP);\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\ncolorP1 = colorA;\n}\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\ncolorP2 = colorB;\n}\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\ncolorP3 = colorC;\n}\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\ncolorP4 = colorD;\n}\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\nreturn mix(colorP12, colorP34, texel_frac.y);\n}"},fx:{integrate:{"integrate.frag":"precision mediump float;\nuniform lowp sampler2D u_sourceTexture;\nuniform lowp sampler2D u_maskTexture;\nuniform mediump float u_zoomLevel;\nuniform highp float u_timeDelta;\nuniform highp float u_animationTime;\nvarying highp vec2 v_texcoord;\n#include <materials/utils.glsl>\nvoid main()\n{\n#ifdef DELTA\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\nfloat flags = data0.r * 255.0;\nfloat groupMinZoom = data0.g * 255.0;\nfloat isVisible = getFilterBit(flags, 0);\nfloat wouldClip = step(groupMinZoom, u_zoomLevel);\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\nvec4 nextState = vec4(texel + direction * dt);\ngl_FragColor =  vec4(nextState);\n#elif defined(UPDATE)\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\ngl_FragColor = texel;\n#endif\n}","integrate.vert":"precision mediump float;\nattribute vec2 a_pos;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n}"}},highlight:{"blur.frag":"varying mediump vec2 v_texcoord;\nuniform mediump vec4 u_direction;\nuniform mediump mat4 u_channelSelector;\nuniform mediump float u_sigma;\nuniform sampler2D u_texture;\nmediump float gauss1(mediump vec2 dir) {\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\n}\nmediump vec4 selectChannel(mediump vec4 sample) {\nreturn u_channelSelector * sample;\n}\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\nmediump float w = gauss1(i * u_direction.xy);\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\nweight += w;\n}\nvoid main(void) {\nmediump float tot = 0.0;\nmediump float weight = 0.0;\naccumGauss1(-5.0, tot, weight);\naccumGauss1(-4.0, tot, weight);\naccumGauss1(-3.0, tot, weight);\naccumGauss1(-2.0, tot, weight);\naccumGauss1(-1.0, tot, weight);\naccumGauss1(0.0, tot, weight);\naccumGauss1(1.0, tot, weight);\naccumGauss1(2.0, tot, weight);\naccumGauss1(3.0, tot, weight);\naccumGauss1(4.0, tot, weight);\naccumGauss1(5.0, tot, weight);\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\n}","highlight.frag":"varying mediump vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform mediump float u_sigma;\nuniform sampler2D u_shade;\nuniform mediump vec2 u_minMaxDistance;\nmediump float estimateDistance() {\nmediump float y = texture2D(u_texture, v_texcoord)[3];\nconst mediump float y0 = 0.5;\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\nmediump float d = (y - y0) / m0;\nreturn d;\n}\nmediump vec4 shade(mediump float d) {\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\n}\nvoid main(void) {\nmediump float d = estimateDistance();\ngl_FragColor = shade(d);\n}","textured.vert":"attribute mediump vec2 a_position;\nattribute mediump vec2 a_texcoord;\nvarying mediump vec2 v_texcoord;\nvoid main(void) {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_texcoord = a_texcoord;\n}"},magnifier:{"magnifier.frag":"uniform lowp vec4 u_background;\nuniform mediump sampler2D u_readbackTexture;\nuniform mediump sampler2D u_maskTexture;\nuniform mediump sampler2D u_overlayTexture;\nuniform bool u_maskEnabled;\nuniform bool u_overlayEnabled;\nvarying mediump vec2 v_texCoord;\nconst lowp float barrelFactor = 1.1;\nlowp vec2 barrel(lowp vec2 uv) {\nlowp vec2 uvn = uv * 2.0 - 1.0;\nif (uvn.x == 0.0 && uvn.y == 0.0) {\nreturn vec2(0.5, 0.5);\n}\nlowp float theta = atan(uvn.y, uvn.x);\nlowp float r = pow(length(uvn), barrelFactor);\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\n}\nvoid main(void)\n{\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\ncolor = (color + (1.0 - color.a) * u_background);\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\ncolor *= mask;\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\n}","magnifier.vert":"precision mediump float;\nattribute mediump vec2 a_pos;\nuniform mediump vec4 u_drawPos;\nvarying mediump vec2 v_texCoord;\nvoid main(void)\n{\nv_texCoord = a_pos;\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\n}"},materials:{"attributeData.glsl":"uniform highp sampler2D u_attributeData0;\nuniform highp sampler2D u_attributeData1;\nuniform highp sampler2D u_attributeData2;\nuniform highp sampler2D u_attributeData3;\nuniform highp int u_attributeTextureSize;\nhighp vec2 getAttributeDataCoords(in highp vec4 id) {\nhighp vec4 texel = unpackDisplayIdTexel(id);\nhighp float size = float(u_attributeTextureSize);\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256 + int(texel.a) * 256 * 256 * 256);\nhighp float col = mod(u32, size);\nhighp float row = (u32 - col) / size;\nhighp float u = col / size;\nhighp float v = row / size;\nreturn vec2(u, v);\n}\nhighp vec4 getAttributeData0(in highp vec4 id) {\nvec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData0, coords);\n}\nhighp vec4 getAttributeData1(in highp vec4 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData1, coords);\n}\nhighp vec4 getAttributeData2(in highp vec4 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData2, coords);\n}\nhighp vec4 getAttributeData3(in highp vec4 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData3, coords);\n}\nfloat u88VVToFloat(in vec2 v) {\nbool isMagic = v.x == 255.0 && v.y == 255.0;\nif (isMagic) {\nreturn NAN_MAGIC_NUMBER;\n}\nreturn (v.x + v.y * float(0x100)) - 32768.0;\n}","constants.glsl":"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\nconst float SIGNED_BYTE_TO_UNSIGNED = 128.0;\nconst float POSITION_PRECISION = 1.0 / 8.0;\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\nconst float SOFT_EDGE_RATIO = 1.0;\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\nconst float THIN_LINE_HALF_WIDTH = 1.0;\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\nconst float OFFSET_PRECISION = 1.0 / 8.0;\nconst float OUTLINE_SCALE = 1.0 / 5.0;\nconst float SDF_FONT_SIZE = 24.0;\nconst float MAX_SDF_DISTANCE = 8.0;\nconst float PLACEMENT_PADDING = 8.0;\nconst float EPSILON = 0.0000001;\nconst int MAX_FILTER_COUNT = 2;\nconst int ATTR_VV_SIZE = 0;\nconst int ATTR_VV_COLOR = 1;\nconst int ATTR_VV_OPACITY = 2;\nconst int ATTR_VV_ROTATION = 3;\nconst highp float NAN_MAGIC_NUMBER = 1e-30;",fill:{"common.glsl":"#ifdef PATTERN\nuniform mediump vec2 u_mosaicSize;\n#endif\n#ifdef DOT_DENSITY\nuniform lowp vec4 u_isActive[ 2 ];\nuniform highp float u_dotValue;\nuniform highp float u_tileDotsOverArea;\nuniform highp float u_dotTextureDotCount;\nuniform mediump float u_tileZoomFactor;\n#endif\nvarying vec3 v_pos;\nvarying lowp float v_opacity;\nvarying lowp vec4 v_color;\nvarying highp vec4 v_id;\nvarying highp float v_flags;\n#ifdef PATTERN\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_tileTextureCoord;\n#endif\n#ifdef DOT_DENSITY\nvarying highp vec2 v_dotTextureCoords;\nvarying highp vec4 v_dotThresholds[ 2 ];\n#endif","fill.frag":"precision highp float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/fill/common.glsl>\n#ifdef PATTERN\nuniform lowp sampler2D u_texture;\n#endif\n#ifdef DOT_DENSITY\nuniform mediump mat4 u_dotColors[ 2 ];\nuniform sampler2D u_dotTextures[ 2 ];\nuniform vec4 u_dotBackgroundColor;\n#endif\nvoid main() {\n#ifdef ID\ngl_FragColor = v_id;\n#elif defined(PATTERN)\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\nlowp vec4 color = texture2D(u_texture, samplePos);\ngl_FragColor = v_opacity * v_color * color;\n#elif defined(DOT_DENSITY) && !defined(HIGHLIGHT)\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\n#ifdef DD_DOT_BLENDING\nvec4 isPositive0 = step(0.0, difference0);\nvec4 isPositive1 = step(0.0, difference1);\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\nfloat lessThanEqZero = step(weightSum, 0.0);\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\nfloat divisor = (weightSum + lessThanEqZero);\nvec4 weights0 = difference0 * isPositive0 / divisor;\nvec4 weights1 = difference1 * isPositive1 / divisor;\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\n#else\nfloat diffMax = max(max4(difference0), max4(difference1));\nfloat lessThanZero = step(diffMax, 0.0);\nfloat greaterOrEqZero = 1.0 - lessThanZero;\nvec4 isMax0 = step(diffMax, difference0);\nvec4 isMax1 = step(diffMax, difference1);\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\n#endif\ngl_FragColor = preEffectColor;\n#else\ngl_FragColor = v_opacity * v_color;\n#endif\n#ifdef HIGHLIGHT\ngl_FragColor.a = 1.0;\n#endif\n}","fill.vert":"precision highp float;\n#ifdef DOT_DENSITY\nattribute float a_inverseArea;\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\nvec4 a_aux3 = vec4(0.0);\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#else\nattribute vec4 a_color;\nattribute vec4 a_tlbr;\nattribute vec4 a_aux1;\nattribute vec2 a_aux2;\nattribute vec4 a_aux3;\nattribute vec2 a_zoomRange;\n#endif\n#include <materials/vcommon.glsl>\n#include <materials/fill/common.glsl>\n#ifdef DOT_DENSITY\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\n}\n#endif\nvoid main()\n{\nINIT;\nfloat a_bitSet = a_aux3.a;\nv_color     = getColor(a_color, a_bitSet, 0);\nv_opacity   = getOpacity();\nv_id        = norm(a_id);\nv_pos       = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\nv_flags     = getFilterFlags();\n#ifdef PATTERN\nvec2 aux2 = (1.0 / SIGNED_BYTE_TO_UNSIGNED) * a_aux2;\nfloat width = u_zoomFactor * a_aux1.x * aux2.x;\nfloat height = u_zoomFactor * a_aux1.y * aux2.y;\nfloat angle = C_256_TO_RAD * a_aux3.z;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\n-sinA / width, cosA / height, 0,\n0,            0,             1);\nvec2 symbolOffset = (a_aux1.zw - SIGNED_BYTE_TO_UNSIGNED) / vec2(width, height);\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\nv_tlbr = a_tlbr / u_mosaicSize.xyxy;\n#elif defined(DOT_DENSITY)\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\n#endif\ngl_Position = vec4(clip(v_color, v_pos, v_flags, a_zoomRange), 1.0);\n}"},icon:{"common.glsl":"uniform lowp vec2 u_mosaicSize;\nvarying lowp vec4 v_color;\nvarying highp vec4 v_id;\nvarying highp vec4 v_sizeTex;\nvarying mediump vec3 v_pos;\nvarying highp float v_filters;\nvarying lowp float v_opacity;\n#ifdef SDF\nvarying lowp vec4 v_outlineColor;\nvarying mediump float v_outlineWidth;\nvarying mediump float v_distRatio;\nvarying mediump float v_overridingOutlineColor;\nvarying mediump float v_isThin;\n#endif","icon.frag":"precision mediump float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <util/encoding.glsl>\n#include <materials/constants.glsl>\n#include <materials/icon/common.glsl>\nuniform lowp sampler2D u_texture;\nvoid main()\n{\nvec2 v_size = v_sizeTex.xy;\nvec2 v_tex  = v_sizeTex.zw;\n#ifdef SDF\nlowp vec4 fillPixelColor = v_color;\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\nfloat size = max(v_size.x, v_size.y);\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\nfloat outlineWidth = v_outlineWidth;\n#ifdef HIGHLIGHT\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\n#endif\nif (outlineWidth > 0.25) {\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\nfloat clampedOutlineSize = min(outlineWidth, size);\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\ngl_FragColor = v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\n}\nelse {\ngl_FragColor = v_opacity * fillPixelColor;\n}\n#else\nlowp vec4 texColor = texture2D(u_texture, v_tex);\ngl_FragColor = v_opacity * texColor;\n#endif\n#ifdef HIGHLIGHT\ngl_FragColor.a = step(1.0 / 255.0, gl_FragColor.a);\n#endif\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","icon.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_outlineColor;\nattribute vec4 a_sizeAndOutlineWidth;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nattribute vec2 a_bitSetAndDistRatio;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/icon/common.glsl>\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\n#ifdef VV_SIZE\nfloat r = getSize(baseSize.y) / referenceSize;\nbaseSize.xy *= r;\noffset.xy *= r;\nfloat scaleSymbolProportionally = getBit(bitSet, 3);\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\n#endif\nreturn baseSize;\n}\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\nfloat isMapAligned = getBit(a_bitSet, 0);\nvec3  offset       = getRotation() * vec3(in_offset, 0.0);\nreturn getMatrix(isMapAligned) * offset;\n}\nvoid main()\n{\nINIT;\nvec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\nvec2  a_offset = a_vertexOffset / 16.0;\nfloat a_outlineSize = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\nfloat a_bitSet = a_bitSetAndDistRatio.x;\nvec2 v_size = getMarkerSize(a_offset, a_size, a_outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\nvec2 v_tex      = a_texCoords / u_mosaicSize;\nv_color    = getColor(a_color, a_bitSet, 1);\nv_opacity  = getOpacity();\nv_id       = norm(a_id);\nv_filters  = getFilterFlags();\nv_pos      = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0) + getOffset(a_offset, a_bitSet);\nv_sizeTex  = vec4(v_size.xy, v_tex.xy);\n#ifdef SDF\nv_isThin   = getBit(a_bitSet, 2);\n#ifdef VV_COLOR\nv_overridingOutlineColor = v_isThin;\n#else\nv_overridingOutlineColor = 0.0;\n#endif\nv_outlineWidth = min(a_outlineSize, max(max(v_size.x, v_size.y) - 0.99, 0.0));\nv_outlineColor = a_outlineColor;\nv_distRatio = a_bitSetAndDistRatio.y / 126.0;\n#endif\ngl_Position = vec4(clip(v_color, v_pos, v_filters, a_zoomRange), 1.0);\n}"},label:{"common.glsl":"uniform mediump float u_zoomLevel;\nuniform mediump float u_mapRotation;\nuniform mediump float u_mapAligned;\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying mediump vec2 v_tex;\nvarying mediump vec4 v_color;\nvarying lowp vec4 v_animation;","label.frag":"#include <materials/text/text.frag>","label.vert":"precision highp float;\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texAndSize;\nattribute vec4 a_refSymbolAndPlacementOffset;\nattribute vec4 a_glyphData;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHalo;\nuniform float u_mapRotation;\nuniform float u_mapAligned;\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\nfloat glyphAngle = angle * 360.0 / 254.0;\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\nfloat z = 0.0;\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\nreturn z;\n}\nvoid main()\n{\nINIT;\nfloat groupMinZoom    = getMinZoom();\nfloat glyphMinZoom    = a_glyphData.x;\nfloat glyphMaxZoom    = a_glyphData.y;\nfloat glyphAngle      = a_glyphData.z;\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\nfloat fontSize           = a_texAndSize.z;\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\nv_color     = animation * ((1.0 - u_isHalo) * a_color + (u_isHalo * a_haloColor));\nv_opacity   = 1.0;\nv_tex       = a_texCoords / u_mosaicSize;\nv_edgeDistanceOffset = u_isHalo * haloSize / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\ngl_Position = vec4(applyFilterLabels(v_color, v_pos, getFilterFlags()), 1.0);\n#ifdef DEBUG\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\n#endif\n}"},line:{"common.glsl":"varying lowp vec4 v_color;\nvarying highp vec4 v_id;\nvarying mediump vec2 v_normal;\nvarying mediump float v_lineHalfWidth;\nvarying lowp float v_opacity;\nvarying highp vec3 v_pos;\n#ifdef PATTERN\nuniform mediump vec2 u_mosaicSize;\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_patternSize;\n#endif\n#if defined(PATTERN) || defined(SDF)\nvarying highp float v_accumulatedDistance;\n#endif","line.frag":"precision lowp float;\n#include <util/encoding.glsl>\n#include <materials/constants.glsl>\n#include <materials/line/common.glsl>\nuniform lowp float u_blur;\n#if defined(PATTERN) || defined(SDF)\nuniform sampler2D u_texture;\n#endif\n#ifdef SDF\nconst float sdfPatternHalfWidth = 15.5;\nuniform mediump float u_antialiasing;\n#endif\nvoid main()\n{\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(v_lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nmediump float fragDist = length(v_normal) * v_lineHalfWidth;\nlowp float alpha = clamp(thinLineFactor * (v_lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\n#if defined(SDF) && !defined(HIGHLIGHT)\nmediump float lineHalfWidth = v_lineHalfWidth;\nmediump float lineWidthRatio = max(lineHalfWidth - 0.55 * u_antialiasing, 0.25) / sdfPatternHalfWidth;\nmediump float relativeTexX = mod(v_accumulatedDistance * 0.5 / (lineWidthRatio * v_patternSize.x), 1.0);\nmediump float relativeTexY = 0.5 + 0.25 * v_normal.y;\nmediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexX, relativeTexY));\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\nfloat dist = d * lineHalfWidth;\nlowp vec4 fillPixelColor = v_opacity * alpha * clamp(0.5 - dist, 0.0, 1.0) * v_color;\ngl_FragColor = fillPixelColor;\n#elif defined(PATTERN) && !defined(HIGHLIGHT)\nmediump float lineHalfWidth = v_lineHalfWidth;\nmediump float adjustedPatternWidth = v_patternSize.x * 2.0 * lineHalfWidth / v_patternSize.y;\nmediump float relativeTexX = mod(v_accumulatedDistance / adjustedPatternWidth, 1.0);\nmediump float relativeTexY = 0.5 + 0.5 * v_normal.y;\nmediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexY, relativeTexX));\nlowp vec4 color = texture2D(u_texture, texCoord);\ngl_FragColor = v_opacity * alpha * v_color * color;\n#else\ngl_FragColor = v_opacity * alpha * v_color;\n#endif\n#ifdef HIGHLIGHT\ngl_FragColor.a = step(1.0 / 255.0, gl_FragColor.a);\n#endif\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","line.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_offsetAndNormal;\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\nattribute vec4 a_tlbr;\nattribute vec4 a_segmentDirection;\nattribute vec2 a_aux;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/line/common.glsl>\nconst float SCALE = 1.0 / 31.0;\nconst float WIDTH_SCALE = 1.0 / 1024.0;\nfloat getBaseLineHalfWidth(in float in_lineHalfWidth) {\n#ifdef VV_SIZE\nfloat referenceHalfWidth = a_aux.x * WIDTH_SCALE;\nfloat lineWidth = 2.0 * in_lineHalfWidth;\nreturn 0.5 * (in_lineHalfWidth / referenceHalfWidth) * getSize(lineWidth);\n#else\nreturn in_lineHalfWidth;\n#endif\n}\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\n#ifdef HIGHLIGHT\nhalfWidth = max(halfWidth, 2.0);\n#endif\nreturn halfWidth;\n}\nvec2 getDist(in vec2 offset, in float halfWidth) {\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nreturn thinLineFactor * halfWidth * offset * SCALE;\n}\nvoid main()\n{\nINIT;\nfloat a_bitSet          = a_segmentDirection.w;\nfloat a_accumulatedDist = a_accumulatedDistanceAndHalfWidth.x;\nfloat a_lineHalfWidth   = a_accumulatedDistanceAndHalfWidth.y * WIDTH_SCALE;\nfloat aa                = 0.5 * u_antialiasing;\nvec2  a_offset          = a_offsetAndNormal.xy;\nfloat baseWidth = getBaseLineHalfWidth(a_lineHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\nfloat z         = 2.0 * step(baseWidth, 0.0);\nvec2  dist      = getDist(a_offset, halfWidth);\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\nvec3  pos       = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0) + offset;\nv_color         = getColor(a_color, a_bitSet, 0);\nv_opacity       = getOpacity();\nv_lineHalfWidth = halfWidth;\nv_id            = norm(a_id);\nv_normal        = a_offsetAndNormal.zw * SCALE;\nv_pos           = vec3(pos.xy, z);\n#ifdef PATTERN\nv_tlbr          = a_tlbr / u_mosaicSize.xyxy;\nv_patternSize   = vec2(a_tlbr.z - a_tlbr.x, a_tlbr.w - a_tlbr.y);\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance = a_accumulatedDist * u_zoomFactor + dot(SCALE * a_segmentDirection.xy, dist);\n#endif\ngl_Position = vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\n}"},text:{"common.glsl":"uniform highp vec2 u_mosaicSize;\nvarying highp vec4 v_id;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nvarying lowp vec4 v_color;\nvarying highp vec2 v_tex;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying lowp float v_transparency;","text.frag":"precision mediump float;\n#include <materials/text/common.glsl>\nuniform lowp sampler2D u_texture;\nvoid main()\n{\nfloat SDF_CUTOFF = (2.0 / 8.0);\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\nlowp float dist = texture2D(u_texture, v_tex).a;\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\n#ifdef HIGHLIGHT\nedge /= 2.0;\n#endif\nlowp float aa = v_antialiasingWidth;\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\ngl_FragColor = alpha * v_color * v_opacity;\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","text.vert":"precision highp float;\n#include <materials/utils.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texFontSize;\nattribute vec4 a_aux;\nattribute vec2 a_zoomRange;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHalo;\nfloat getTextSize(in float baseSize, in float referenceSize) {\n#ifdef VV_SIZE\nreturn getSize(baseSize);\n#endif\nreturn baseSize;\n}\nvoid main()\n{\nINIT;\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\nfloat a_bitSet        = a_aux.w;\nfloat a_fontSize      = a_texFontSize.z;\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat fontSize      = getTextSize(a_fontSize, a_referenceSize);\nfloat scaleFactor   = fontSize / a_fontSize;\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\nvec3  offset        = getRotation() * vec3(scaleFactor * a_offset, 0.0);\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\nv_color   = u_isHalo * a_haloColor + (1.0 - u_isHalo) * getColor(a_color, a_bitSet, 1);\nv_opacity = getOpacity();\nv_id      = norm(a_id);\nv_tex     = a_texCoords / u_mosaicSize;\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\nv_edgeDistanceOffset = u_isHalo * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\n}"},"utils.glsl":"float rshift(in float u32, in int amount) {\nreturn floor(u32 / pow(2.0, float(amount)));\n}\nfloat getBit(in float bitset, in int bitIndex) {\nfloat offset = pow(2.0, float(bitIndex));\nreturn mod(floor(bitset / offset), 2.0);\n}\nfloat getFilterBit(in float bitset, in int bitIndex) {\nreturn getBit(bitset, bitIndex + 1);\n}\nfloat getHighlightBit(in float bitset) {\nreturn getBit(bitset, 0);\n}\nhighp vec4 unpackDisplayIdTexel(in highp vec4 bitset) {\nfloat isAggregate = getBit(bitset.a, 7);\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec4(bitset.rgba) - vec4(0.0, 0.0, 0.0, float(0x80)));\n}\nvec4 unpack(in float u32) {\nfloat r = mod(rshift(u32, 0), 255.0);\nfloat g = mod(rshift(u32, 8), 255.0);\nfloat b = mod(rshift(u32, 16), 255.0);\nfloat a = mod(rshift(u32, 24), 255.0);\nreturn vec4(r, g, b, a);\n}\nvec4 norm(in vec4 v) {\nreturn v /= 255.0;\n}\nfloat max4(vec4 target) {\nreturn max(max(max(target.x, target.y), target.z), target.w);\n}\nvec2 unpack_u8_nf32(vec2 bytes) {\nreturn (bytes - 127.0) / 127.0;\n}","vcommon.glsl":"#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/attributeData.glsl>\n#include <materials/vv.glsl>\nattribute vec2 a_pos;\nattribute highp vec4 a_id;\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform highp mat3 u_displayViewMat3;\nuniform highp float u_pixelRatio;\nuniform mediump float u_zoomFactor;\nuniform mediump float u_antialiasing;\nuniform mediump float u_currentZoom;\nvec4 VV_ADATA = vec4(0.0);\nvoid loadVisualVariableData(inout vec4 target) {\n#ifdef OES_TEXTURE_FLOAT\ntarget.rgba = getAttributeData2(a_id);\n#else\nvec4 data0 = getAttributeData2(a_id);\nvec4 data1 = getAttributeData3(a_id);\ntarget.r = u88VVToFloat(data0.rg * 255.0);\ntarget.g = u88VVToFloat(data0.ba * 255.0);\ntarget.b = u88VVToFloat(data1.rg * 255.0);\ntarget.a = u88VVToFloat(data1.ba * 255.0);\n#endif\n}\n#ifdef VV\n#define INIT loadVisualVariableData(VV_ADATA)\n#else\n#define INIT\n#endif\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\n#ifdef VV_COLOR\nfloat isColorLocked   = getBit(a_bitSet, index);\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\n#else\nreturn a_color;\n#endif\n}\nfloat getOpacity() {\n#ifdef VV_OPACITY\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\n#else\nreturn 1.0;\n#endif\n}\nfloat getSize(in float in_size) {\n#ifdef VV_SIZE\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\n#else\nreturn in_size;\n#endif\n}\nmat3 getRotation() {\n#ifdef VV_ROTATION\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\n#else\nreturn mat3(1.0);\n#endif\n}\nfloat getFilterFlags() {\n#ifdef IGNORES_SAMPLER_PRECISION\nreturn ceil(getAttributeData0(a_id).x * 255.0);\n#else\nreturn getAttributeData0(a_id).x * 255.0;\n#endif\n}\nvec4 getAnimationState() {\nreturn getAttributeData1(a_id);\n}\nfloat getMinZoom() {\nvec4 data0 = getAttributeData0(a_id) * 255.0;\nreturn data0.g;\n}\nmat3 getMatrix(float isMapAligned) {\nreturn isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\n}\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\n#ifdef INSIDE\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\n#elif defined(OUTSIDE)\npos.z += 2.0 * getFilterBit(filterFlags, 1);\n#elif defined(HIGHLIGHT)\n#if !defined(HIGHLIGHT_ALL)\npos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\n#endif\n#endif\npos.z += 2.0 * (step(minMaxZoom.y, u_currentZoom) + (1.0 - step(minMaxZoom.x, u_currentZoom)));\nreturn pos;\n}\nvec3 applyFilterLabels(inout vec4 color, inout vec3 pos, in float filterFlags) {\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\n#ifndef OUTSIDE_LABELS_VISIBLE\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\n#endif\nreturn pos;\n}","vv.glsl":"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\n#define VV_SIZE\n#endif\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\n#define VV\n#endif\n#ifdef VV_COLOR\nuniform highp float u_vvColorValues[8];\nuniform vec4 u_vvColors[8];\n#endif\n#ifdef VV_SIZE_MIN_MAX_VALUE\nuniform highp vec4 u_vvSizeMinMaxValue;\n#endif\n#ifdef VV_SIZE_SCALE_STOPS\nuniform highp float u_vvSizeScaleStopsValue;\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nuniform highp float u_vvSizeFieldStopsValues[6];\nuniform float u_vvSizeFieldStopsSizes[6];\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\n#endif\n#ifdef VV_OPACITY\nuniform highp float u_vvOpacityValues[8];\nuniform float u_vvOpacities[8];\n#endif\n#ifdef VV_ROTATION\nuniform lowp float u_vvRotationType;\n#endif\nbool isNan(float val) {\nreturn (val == NAN_MAGIC_NUMBER);\n}\n#ifdef VV_SIZE_MIN_MAX_VALUE\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nfloat interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\nreturn u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\n}\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nconst int VV_SIZE_N = 6;\nfloat getVVStopsSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nif (sizeValue <= u_vvSizeFieldStopsValues[0]) {\nreturn u_vvSizeFieldStopsSizes[0];\n}\nfor (int i = 1; i < VV_SIZE_N; ++i) {\nif (u_vvSizeFieldStopsValues[i] >= sizeValue) {\nfloat f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\nreturn mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\n}\n}\nreturn u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\n}\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nfloat getVVUnitValue(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nreturn u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\n}\n#endif\n#ifdef VV_OPACITY\nconst int VV_OPACITY_N = 8;\nfloat getVVOpacity(float opacityValue) {\nif (isNan(opacityValue)) {\nreturn 1.0;\n}\nif (opacityValue <= u_vvOpacityValues[0]) {\nreturn u_vvOpacities[0];\n}\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\nif (u_vvOpacityValues[i] >= opacityValue) {\nfloat f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\nreturn mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\n}\n}\nreturn u_vvOpacities[VV_OPACITY_N - 1];\n}\n#endif\n#ifdef VV_ROTATION\nmat4 getVVRotation(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat4(1, 0, 0, 0,\n0, 1, 0, 0,\n0, 0, 1, 0,\n0, 0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (u_vvRotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat4(cosA, sinA, 0, 0,\n-sinA,  cosA, 0, 0,\n0,     0, 1, 0,\n0,     0, 0, 1);\n}\nmat3 getVVRotationMat3(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat3(1, 0, 0,\n0, 1, 0,\n0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (u_vvRotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * -rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat3(cosA, -sinA, 0,\nsinA, cosA, 0,\n0,    0,    1);\n}\n#endif\n#ifdef VV_COLOR\nconst int VV_COLOR_N = 8;\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\nif (isNan(colorValue) || isColorLocked == 1.0) {\nreturn fallback;\n}\nif (colorValue <= u_vvColorValues[0]) {\nreturn u_vvColors[0];\n}\nfor (int i = 1; i < VV_COLOR_N; ++i) {\nif (u_vvColorValues[i] >= colorValue) {\nfloat f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\nreturn mix(u_vvColors[i-1], u_vvColors[i], f);\n}\n}\nreturn u_vvColors[VV_COLOR_N - 1];\n}\n#endif\nfloat getVVSize(in float size, in float vvSize)  {\n#ifdef VV_SIZE_MIN_MAX_VALUE\nreturn getVVMinMaxSize(vvSize, size);\n#elif defined(VV_SIZE_SCALE_STOPS)\nreturn u_vvSizeScaleStopsValue;\n#elif defined(VV_SIZE_FIELD_STOPS)\nfloat outSize = getVVStopsSize(vvSize, size);\nreturn isNan(outSize) ? size : outSize;\n#elif defined(VV_SIZE_UNIT_VALUE)\nreturn getVVUnitValue(vvSize, size);\n#else\nreturn size;\n#endif\n}"},"post-processing":{blit:{"blit.frag":"precision mediump float;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\ngl_FragColor = texture2D(u_texture, v_uv);\n}"},bloom:{composite:{"composite.frag":"precision mediump float;\nvarying vec2 v_uv;\nuniform sampler2D u_blurTexture1;\nuniform sampler2D u_blurTexture2;\nuniform sampler2D u_blurTexture3;\nuniform sampler2D u_blurTexture4;\nuniform sampler2D u_blurTexture5;\nuniform float u_bloomStrength;\nuniform float u_bloomRadius;\nuniform float u_bloomFactors[NUMMIPS];\nuniform vec3 u_bloomTintColors[NUMMIPS];\nfloat lerpBloomFactor(const in float factor) {\nfloat mirrorFactor = 1.2 - factor;\nreturn mix(factor, mirrorFactor, u_bloomRadius);\n}\nvoid main() {\ngl_FragColor = u_bloomStrength * (\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\n);\n}"},gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\n#define SIGMA RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = float(SIGMA);\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}"},luminosityHighPass:{"luminosityHighPass.frag":"precision mediump float;\nuniform sampler2D u_texture;\nuniform vec3 u_defaultColor;\nuniform float u_defaultOpacity;\nuniform float u_luminosityThreshold;\nuniform float u_smoothWidth;\nvarying vec2 v_uv;\nvoid main() {\nvec4 texel = texture2D(u_texture, v_uv);\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat v = dot(texel.xyz, luma);\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\ngl_FragColor = mix(outputColor, texel, alpha);\n}"}},blur:{gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nuniform float u_sigma;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = u_sigma;\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}"},"radial-blur":{"radial-blur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nconst float sampleDist = 1.0;\nconst float sampleStrength = 2.2;\nvoid main(void) {\nfloat samples[10];\nsamples[0] = -0.08;\nsamples[1] = -0.05;\nsamples[2] = -0.03;\nsamples[3] = -0.02;\nsamples[4] = -0.01;\nsamples[5] =  0.01;\nsamples[6] =  0.02;\nsamples[7] =  0.03;\nsamples[8] =  0.05;\nsamples[9] =  0.08;\nvec2 dir = 0.5 - v_uv;\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\ndir = dir / dist;\nvec4 color = texture2D(u_colorTexture,v_uv);\nvec4 sum = color;\nfor (int i = 0; i < 10; i++) {\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\n}\nsum *= 1.0 / 11.0;\nfloat t = dist * sampleStrength;\nt = clamp(t, 0.0, 1.0);\ngl_FragColor = mix(color, sum, t);\n}"}},dra:{"dra.frag":"precision mediump float;\nuniform sampler2D u_minColor;\nuniform sampler2D u_maxColor;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\nvec4 color = texture2D(u_texture, v_uv);\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\nvec3 colorUnpremultiply = color.rgb / color.a;\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\n}","min-max":{"min-max.frag":"#extension GL_EXT_draw_buffers : require\nprecision mediump float;\n#define CELL_SIZE 2\nuniform sampler2D u_minTexture;\nuniform sampler2D u_maxTexture;\nuniform vec2 u_srcResolution;\nuniform vec2 u_dstResolution;\nvarying vec2 v_uv;\nvoid main() {\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\nvec2 onePixel = vec2(1.0) / u_srcResolution;\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\nvec4 minColor = vec4(1.0);\nvec4 maxColor = vec4(0.0);\nfor (int y = 0; y < CELL_SIZE; ++y) {\nfor (int x = 0; x < CELL_SIZE; ++x) {\nvec2 offset = uv + vec2(x, y) * onePixel;\nminColor = min(minColor, texture2D(u_minTexture, offset));\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\n}\n}\ngl_FragData[0] = minColor;\ngl_FragData[1] = maxColor;\n}"}},"drop-shadow":{composite:{"composite.frag":"precision mediump float;\nuniform sampler2D u_layerFBOTexture;\nuniform sampler2D u_blurTexture;\nuniform vec4 u_shadowColor;\nvarying vec2 v_uv;\nvoid main() {\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\nvec4 blurColor = texture2D(u_blurTexture, v_uv);\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\n}"},"drop-shadow.vert":"precision mediump float;\nattribute vec2 a_position;\nuniform highp mat3 u_displayViewMat3;\nuniform highp vec2 u_offset;\nvarying vec2 v_uv;\nvoid main() {\nvec3 offset = u_displayViewMat3 * vec3(u_offset, 0.0);\ngl_Position = vec4(a_position, 0.0, 1.0) + vec4(offset, 0.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"},"edge-detect":{"frei-chen":{"frei-chen.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nvarying vec2 v_uv;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[9];\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\nvoid main() {\nG[0] = g0,\nG[1] = g1,\nG[2] = g2,\nG[3] = g3,\nG[4] = g4,\nG[5] = g5,\nG[6] = g6,\nG[7] = g7,\nG[8] = g8;\nmat3 I;\nfloat cnv[9];\nvec3 sample;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 9; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\n}"},sobel:{"sobel.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\n}"}},"edge-enhance":{"edge-enhance.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nvec4 color = texture2D(u_colorTexture, v_uv);\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\n}"},filterEffect:{"filterEffect.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform mat4 u_coefficients;\nvarying vec2 v_uv;\nvoid main() {\nvec4 color = texture2D(u_colorTexture, v_uv);\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\nfloat a = color.a;\ngl_FragColor = vec4(a * rgbw.rgb, a);\n}"},pp:{"pp.vert":"precision mediump float;\nattribute vec2 a_position;\nvarying vec2 v_uv;\nvoid main() {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"}},raster:{bitmap:{"bitmap.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform highp vec2 u_coordScale;\nuniform lowp float u_opacity;\n#include <filtering/bicubic.glsl>\nvoid main() {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\n#else\nvec4 color = texture2D(u_texture, v_texcoord);\n#endif\nfloat alpha = u_opacity * color.a;\ngl_FragColor = vec4(alpha * color.rgb, alpha);\n}","bitmap.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},common:{"common.glsl":"uniform sampler2D u_image;\nuniform int u_bandCount;\nuniform bool u_isFloatTexture;\nuniform bool u_flipY;\nuniform float u_opacity;\nuniform int u_resampling;\nuniform vec2 u_srcImageSize;\n#ifdef APPLY_PROJECTION\n#include <raster/common/projection.glsl>\n#endif\n#ifdef BICUBIC\n#include <filtering/bicubic.glsl>\n#endif\n#ifdef BILINEAR\n#include <filtering/bilinear.glsl>\n#endif\nvec2 getPixelLocation(vec2 coords) {\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\n#ifdef APPLY_PROJECTION\ntargetLocation = projectPixelLocation(targetLocation);\n#endif\nreturn targetLocation;\n}\nbool isOutside(vec2 coords){\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\nreturn true;\n} else {\nreturn false;\n}\n}\nvec4 getPixel(vec2 pixelLocation) {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\n#elif defined(BILINEAR)\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\n#else\nvec4 color = texture2D(u_image, pixelLocation);\n#endif\nreturn color;\n}","contrastBrightness.glsl":"uniform float u_contrastOffset;\nuniform float u_brightnessOffset;\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\nfloat maxI = 255.0;\nfloat mid = 128.0;\nfloat c = u_contrastOffset;\nfloat b = u_brightnessOffset;\nvec4 v;\nif (c > 0.0 && c < 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\n} else if (c <= 0.0 && c > -100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\n} else if (c == 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\nv = (sign(v) + 1.0) / 2.0;\n} else if (c == -100.0) {\nv = vec4(mid, mid, mid, currentPixel.a);\n}\nreturn vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\n}","projection.glsl":"uniform sampler2D u_transformGrid;\nuniform vec2 u_transformSpacing;\nuniform vec2 u_transformGridSize;\nuniform vec2 u_targetImageSize;\nvec2 projectPixelLocation(vec2 coords) {\nvec2 index_image = floor(coords * u_targetImageSize);\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\nvec2 srcLocation;\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\nif (pos.s <= pos.t) {\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\n} else {\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\n}\nreturn srcLocation;\n}"},hillshade:{"hillshade.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform int u_hillshadeType;\nuniform float u_sinZcosAs[6];\nuniform float u_sinZsinAs[6];\nuniform float u_cosZs[6];\nuniform float u_weights[6];\nuniform vec2 u_factor;\nuniform float u_minValue;\nuniform float u_maxValue;\n#include <raster/lut/colorize.glsl>\nfloat getNeighborHoodAlpha(float a, float b, float c, float d, float e, float f, float g, float h, float i){\nif (a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0) {\nreturn 0.0;\n}\nelse {\nreturn e;\n}\n}\nvec3 rgb2hsv(vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\nvec3 hsv = rgb2hsv(rgb.xyz);\nhsv.z = hillshade;\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nif (currentPixel.a == 0.0) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec2 axy = vec2(-1.0, -1.0);\nvec2 bxy = vec2(0.0, -1.0);\nvec2 cxy = vec2(1.0, -1.0);\nvec2 dxy = vec2(-1.0, 0.0);\nvec2 fxy = vec2(1.0, 0.0);\nvec2 gxy = vec2(-1.0, 1.0);\nvec2 hxy = vec2(0.0, 1.0);\nvec2 ixy = vec2(1.0, 1.0);\nvec2 onePixel = 1.0 / u_srcImageSize;\nif (pixelLocation.s < onePixel.s) {\naxy[0] = 1.0;\ndxy[0] = 1.0;\ngxy[0] = 1.0;\n}\nif (pixelLocation.t < onePixel.t) {\naxy[1] = 1.0;\nbxy[1] = 1.0;\ncxy[1] = 1.0;\n}\nif (pixelLocation.s > 1.0 - onePixel.s) {\ncxy[0] = -1.0;\nfxy[0] = -1.0;\nixy[0] = -1.0;\n}\nif (pixelLocation.t > 1.0 - onePixel.t) {\ngxy[1] = -1.0;\nhxy[1] = -1.0;\nixy[1] = -1.0;\n}\nvec4 va = texture2D(u_image, pixelLocation + onePixel * axy);\nvec4 vb = texture2D(u_image, pixelLocation + onePixel * bxy);\nvec4 vc = texture2D(u_image, pixelLocation + onePixel * cxy);\nvec4 vd = texture2D(u_image, pixelLocation + onePixel * dxy);\nvec4 ve = texture2D(u_image, pixelLocation);\nvec4 vf = texture2D(u_image, pixelLocation + onePixel * fxy);\nvec4 vg = texture2D(u_image, pixelLocation + onePixel * gxy);\nvec4 vh = texture2D(u_image, pixelLocation + onePixel * hxy);\nvec4 vi = texture2D(u_image, pixelLocation + onePixel * ixy);\nfloat dzx = (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r * u_factor.s;\nfloat dzy = (vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r * u_factor.t;\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\nfloat hillshade = 0.0;\nif (u_hillshadeType == 0){\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\nif (z < 0.0)  z = 0.0;\nhillshade = z;\n} else {\nfor (int k = 0; k < 6; k++) {\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\nif (z < 0.0) z = 0.0;\nhillshade = hillshade + z * u_weights[k];\nif (k == 5) break;\n}\n}\nfloat alpha = getNeighborHoodAlpha(va.a, vb.a, vc.a, vd.a, ve.a, vf.a, vg.a, vh.a, vi.a);\n#ifdef APPLY_COLORMAP\ngl_FragColor = overlay(ve.r, u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\n#else\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\n#endif\n}","hillshade.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},lut:{"colorize.glsl":"uniform sampler2D u_colormap;\nuniform float u_colormapOffset;\nuniform float u_colormapMaxIndex;\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\nvec4 color = texture2D(u_colormap, clrPosition);\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\nreturn result;\n}","lut.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\n#include <raster/lut/colorize.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nvec4 result = colorize(currentPixel, 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\n}","lut.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos * u_scale + u_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},stretch:{"stretch.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform float u_minCutOff[3];\nuniform float u_maxCutOff[3];\nuniform float u_minOutput;\nuniform float u_maxOutput;\nuniform float u_factor[3];\nuniform bool u_useGamma;\nuniform float u_gamma[3];\nuniform float u_gammaCorrection[3];\n#include <raster/lut/colorize.glsl>\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\nif (val >= maxCutOff) {\nreturn maxOutput;\n} else if (val <= minCutOff) {\nreturn minOutput;\n}\nfloat stretchedVal;\nif (useGamma) {\nfloat tempf = 1.0;\nfloat outRange = maxOutput - minOutput;\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\nif (gamma > 1.0) {\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\n}\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\n} else {\nstretchedVal = minOutput + (val - minCutOff) * factor;\n}\nreturn stretchedVal;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\n#ifdef NOOP\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\nreturn;\n#endif\nif (u_bandCount == 1) {\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\n#ifdef APPLY_COLORMAP\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\n#else\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\n#endif\n} else {\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\n}\n}","stretch.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos * u_scale + u_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"}},stencil:{"stencil.frag":"void main() {\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n}","stencil.vert":"attribute vec2 a_pos;\nvoid main() {\ngl_Position = vec4(a_pos, 0.0, 1.0);\n}"},tileInfo:{"tileInfo.frag":"uniform mediump sampler2D u_texture;\nvarying mediump vec2 v_tex;\nvoid main(void) {\nlowp vec4 color = texture2D(u_texture, v_tex);\ngl_FragColor = 0.75 * color;\n}","tileInfo.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump float u_depth;\nuniform mediump vec2 u_coord_ratio;\nuniform mediump vec2 u_delta;\nuniform mediump vec2 u_dimensions;\nvarying mediump vec2 v_tex;\nvoid main() {\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\nv_tex = a_pos;\n}"},util:{"encoding.glsl":"const vec4 rgba2float_factors = vec4(\n255.0 / (256.0),\n255.0 / (256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n);\nfloat rgba2float(vec4 rgba) {\nreturn dot(rgba, rgba2float_factors);\n}"}});var o=new a.a((function(e){var t=i;return e.split("/").forEach((function(e){t&&(t=t[e])})),t}));function r(e){return o.resolveIncludes(e)}},798:function(e,t,n){"use strict";var a=n(4),i=n(5),o=function(){function e(t){Object(a.a)(this,e),this.readFile=t}return Object(i.a)(e,[{key:"resolveIncludes",value:function(e){return this.resolve(e)}},{key:"resolve",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Map;if(n.has(e))return n.get(e);var a=this.read(e);if(!a)throw new Error("cannot find shader file ".concat(e));for(var i=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm,o=i.exec(a),r=[];null!=o;)r.push({path:o[1],start:o.index,length:o[0].length}),o=i.exec(a);var l=0,s="";return r.forEach((function(e){s+=a.slice(l,e.start),s+=n.has(e.path)?"":t.resolve(e.path,n),l=e.start+e.length})),s+=a.slice(l),n.set(e,s),s}},{key:"read",value:function(e){return this.readFile(e)}}]),e}();t.a=o},888:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var a=n(758),i={shaders:{vertexShader:Object(a.a)("background/background.vert"),fragmentShader:Object(a.a)("background/background.frag")},attributes:new Map([["a_pos",0]])}}}]);
//# sourceMappingURL=1.d0a71aca.chunk.js.map